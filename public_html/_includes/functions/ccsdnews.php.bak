<?php
/***
#	@ file		: ccsdnews.php
#	@ location	: /www/apache/htdocs/ccsd/_includes
#	@ author	: carroll
#	@ purpose	: ccsd news functions
# 	@ created	: 2012-01-04 0922
# 	@ modified	: 2012-09-05 0904 carroll
#	@ previous	: 2012-07-24 1037 carroll
#	+ 
#	+ 
***/

# get featured news and events

function get_featured_news_events_bak() {
	
	global $_dB_ccsd;
	
	# trying to do more with MYSQL here, save on PHP side
	$query = "SELECT id, category, title, description, post_date, unique_url, featured_img, FROM_UNIXTIME(post_date, '%W, %M %e, %Y') date"
		# select the table
		.' FROM 2012ccsd.newsevents'
		# featured only
		." WHERE is_featured = 1 AND (featured_img IS NOT NULL OR featured_img != '')"
		# only posts from today and before
		.' AND ( post_date <= UNIX_TIMESTAMP() )'
		# order by post date
		.' ORDER BY post_date DESC'
		# limit the grab
		.' LIMIT 5';
	
	# execute
	$result = mysql_query($query, $_dB_ccsd);
	
	# storage
	$retarr = array();
	while($row = mysql_fetch_assoc($result))
		$retarr[] = $row;
	
	# return data
	return $retarr;
}

function get_featured_news_events() {
	
	global $_dB_ccsd;
	
	# trying to do more with MYSQL here, save on PHP side
	$query = "SELECT id, category, title, description, post_date, unique_url, featured_img, featured_img_s,  FROM_UNIXTIME(post_date, '%W, %M %e, %Y') date"
		# select the table
		.' FROM 2012ccsd.newsevents'
		# featured only
		." WHERE is_featured = 1 AND (featured_img IS NOT NULL OR featured_img != '')"
		# only posts from today and before
		.' AND ( post_date <= UNIX_TIMESTAMP() )'
		# order by post date
		.' ORDER BY post_date DESC'
		# limit the grab
		.' LIMIT 5';
	
	# execute
	$result = mysql_query($query, $_dB_ccsd);
	
	# storage
	$retarr = array();
	while($row = mysql_fetch_assoc($result))
		$retarr[] = $row;
	
	# return data
	return $retarr;
}

function get_trending() {
	global $_dB_ccsd;
	
	# get the trending cache from mysql
	$trending_q = 'SELECT page, uri FROM 2012ccsd.trending ORDER BY visitors DESC LIMIT 8';
	$trending_r = @mysql_query($trending_q, $_dB_ccsd);
	
	$pages = array();
	while($row = mysql_fetch_assoc($trending_r))
		$pages[] = $row;
	
	//shuffle($pages);
	
	$html = '';
	foreach($pages as $key=>$page)
		$html .= '<li class="trend-item"><a href="'.$page['uri'].'">'.$page['page'].'</a></li>';
	return $html;
}

function get_featured_news_events_nr() {
	
	global $_dB_nr_ccsd;
	
	# trying to do more with MYSQL here, save on PHP side
	$query = 'SELECT *'
		# select the table
		.' FROM newsroom.wp_posts'
		# JOIN terms to search for featured
		.' JOIN newsroom.wp_term_relationships'
		.' ON wp_term_relationships.object_id = wp_posts.ID'
		# 95 is the id for Featured Stories
		.' WHERE wp_term_relationships.term_taxonomy_id = 95'
		.' AND wp_posts.post_status = \'publish\''
		# Set order from most recently added
		.' ORDER BY wp_posts.post_date DESC'
		# limit the grab
		.' LIMIT 5';
	# execute
	$result = mysql_query($query, $_dB_nr_ccsd);
	
	# storage
	$retarr = array();
	while($row = mysql_fetch_assoc($result))
		$retarr[] = $row;
	
	# return data
	return $retarr;
}

function get_featured_news_events_nr_child($id) {
	
	global $_dB_nr_ccsd;
	
	# trying to do more with MYSQL here, save on PHP side
	$query = 'SELECT *'
		# select the table
		.' FROM newsroom.wp_posts'
		.' WHERE wp_posts.post_parent = ' . $id
		.' AND post_type = \'attachment\'';
	# execute
	$result = mysql_query($query, $_dB_nr_ccsd);
	
	# storage
	$retarr = array();
	while($row = mysql_fetch_assoc($result))
		$retarr[] = $row;
	
	# return data
	return $retarr;
}

function ccsdnews_url($p) {
	/*
		p array: section, date, title
	*/
	# section
	$p[0] = $p[0];
	# the date
	$p[1] = date('Y/M/j', $p[1]);
	# title, clean uri string
	$p[2] = preg_replace("/[^a-zA-Z0-9-\s]/", '', $p[2]);
	# title: change + to -, cleaner
	$p[2] = str_replace('+', '-', urlencode($p[2]));
	# title: multiple -- replaced with single -
	$p[2] = trim(preg_replace('/-+/', '-', $p[2]), '-');

	return strtolower(implode('/', $p));
}

function get_ccsd_news_and_events($archive = null, $section=NULL, $start = 0, $limit = 10) {
	
	global $_dB_ccsd;
	$retarr = array();
		
	if(!empty($archive)) {
		
		$filter = array();
	
		# filter by section
		if(!empty($archive['section']))
			$filter['section'] = $archive['section'];
		
		# year only
		if(!empty($archive['year']) && empty($archive['month']) && empty($archive['day'])) {
			$filter['date_start']	= mktime(0,0,0,1,1,$archive['year']);
			$filter['date_end']		= mktime(23,59,59,12,31,$archive['year']);
		}
		# year and month
		if(!empty($archive['year']) && !empty($archive['month']) && empty($archive['day'])) {
			
			$month 					= date('n', strtotime($archive['month']));
			
			# get the number of days in the month
			$days_in_month 			= cal_days_in_month(CAL_GREGORIAN, $month, $archive['year']);
			
			$filter['date_start']	= mktime(0,0,0,$month,1,$archive['year']);
			$filter['date_end']		= mktime(23,59,59,$month,$days_in_month,$archive['year']);
		}
		# by day
		if(!empty($archive['year']) && !empty($archive['month']) && !empty($archive['day'])) {
			
			$month = date('n', strtotime($archive['month']));
			$filter['date_start']	= mktime(0,0,0,$month,$archive['day'],$archive['year']);
			$filter['date_end']		= mktime(23,59,59,$month,$archive['day'],$archive['year']);
		}
		
		# by title
		if(!empty($archive['title'])) { //!empty($archive['section']) && !empty($archive['date_start']) && 
			$filter['url'] = ccsdnews_url(array($archive['section'], $filter['date_start'], $archive['title']));
		}
	}
	

	
	### GET ARTICLES
	$query = 'SELECT id, is_event, category, title, description, article_img, article_img_s, attachment, post_date, event_start, event_end, unique_url,'
				." FROM_UNIXTIME(post_date, '%W, %M %e, %Y') date"
				.' FROM 2012ccsd.newsevents'
				.' WHERE id IS NOT NULL';
		
		if($section) {
			$query .=' AND category="'.$section.'"';
		} 
		
		# filter specific article
		if(!empty($filter['url'])) {
		
			# apply filter for specific article
			$query .= " AND unique_url = '".$filter['url']."'";
		
		} else {
		
			# only posts from today and before
			$query .= (!isset($filter) ? ' AND post_date <= UNIX_TIMESTAMP()' : '');
			
			# apply filter for category
			$query .= (!empty($filter['section']) ? " AND category = '".$filter['section']."'" : '');
			
			# apply filter for date range
			$query .= (isset($filter['date_start']) && isset($filter['date_end']) ? ' AND ( post_date >= '.$filter['date_start'].' AND post_date <= '.$filter['date_end'].' )' : '');

		}

		# sort all by date (newest to oldest)
		$query .= ' ORDER BY post_date DESC';
		
		# if not showing all, limit results
		$query .= " LIMIT $start, $limit";

	# execute
	$result = mysql_query($query, $_dB_ccsd); // or die(handle_error('runtime-level1'));
	
	# storage
	$news = array();
	while($row = mysql_fetch_assoc($result)) {
		$retarr[] = $row;
	}
	
	return $retarr;
	
}


function get_ccsd_news_and_events2($archive = null, $section=NULL, $start = 0, $limit = 10) {
	
	global $_dB_ccsd;
	$retarr = array();
		
	if(!empty($archive)) {
		
		$filter = array();
	
		# filter by section
		if(!empty($archive['section']))
			$filter['section'] = $archive['section'];
		
		# year only
		if(!empty($archive['year']) && empty($archive['month']) && empty($archive['day'])) {
			$filter['date_start']	= mktime(0,0,0,1,1,$archive['year']);
			$filter['date_end']		= mktime(23,59,59,12,31,$archive['year']);
		}
		# year and month
		if(!empty($archive['year']) && !empty($archive['month']) && empty($archive['day'])) {
			
			$month 					= date('n', strtotime($archive['month']));
			
			# get the number of days in the month
			$days_in_month 			= cal_days_in_month(CAL_GREGORIAN, $month, $archive['year']);
			
			$filter['date_start']	= mktime(0,0,0,$month,1,$archive['year']);
			$filter['date_end']		= mktime(23,59,59,$month,$days_in_month,$archive['year']);
		}
		# by day
		if(!empty($archive['year']) && !empty($archive['month']) && !empty($archive['day'])) {
			
			$month = date('n', strtotime($archive['month']));
			$filter['date_start']	= mktime(0,0,0,$month,$archive['day'],$archive['year']);
			$filter['date_end']		= mktime(23,59,59,$month,$archive['day'],$archive['year']);
		}
		
		# by title
		if(!empty($archive['title'])) { //!empty($archive['section']) && !empty($archive['date_start']) && 
			$filter['url'] = ccsdnews_url(array($archive['section'], $filter['date_start'], $archive['title']));
		
			//if(empty($filter['date_start']))
			//	mail('rcarroll@interact.ccsd.net', 'ccsd news date', arr_to_str($_SERVER));
		}
	}
	
	
	### GET ARTICLES
	$query = 'SELECT id, is_event, category, title, description, article_img, article_img_s, attachment, post_date, event_start, event_end, unique_url,'
				." FROM_UNIXTIME(post_date, '%W, %M %e, %Y') date"
				.' FROM 2012ccsd.newsevents_dev'
				.' WHERE id IS NOT NULL';
		
		if($section) {
			$query .=' AND category="'.$section.'"';
		} 
		
		# filter specific article
		if(!empty($filter['url'])) {
		
			# apply filter for specific article
			$query .= " AND unique_url = '".$filter['url']."'";
			//$query .= " AND unique_url LIKE '".$filter['url']."%'";
		
		} else {
		
			# only posts from today and before
			$query .= (!isset($filter) ? ' AND post_date <= UNIX_TIMESTAMP()' : '');
			
			# apply filter for category
			$query .= (!empty($filter['section']) ? " AND category = '".$filter['section']."'" : '');
			
			# apply filter for date range
			$query .= (isset($filter['date_start']) && isset($filter['date_end']) ? ' AND ( post_date >= '.$filter['date_start'].' AND post_date <= '.$filter['date_end'].' )' : '');

		}

		# sort all by date (newest to oldest)
		$query .= ' ORDER BY post_date DESC';
		
		# if not showing all, limit results
		//if(empty($filter))
			$query .= " LIMIT $start, $limit";

	# execute
	$result = mysql_query($query, $_dB_ccsd);// or die(handle_error('runtime-level1'));
	
	# storage
	$news = array();
	while($row = mysql_fetch_assoc($result)) {
		
		//list($year, $month, $day) = explode('-', date('Y-m-d', $row['post_date']));
		
		//$news[$year][$month][$day][] = $row;
		//$retarr[$year.'-'.$month.'-'.$day][] = $row;
		$retarr[] = $row;
	}
	### END NEWS
	/*
	### GET EVENTS
	$events_q = "SELECT id, category, title, description, primary_img, post_date, unique_url, FROM_UNIXTIME(post_date, '%W, %M %e, %Y') date"
		# select the table
		.' FROM 2012ccsd.news WHERE id IS NOT NULL'
		# only posts from today and before
		.(!is_array($filter) ? ' AND post_date <= UNIX_TIMESTAMP()' : '')
		
		# apply filter for category
		.($filter['section']!='' ? " AND category = '".$filter['section']."'" : '')
		
		# apply filter for date range
		//.($filter['date_start'] && $filter['date_end'] ? ' AND ( post_date >= '.$filter['date_start'].' AND post_date <= '.$filter['date_end'].' )' : '')
		
		# apply filter for specific article
		.($filter['url']!='' ? " AND unique_url = '".$filter['url']."'" : '')
		
		.' ORDER BY post_date DESC LIMIT 10';

	# execute
	$events_r = mysql_query($events_q, $_dB_ccsd);// or die(mysql_error().$query);
	
	# storage
	$events = array();
	while($row = mysql_fetch_assoc($events_r)) {
		
		//list($year, $month, $day) = explode('-', date('Y-m-d', $row['post_date']));
		
		//$events[$year][$month][$day][] = $row;
		//$retarr[$year.'-'.$month.'-'.$day][] = $row;
		$retarr[] = $row;
	}
	### END EVENTS
	*/
	return $retarr;
	
}


function get_ccsd_news_straight_record($archive = null, $section=NULL, $start = 0, $limit = 10) {
	
	global $_dB_ccsd;
	$retarr = array();
		
	if(!empty($archive)) {
		
		$filter = array();
	
		# filter by section
		if(!empty($archive['section']))
			$filter['section'] = $archive['section'];
		
		# year only
		if(!empty($archive['year']) && empty($archive['month']) && empty($archive['day'])) {
			$filter['date_start']	= mktime(0,0,0,1,1,$archive['year']);
			$filter['date_end']		= mktime(23,59,59,12,31,$archive['year']);
		}
		# year and month
		if(!empty($archive['year']) && !empty($archive['month']) && empty($archive['day'])) {
			
			$month 					= date('n', strtotime($archive['month']));
			
			# get the number of days in the month
			$days_in_month 			= cal_days_in_month(CAL_GREGORIAN, $month, $archive['year']);
			
			$filter['date_start']	= mktime(0,0,0,$month,1,$archive['year']);
			$filter['date_end']		= mktime(23,59,59,$month,$days_in_month,$archive['year']);
		}
		# by day
		if(!empty($archive['year']) && !empty($archive['month']) && !empty($archive['day'])) {
			
			$month = date('n', strtotime($archive['month']));
			$filter['date_start']	= mktime(0,0,0,$month,$archive['day'],$archive['year']);
			$filter['date_end']		= mktime(23,59,59,$month,$archive['day'],$archive['year']);
		}
		
		# by title
		if(!empty($archive['title'])) { //!empty($archive['section']) && !empty($archive['date_start']) && 
			$filter['url'] = ccsdnews_url(array($archive['section'], $filter['date_start'], $archive['title']));
		}
	}
	

	
	### GET ARTICLES
	$query = 'SELECT id, is_event, category, title, description, article_img, article_img_s, attachment, post_date, event_start, event_end, unique_url,'
				." FROM_UNIXTIME(post_date, '%W, %M %e, %Y') date"
				.' FROM 2012ccsd.newsevents_dev'
				.' WHERE id IS NOT NULL'
				.' AND CATEGORY = "straight"';
		
		if($section) {
			$query .=' AND category="straight"';
		}
		
		# filter specific article
		if(!empty($filter['url'])) {
		
			# apply filter for specific article
			$query .= " AND unique_url = '".$filter['url']."'";
		
		} else {
		
			# only posts from today and before
			$query .= (!isset($filter) ? ' AND post_date <= UNIX_TIMESTAMP()' : '');
			
			# apply filter for category
			$query .= (!empty($filter['section']) ? " AND category = 'straight'" : '');
			
			# apply filter for date range
			$query .= (isset($filter['date_start']) && isset($filter['date_end']) ? ' AND ( post_date >= '.$filter['date_start'].' AND post_date <= '.$filter['date_end'].' )' : '');

		}

		# sort all by date (newest to oldest
		$query .= ' ORDER BY post_date DESC';
		# if not showing all, limit results
		$query .= " LIMIT $start, $limit";

	# execute
	$result = mysql_query($query, $_dB_ccsd); // or die(handle_error('runtime-level1'));
	
	# storage
	$news = array();
	while($row = mysql_fetch_assoc($result)) {
		$retarr[] = $row;
	}
	
	return $retarr;
	
}



function get_ccsd_news($limit = 25) {
	
	global $_dB_ccsd;
	
	// trying to do more with MYSQL here, save on PHP side
	$query = "SELECT *, FROM_UNIXTIME(post_date, '%W, %M %e, %Y') date"
		# select the table
		.' FROM 2012ccsd.news'
		# only posts from today and before
		.' WHERE post_date <= UNIX_TIMESTAMP()'
		.' ORDER BY post_date DESC'
		.' LIMIT '.$limit;
		
	# execute
	$result = mysql_query($query, $_dB_ccsd);
	
	# storage
	$retarr = array();
	while($row = mysql_fetch_assoc($result))
		$retarr[] = $row;
	
	# return data
	return $retarr;
}

function get_ccsd_events($limit = 25) {
	
	global $_dB_ccsd;
	
	// trying to do more with MYSQL here, save on PHP side
	$query = "SELECT *, FROM_UNIXTIME(post_date, '%W, %M %e, %Y') date"
		# select the table
		.' FROM 2012ccsd.newsevents'
		# only posts from today and before
		.' WHERE is_event = 1 AND event_end >= UNIX_TIMESTAMP() AND ( post_date <= UNIX_TIMESTAMP() )'
		.' ORDER BY event_start ASC'
		.' LIMIT '.$limit;
	
	# execute
	$result = mysql_query($query, $_dB_ccsd);
	
	# storage
	$retarr = array();
	while($row = mysql_fetch_assoc($result))
		$retarr[] = $row;
	
	# return data
	return $retarr;
}

function get_ccsd_press($article = null, $start = 0, $limit = 10) {
	
	global $_dB_ccsd;
	
	// trying to do more with MYSQL here, save on PHP side
	$query = "SELECT *, FROM_UNIXTIME(post_date, '%W, %M %e, %Y') date"
		# select the table
		.' FROM 2012ccsd.press_releases'
		# only posts from today and before
		.' WHERE post_date <= UNIX_TIMESTAMP()'
		.($article!=NULL ? " AND unique_url = '$article'" : '' )
		.' ORDER BY post_date DESC'
		." LIMIT $start, $limit";
	
	//echo $query;
	
	# execute
	$result = mysql_query($query, $_dB_ccsd); // or die(handle_error('runtime-level1'));
	
	# storage
	$retarr = array();
	while($release = mysql_fetch_assoc($result)) {
		
		//print_r($release);
		
		if($article!=NULL) {
			# get the contacts for the press release
			$get_contacts = "SELECT contact, details FROM 2012ccsd.pr_contacts WHERE pr_id = ".$release['id'];
			# execute
			$contact_results = mysql_query($get_contacts, $_dB_ccsd);
			
			$contacts = array();
			if(mysql_num_rows($contact_results)>=1)
				while($contact = mysql_fetch_assoc($contact_results))	
					$release['contacts'][] = $contact;
		}
		$retarr[] = $release;
	}
	
	# return data
	return $retarr;
}

function get_pat($article = null, $start = 0, $limit = 10) {
	
	global $_dB_ccsd;
	
	// trying to do more with MYSQL here, save on PHP side
	$query = "SELECT *, FROM_UNIXTIME(post_date, '%W, %M %e, %Y') date"
		# select the table
		.' FROM 2012ccsd.pat_personally'
		# only posts from today and before
		.' WHERE post_date <= UNIX_TIMESTAMP()'
		.($article!=NULL ? " AND unique_url = '$article'" : '' )
		.' ORDER BY post_date DESC'
		." LIMIT $start, $limit";
		
	# execute
	$result = mysql_query($query, $_dB_ccsd); // or die(handle_error('runtime-level1'));
	
	# storage
	$retarr = array();
	while($release = mysql_fetch_assoc($result)) {

		$retarr[] = $release;
	}
	
	# return data
	return $retarr;
}

function get_dispatch($article = null, $start = 0, $limit = 10) {
	
	global $_dB_ccsd;
	
	// trying to do more with MYSQL here, save on PHP side
	$query = "SELECT *, FROM_UNIXTIME(post_date, '%W, %M %e, %Y') date"
		# select the table
		.' FROM 2012ccsd.district_dispatch'
		# only posts from today and before
		.' WHERE post_date <= UNIX_TIMESTAMP()'
		.($article!=NULL ? " AND unique_url = '$article'" : '' )
		.' ORDER BY post_date DESC'
		." LIMIT $start, $limit";
		
	# execute
	$result = mysql_query($query, $_dB_ccsd); // or die(handle_error('runtime-level1'));
	
	# storage
	$retarr = array();
	while($release = mysql_fetch_assoc($result)) {

		$retarr[] = $release;
	}
	
	# return data
	return $retarr;
}

/**
* Supt blog deprecated 3/21/2013
**/
function get_sups_blog($article = null, $start = 0, $limit = 10) {
	
	global $_dB_ccsd;
	
	// trying to do more with MYSQL here, save on PHP side
	$query = "SELECT *, FROM_UNIXTIME(post_date, '%W, %M %e, %Y') date"
		# select the table
		.' FROM 2012ccsd.sups_blog'
		# only posts from today and before
		.' WHERE post_date <= UNIX_TIMESTAMP()'
		.($article!=NULL ? " AND unique_url = '$article'" : '' )
		.' ORDER BY post_date DESC'
		." LIMIT $start, $limit";
	
	//echo $query;
	
	# execute
	$result = mysql_query($query, $_dB_ccsd); // or die(handle_error('runtime-level1'));
	
	# storage
	$retarr = array();
	while($release = mysql_fetch_assoc($result)) {

		$retarr[] = $release;
	}
	
	# return data
	return $retarr;
}



 /**
 *  function to truncate and then clean up end of the HTML,
 *  truncates by counting characters outside of HTML tags
 *  
 *  @author alex lockwood, alex dot lockwood at websightdesign
 *  
 *  @param string $str the string to truncate
 *  @param int $len the number of characters
 *  @param string $end the end string for truncation
 *  @return string $truncated_html
 *  
 *  **/
 /*

deprecated 2012-09-05 0903 carroll

function truncate_html($str, $len, $end = '&hellip;'){
    //find all tags
    $tagPattern = '/(<\/?)([\w]*)(\s*[^>]*)>?|&[\w#]+;/i';  //match html tags and entities
    preg_match_all($tagPattern, $str, $matches, PREG_OFFSET_CAPTURE | PREG_SET_ORDER );
    //WSDDebug::dump($matches); exit; 
    $i =0;
    //loop through each found tag that is within the $len, add those characters to the len,
    //also track open and closed tags
    // $matches[$i][0] = the whole tag string  --the only applicable field for html enitities  
    // IF its not matching an &htmlentity; the following apply
    // $matches[$i][1] = the start of the tag either '<' or '</'  
    // $matches[$i][2] = the tag name
    // $matches[$i][3] = the end of the tag
    //$matces[$i][$j][0] = the string
    //$matces[$i][$j][1] = the str offest

    while(!empty($matches[$i]) && $matches[$i][0][1] < $len){

        $len = $len + strlen($matches[$i][0][0]);
        if(substr($matches[$i][0][0],0,1) == '&' )
            $len = $len-1;


        //if $matches[$i][2] is undefined then its an html entity, want to ignore those for tag counting
        //ignore empty/singleton tags for tag counting
        if(!empty($matches[$i][2][0]) && !in_array($matches[$i][2][0],array('br','img','hr', 'input', 'param', 'link'))){
            //double check 
            if(substr($matches[$i][3][0],-1) !='/' && substr($matches[$i][1][0],-1) !='/')
                $openTags[] = $matches[$i][2][0];
            elseif(end($openTags) == $matches[$i][2][0]){
                array_pop($openTags);
            }else{
                $warnings[] = "html has some tags mismatched in it:  $str";
            }
        }
        ++$i;
    }

    $closeTagString = '';
	
    if (!empty($openTags)){
        $openTags = array_reverse($openTags);
        foreach ($openTags as $t){
            $closeTagString .="</".$t . ">"; 
        }
    }

    if(strlen($str)>$len){
        //truncate with new len
        $truncated_html = substr($str, 0, $len);
        //add the end text
        $truncated_html .= $end ;
        //restore any open tags
        $truncated_html .= $closeTagString;


    }else
    $truncated_html = $str;

    return $truncated_html; 
}
*/

/**
 * truncateHtml can truncate a string up to a number of characters while preserving whole words and HTML tags
 *
 * @param string $text String to truncate.
 * @param integer $length Length of returned string, including ellipsis.
 * @param string $ending Ending to be appended to the trimmed string.
 * @param boolean $exact If false, $text will not be cut mid-word
 * @param boolean $considerHtml If true, HTML tags would be handled correctly
 *
 * @return string Trimmed string.
 */
function truncate_html($text, $length = 100, $ending = '...', $exact = false, $considerHtml = true) {
	if ($considerHtml) {
		// if the plain text is shorter than the maximum length, return the whole text
		if (strlen(preg_replace('/<.*?>/', '', $text)) <= $length) {
			return $text;
		}
		// splits all html-tags to scanable lines
		preg_match_all('/(<.+?>)?([^<>]*)/s', $text, $lines, PREG_SET_ORDER);
		$total_length = strlen($ending);
		$open_tags = array();
		$truncate = '';
		foreach ($lines as $line_matchings) {
			// if there is any html-tag in this line, handle it and add it (uncounted) to the output
			if (!empty($line_matchings[1])) {
				// if it's an "empty element" with or without xhtml-conform closing slash
				if (preg_match('/^<(\s*.+?\/\s*|\s*(img|br|input|hr|area|base|basefont|col|frame|isindex|link|meta|param)(\s.+?)?)>$/is', $line_matchings[1])) {
					// do nothing
				// if tag is a closing tag
				} else if (preg_match('/^<\s*\/([^\s]+?)\s*>$/s', $line_matchings[1], $tag_matchings)) {
					// delete tag from $open_tags list
					$pos = array_search($tag_matchings[1], $open_tags);
					if ($pos !== false) {
					unset($open_tags[$pos]);
					}
				// if tag is an opening tag
				} else if (preg_match('/^<\s*([^\s>!]+).*?>$/s', $line_matchings[1], $tag_matchings)) {
					// add tag to the beginning of $open_tags list
					array_unshift($open_tags, strtolower($tag_matchings[1]));
				}
				// add html-tag to $truncate'd text
				$truncate .= $line_matchings[1];
			}
			// calculate the length of the plain text part of the line; handle entities as one character
			$content_length = strlen(preg_replace('/&[0-9a-z]{2,8};|&#[0-9]{1,7};|[0-9a-f]{1,6};/i', ' ', $line_matchings[2]));
			if ($total_length+$content_length> $length) {
				// the number of characters which are left
				$left = $length - $total_length;
				$entities_length = 0;
				// search for html entities
				if (preg_match_all('/&[0-9a-z]{2,8};|&#[0-9]{1,7};|[0-9a-f]{1,6};/i', $line_matchings[2], $entities, PREG_OFFSET_CAPTURE)) {
					// calculate the real length of all entities in the legal range
					foreach ($entities[0] as $entity) {
						if ($entity[1]+1-$entities_length <= $left) {
							$left--;
							$entities_length += strlen($entity[0]);
						} else {
							// no more characters left
							break;
						}
					}
				}
				$truncate .= substr($line_matchings[2], 0, $left+$entities_length);
				// maximum lenght is reached, so get off the loop
				break;
			} else {
				$truncate .= $line_matchings[2];
				$total_length += $content_length;
			}
			// if the maximum length is reached, get off the loop
			if($total_length>= $length) {
				break;
			}
		}
	} else {
		if (strlen($text) <= $length) {
			return $text;
		} else {
			$truncate = substr($text, 0, $length - strlen($ending));
		}
	}
	// if the words shouldn't be cut in the middle...
	if (!$exact) {
		// ...search the last occurance of a space...
		$spacepos = strrpos($truncate, ' ');
		if (isset($spacepos)) {
			// ...and cut the text in this position
			$truncate = substr($truncate, 0, $spacepos);
		}
	}
	// add the defined ending to the text
	$truncate .= $ending;
	if($considerHtml) {
		// close all unclosed html-tags
		foreach ($open_tags as $tag) {
			$truncate .= '</' . $tag . '>';
		}
	}
	return $truncate;
}

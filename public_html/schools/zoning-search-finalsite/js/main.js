buildinfo={buildname:"fs-webpack-build",ver:"7.2.1",template:"newclientcustom",FED:"Geledia",PM:"Caitlin Hazelwood",Designer:"Brittany Carlson"},function(){var __webpack_modules__={81:function(){eval("/*\r\n\tBy Osvaldas Valutis, www.osvaldas.info\r\n\tAvailable for use under the MIT License\r\n*/\r\n\r\n;(function( $, window, document, undefined ){\r\n\t$.fn.doubleTapToGo = function( params )\r\n\t{\r\n\t\tif( !( 'ontouchstart' in window ) &&\r\n\t\t\t!navigator.msMaxTouchPoints &&\r\n\t\t\t!navigator.userAgent.toLowerCase().match( /windows phone os 7/i ) ) return false;\r\n\r\n\t\tthis.each( function()\r\n\t\t{\r\n\t\t\tvar curItem = false;\r\n\r\n\t\t\t$( this ).on( 'click', function( e )\r\n\t\t\t{\r\n\t\t\t\tvar item = $( this );\r\n\t\t\t\tif( item[ 0 ] != curItem[ 0 ] )\r\n\t\t\t\t{\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\tcurItem = item;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t$( document ).on( 'click touchstart MSPointerDown', function( e )\r\n\t\t\t{\r\n\t\t\t\tvar resetItem = true,\r\n\t\t\t\t\tparents\t  = $( e.target ).parents();\r\n\r\n\t\t\t\tfor( var i = 0; i < parents.length; i++ )\r\n\t\t\t\t\tif( parents[ i ] == curItem[ 0 ] )\r\n\t\t\t\t\t\tresetItem = false;\r\n\r\n\t\t\t\tif( resetItem )\r\n\t\t\t\t\tcurItem = false;\r\n\t\t\t});\r\n\t\t});\r\n\t\treturn this;\r\n\t};\r\n})( jQuery, window, document );\n\n//# sourceURL=webpack:///./js/vendor/doubletaptogo.js?")},233:function(module,exports){eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n * Copyright Martin AuswÃ¶ger\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n(function(\n\twindow,\n\tdocument,\n\t/*eslint-disable no-shadow-restricted-names*/\n\tundefined\n\t/*eslint-enable no-shadow-restricted-names*/\n) {\n'use strict';\n\n(function (factory) {\n\t/*global define*/\n\t/* istanbul ignore next: donâ€™t cover module definition */\n\tif (true) {\n\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function() {\n\t\t\treturn factory;\n\t\t}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t}\n\t/*global module*/\n\telse {}\n}(function(config) {\n\nconfig = config || {};\n\n// Public API\n/*eslint-disable dot-notation*/\nvar api = {\n\t'reprocess': reprocess,\n\t'reparse': reparse,\n\t'reevaluate': reevaluate,\n\t'config': config,\n};\n/*eslint-enable dot-notation*/\n\nvar REGEXP_ESCAPE_REGEXP = /[.?*+^$[\\]\\\\(){}|-]/g;\nvar SELECTOR_REGEXP = /\\.?:container\\((?:[^()]+|\\([^()]*\\))+\\)/gi;\nvar SELECTOR_ESCAPED_REGEXP = /\\.\\\\:container\\\\\\(((?:[^()]+?|\\\\\\([^()]*\\\\\\))+?)\\\\\\)|\\[data-cq~=[\"']((?:\\\\.|[^\"'])+)[\"']\\]/gi;\nvar QUERY_REGEXP = /^(?:(.+?)([<>]=?|=))??(?:(min|max)-)?([a-z-]+?)(?:-(hue|saturation|lightness|alpha))?(?:([<>]=?|=|:)(.+))?$/;\nvar ESCAPE_REGEXP = /[.:()<>=%,]/g;\nvar SPACE_REGEXP = / /g;\nvar LENGTH_REGEXP = /^(-?(?:\\d*\\.)?\\d+)(em|ex|ch|rem|vh|vw|vmin|vmax|px|mm|cm|in|pt|pc)$/i;\nvar NUMBER_REGEXP = /^-?(?:\\d*\\.)?\\d+$/i;\nvar COLOR_REGEXP = /^rgba?\\s*\\([0-9.,\\s]*\\)$/i;\nvar URL_VALUE_REGEXP = /url\\(\\s*(?:([\"'])(.*?)\\1|([^)\\s]*))\\s*\\)/gi;\nvar ATTR_REGEXP = /\\[.+?\\]/g;\nvar PSEUDO_NOT_REGEXP = /:not\\(/g;\nvar ID_REGEXP = /#[^\\s\\[\\\\#+,.:>~]+/g;\nvar CLASS_REGEXP = /\\.[^\\s\\[\\\\#+,.:>~]+/g;\nvar PSEUDO_ELEMENT_REGEXP = /::[^\\s\\[\\\\#+,.:>~]+/g;\nvar PSEUDO_CLASS_REGEXP = /:[^\\s\\[\\\\#+,.:>~]+/g;\nvar ELEMENT_REGEXP = /[a-z-]+/gi;\nvar FIXED_UNIT_MAP = {\n\t'px': 1,\n\t'pt': 16 / 12,\n\t'pc': 16,\n\t'in': 96,\n\t'cm': 96 / 2.54,\n\t'mm': 96 / 25.4,\n};\n\nvar queries;\nvar containerCache;\nvar styleCache;\nvar processedSheets = createCacheMap();\nvar requestCache = {};\nvar domMutations = [];\nvar processed = false;\nvar parsed = false;\nvar documentElement = document.documentElement;\nvar styleSheets = document.styleSheets;\nvar createElement = document.createElement.bind(document);\nvar requestAnimationFrame = window.requestAnimationFrame || setTimeout;\nvar observer;\nvar scheduledCall;\n\n/**\n * @param {function()} callback\n */\nfunction reprocess(callback) {\n\tpreprocess(function() {\n\t\tprocessed = true;\n\t\treparse(callback);\n\t});\n}\n\n/**\n * @param {function()} callback\n */\nfunction reparse(callback) {\n\tif (!processed) {\n\t\treturn reprocess(callback);\n\t}\n\tparseRules();\n\tbuildStyleCache();\n\tparsed = true;\n\treevaluate(true, callback);\n}\n\n/**\n * @param {boolean}         clearContainerCache\n * @param {function()}      callback\n * @param {Array.<Element>} contexts\n */\nfunction reevaluate(clearContainerCache, callback, contexts) {\n\tif (!parsed) {\n\t\treturn reparse(callback);\n\t}\n\tupdateClasses(clearContainerCache, contexts);\n\tif (callback) {\n\t\tcallback();\n\t}\n}\n\n/**\n * Schedule the execution of step 1, 2 or 3 for the next animation frame\n *\n * @param {number}          step                1: reprocess, 2: reparse, 3: reevaluate\n * @param {boolean}         clearContainerCache\n * @param {Array.<Element>} contexts\n */\nfunction scheduleExecution(step, clearContainerCache, contexts) {\n\n\tif (!scheduledCall) {\n\t\tscheduledCall = {\n\t\t\t_step: step,\n\t\t\t_clearContainerCache: clearContainerCache,\n\t\t\t_contexts: contexts,\n\t\t};\n\t\trequestAnimationFrame(executeScheduledCall);\n\t\treturn;\n\t}\n\n\tscheduledCall._step = Math.min(scheduledCall._step, step);\n\n\t// Merge parameters for reevaluate\n\tif (scheduledCall._step === 3) {\n\t\tscheduledCall._clearContainerCache = scheduledCall._clearContainerCache || clearContainerCache;\n\t\tif (scheduledCall._contexts && contexts) {\n\t\t\tscheduledCall._contexts = scheduledCall._contexts.concat(contexts);\n\t\t}\n\t}\n\n}\n\n/**\n * Executes the scheduled call from scheduleExecution() in an animation frame\n */\nfunction executeScheduledCall() {\n\n\tvar call = scheduledCall;\n\tscheduledCall = undefined;\n\n\tif (call._step === 1) {\n\t\treprocess();\n\t}\n\telse if (call._step === 2) {\n\t\treparse();\n\t}\n\telse {\n\t\treevaluate(call._clearContainerCache, undefined, call._contexts);\n\t}\n\n}\n\n/**\n * Starts observing DOM events and mutations\n */\nfunction startObserving() {\n\n\tif (config.skipObserving) {\n\t\treturn;\n\t}\n\n\t// Reprocess now\n\tscheduleExecution(1);\n\n\twindow.addEventListener('DOMContentLoaded', scheduleExecution.bind(undefined, 1, undefined, undefined));\n\twindow.addEventListener('load', scheduleExecution.bind(undefined, 1, undefined, undefined));\n\twindow.addEventListener('resize', scheduleExecution.bind(undefined, 3, true, undefined));\n\n\tvar MutationObserver = window.MutationObserver || window.WebKitMutationObserver;\n\tif (MutationObserver) {\n\t\tobserver = new MutationObserver(checkMutations);\n\t\tobserver.observe(document.documentElement, {\n\t\t\tchildList: true,\n\t\t\tsubtree: true,\n\t\t});\n\t}\n\telse {\n\t\twindow.addEventListener('DOMNodeInserted', onDomMutate);\n\t\twindow.addEventListener('DOMNodeRemoved', onDomMutate);\n\t}\n\n}\n\n/**\n * Check DOM mutations and reprocess or reevaluate\n *\n * @param  {Array.<MutationRecord>} mutations\n */\nfunction checkMutations(mutations) {\n\n\t// Skip iterating the nodes, if a run is already scheduled, to improve performance\n\tif (scheduledCall && (scheduledCall._level < 3 || !scheduledCall._contexts)) {\n\t\treturn;\n\t}\n\n\tvar addedNodes = [];\n\tvar stylesChanged = false;\n\n\tvar replacedSheets = [];\n\tprocessedSheets.forEach(function(newNode) {\n\t\treplacedSheets.push(newNode);\n\t});\n\n\tarrayFrom(mutations).forEach(function(mutation) {\n\n\t\taddedNodes.push.apply(addedNodes, arrayFrom(mutation.addedNodes).filter(function(node) {\n\t\t\treturn node.nodeType === 1;\n\t\t}));\n\n\t\tarrayFrom(mutation.removedNodes).forEach(function(node) {\n\t\t\tvar index = addedNodes.indexOf(node);\n\t\t\tif (index !== -1) {\n\t\t\t\taddedNodes.splice(index, 1);\n\t\t\t}\n\t\t\telse if (\n\t\t\t\t(node.tagName === 'LINK' || node.tagName === 'STYLE')\n\t\t\t\t&& replacedSheets.indexOf(node) === -1\n\t\t\t) {\n\t\t\t\tstylesChanged = true;\n\t\t\t}\n\t\t});\n\n\t});\n\n\taddedNodes.forEach(function(node) {\n\t\tif (node.sheet && replacedSheets.indexOf(node) === -1) {\n\t\t\tstylesChanged = true;\n\t\t}\n\t});\n\n\tif (stylesChanged) {\n\t\tscheduleExecution(1);\n\t}\n\telse if (addedNodes.length) {\n\t\tscheduleExecution(3, false, addedNodes);\n\t}\n\n}\n\n/**\n * Event handler for DOMNodeInserted and DOMNodeRemoved\n *\n * @param  {MutationEvent} event\n */\nfunction onDomMutate(event) {\n\n\tvar mutation = {\n\t\taddedNodes: [],\n\t\tremovedNodes: [],\n\t};\n\tmutation[\n\t\t(event.type === 'DOMNodeInserted' ? 'added' : 'removed') + 'Nodes'\n\t] = [event.target];\n\n\tdomMutations.push(mutation);\n\n\t// Delay the call to checkMutations()\n\tsetTimeout(function() {\n\t\tcheckMutations(domMutations);\n\t\tdomMutations = [];\n\t});\n\n}\n\n/**\n * Step 1: Preprocess all active stylesheets in the document\n *\n * Look for stylesheets that contain container queries and escape them to be\n * readable by the browser, e.g. convert `:container(width >= 10px)` to\n * `\\:container\\(width\\>\\=10px\\)`\n *\n * @param {function()} callback\n */\nfunction preprocess(callback) {\n\n\tvar sheets = arrayFrom(styleSheets);\n\n\t// Check removed stylesheets\n\tprocessedSheets.forEach(function(newNode, node) {\n\t\t// Original stylesheet has been deleted\n\t\tif (sheets.indexOf(node.sheet) === -1) {\n\t\t\tif (newNode && sheets.indexOf(newNode.sheet) !== -1 && newNode.parentNode) {\n\t\t\t\tsheets.splice(sheets.indexOf(newNode.sheet), 1);\n\t\t\t\tnewNode.parentNode.removeChild(newNode);\n\t\t\t}\n\t\t\tprocessedSheets.delete(node);\n\t\t}\n\t});\n\n\tvar done = -1;\n\tfunction step() {\n\t\tdone++;\n\t\tif (done === sheets.length) {\n\t\t\tcallback();\n\t\t}\n\t}\n\tsheets.forEach(function(sheet) {\n\t\tpreprocessSheet(sheet, step);\n\t});\n\tstep();\n\n}\n\n/**\n * @param {CSSStyleSheet} sheet\n * @param {function()}    callback\n */\nfunction preprocessSheet(sheet, callback) {\n\tif (sheet.disabled) {\n\t\tcallback();\n\t\treturn;\n\t}\n\tif (!config.preprocess) {\n\t\tvar rulesLength = -1;\n\t\ttry {\n\t\t\trulesLength = sheet.cssRules.length;\n\t\t}\n\t\tcatch(e) {\n\t\t\t// Do nothing\n\t\t}\n\t\t// Check if cssRules is accessible\n\t\tif (rulesLength !== -1 || !sheet.ownerNode.getAttribute('crossorigin')) {\n\t\t\tcallback();\n\t\t\treturn;\n\t\t}\n\t}\n\tvar ownerNode = sheet.ownerNode;\n\tvar tag = ownerNode && ownerNode.tagName;\n\tif (tag === 'LINK' && !processedSheets.has(ownerNode)) {\n\t\tloadExternal(ownerNode.href, function(cssText) {\n\t\t\t// Check again because loadExternal is async\n\t\t\tif (sheet.disabled || !cssText) {\n\t\t\t\tcallback();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tpreprocessStyle(ownerNode, fixRelativeUrls(cssText, ownerNode.href));\n\t\t\tcallback();\n\t\t});\n\t}\n\telse if (tag === 'STYLE') {\n\t\tpreprocessStyle(ownerNode, ownerNode.innerHTML);\n\t\tcallback();\n\t}\n\telse {\n\t\tcallback();\n\t}\n}\n\n/**\n * Load external file via AJAX\n *\n * @param {string}           href\n * @param {function(string)} callback Gets called with the response text on\n *                                    success or empty string on failure\n */\nfunction loadExternal(href, callback) {\n\tvar cacheEntryType = typeof requestCache[href];\n\tif (cacheEntryType === 'string') {\n\t\tcallback(requestCache[href]);\n\t\treturn;\n\t}\n\telse if (cacheEntryType === 'object') {\n\t\trequestCache[href].push(callback);\n\t\treturn;\n\t}\n\trequestCache[href] = [callback]\n\tvar isDone = false;\n\tvar done = function(response) {\n\t\tif (!isDone) {\n\t\t\tresponse = response || '';\n\t\t\trequestCache[href].forEach(function(cachedCallback) {\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tcachedCallback(response);\n\t\t\t\t});\n\t\t\t});\n\t\t\trequestCache[href] = response;\n\t\t}\n\t\tisDone = true;\n\t};\n\tvar xhr = new XMLHttpRequest();\n\txhr.onreadystatechange = function() {\n\t\tif (xhr.readyState !== 4) {\n\t\t\treturn;\n\t\t}\n\t\tdone(xhr.status === 200 && xhr.responseText);\n\t};\n\ttry {\n\t\txhr.open('GET', href);\n\t\txhr.send();\n\t}\n\tcatch(e) {\n\t\tif (window.XDomainRequest) {\n\t\t\txhr = new XDomainRequest();\n\t\t\txhr.onprogress =\n\t\t\t\t/* istanbul ignore next: fix for a rare IE9 bug */\n\t\t\t\tfunction() {};\n\t\t\txhr.onload = xhr.onerror = xhr.ontimeout = function() {\n\t\t\t\tdone(xhr.responseText);\n\t\t\t};\n\t\t\ttry {\n\t\t\t\txhr.open('GET', href);\n\t\t\t\txhr.send();\n\t\t\t}\n\t\t\tcatch(e2) {\n\t\t\t\tdone();\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tdone();\n\t\t}\n\t}\n}\n\n/**\n * Replace relative CSS URLs with their absolute counterpart\n *\n * @param  {string} cssText\n * @param  {string} href    URL of the stylesheet\n * @return {string}\n */\nfunction fixRelativeUrls(cssText, href) {\n\tvar base = resolveRelativeUrl(href, document.baseURI);\n\treturn cssText.replace(URL_VALUE_REGEXP, function(match, quote, url1, url2) {\n\t\tvar url = url1 || url2;\n\t\tif (!url) {\n\t\t\treturn match;\n\t\t}\n\t\treturn 'url(' + (quote || '\"') + resolveRelativeUrl(url, base) + (quote || '\"') + ')';\n\t});\n}\n\n/**\n * @param  {string} url\n * @param  {string} base\n * @return {string}\n */\nfunction resolveRelativeUrl(url, base) {\n\tvar absoluteUrl;\n\ttry {\n\t\tabsoluteUrl = new URL(url, base).href;\n\t}\n\tcatch(e) {\n\t\tabsoluteUrl = false;\n\t}\n\tif (!absoluteUrl) {\n\t\tvar baseElement = createElement('base');\n\t\tbaseElement.href = base;\n\t\tdocument.head.insertBefore(baseElement, document.head.firstChild);\n\t\tvar link = createElement('a');\n\t\tlink.href = url;\n\t\tabsoluteUrl = link.href;\n\t\t// Catch error in iOS 7.0\n\t\ttry {\n\t\t\t// Fix for a bug in Opera 12\n\t\t\tdelete baseElement.href;\n\t\t}\n\t\tcatch(e) {\n\t\t\t// Do nothing\n\t\t}\n\t\tdocument.head.removeChild(baseElement);\n\t}\n\treturn absoluteUrl;\n}\n\n/**\n * @param {Node}   node    Stylesheet ownerNode\n * @param {string} cssText\n */\nfunction preprocessStyle(node, cssText) {\n\tprocessedSheets.set(node, false);\n\tvar escapedText = escapeSelectors(cssText);\n\tvar rulesLength = -1;\n\tif (escapedText === cssText) {\n\t\ttry {\n\t\t\trulesLength = node.sheet.cssRules.length;\n\t\t}\n\t\tcatch(e) {\n\t\t\trulesLength = -1;\n\t\t}\n\t\t// Check if cssRules is accessible\n\t\tif (rulesLength !== -1) {\n\t\t\treturn;\n\t\t}\n\t}\n\tvar style = createElement('style');\n\tstyle.textContent = escapedText;\n\tstyle.media = node.media || 'all';\n\tnode.parentNode.insertBefore(style, node);\n\tnode.sheet.disabled = true;\n\tprocessedSheets.set(node, style);\n}\n\n/**\n * @param  {string} cssText\n * @return {string}\n */\nfunction escapeSelectors(cssText) {\n\treturn cssText.replace(SELECTOR_REGEXP, function(selector) {\n\t\treturn '.' + selector.substr(selector[0] === '.' ? 1 : 0)\n\t\t\t.replace(SPACE_REGEXP, '')\n\t\t\t.replace(/\"/g, '')\n\t\t\t.replace(ESCAPE_REGEXP, '\\\\$&')\n\t\t\t.toLowerCase();\n\t});\n}\n\n/**\n * Step 2: Parse all processed container query rules and store them in `queries`\n * indexed by the preceding selector\n */\nfunction parseRules() {\n\tqueries = {};\n\tvar rules;\n\tfor (var i = 0; i < styleSheets.length; i++) {\n\t\tif (styleSheets[i].disabled) {\n\t\t\tcontinue;\n\t\t}\n\t\ttry {\n\t\t\trules = styleSheets[i].cssRules;\n\t\t\tif (!rules || !rules.length) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\t\tcatch(e) {\n\t\t\tcontinue;\n\t\t}\n\t\tfor (var j = 0; j < rules.length; j++) {\n\t\t\tparseRule(rules[j]);\n\t\t}\n\t}\n}\n\n/**\n * @param {CSSRule} rule\n */\nfunction parseRule(rule) {\n\tif (rule.cssRules) {\n\t\tfor (var i = 0; i < rule.cssRules.length; i++) {\n\t\t\tparseRule(rule.cssRules[i]);\n\t\t}\n\t\treturn;\n\t}\n\tif (rule.type !== 1) {\n\t\treturn;\n\t}\n\tsplitSelectors(rule.selectorText).forEach(function(selector) {\n\t\tselector = escapeSelectors(selector);\n\t\tselector.replace(SELECTOR_ESCAPED_REGEXP, function(match, query, queryUnescaped, offset) {\n\t\t\tvar precedingSelector =\n\t\t\t\t(\n\t\t\t\t\tselector.substr(0, offset)\n\t\t\t\t\t+ selector.substr(offset + match.length).replace(/^((?:\\([^)]*\\)|[^\\s>+~])*).*$/, '$1')\n\t\t\t\t)\n\t\t\t\t.replace(SELECTOR_ESCAPED_REGEXP, '')\n\t\t\t\t.replace(PSEUDO_ELEMENT_REGEXP, '')\n\t\t\t\t.replace(/:(?:active|hover|focus|checked|before|after)/gi, '');\n\t\t\tif (!precedingSelector.substr(-1).trim()) {\n\t\t\t\tprecedingSelector += '*';\n\t\t\t}\n\t\t\tvar query = parseQuery(queryUnescaped || unescape(query));\n\t\t\tif (query) {\n\t\t\t\tquery._selector = precedingSelector;\n\t\t\t\tquery._className = queryUnescaped ? undefined : unescape(match.substr(1));\n\t\t\t\tquery._attribute = queryUnescaped;\n\t\t\t\tqueries[precedingSelector + match] = query;\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * @param  {string} query\n * @return {Array.<{_prop: string, _filter: string, _types: array, _values: array, _valueType: string}>}\n */\nfunction parseQuery(query) {\n\n\tif (!(query = QUERY_REGEXP.exec(query))) {\n\t\treturn;\n\t}\n\n\tvar values = [query[7], query[1]].filter(Boolean);\n\tvar valueType =\n\t\t(query[5] || values[0].match(NUMBER_REGEXP)) ? 'n' :\n\t\tvalues[0].match(LENGTH_REGEXP) ? 'l' :\n\t\tvalues[0].match(COLOR_REGEXP) ? 'c' :\n\t\t's';\n\tif (valueType === 'n') {\n\t\tvalues = values.map(parseFloat);\n\t}\n\telse if (valueType === 'c') {\n\t\tvalues = values.map(function(value) {\n\t\t\treturn parseColor(value).join(',');\n\t\t});\n\t}\n\n\treturn {\n\t\t_prop: query[4],\n\t\t_filter: query[5],\n\t\t_types: [\n\t\t\tquery[6] !== ':' ? query[6]\n\t\t\t\t: query[3] === 'min' ? '>='\n\t\t\t\t: query[3] ? '<='\n\t\t\t\t: '=',\n\t\t\tquery[2] && query[2].replace(/[<>]/, function(match) {\n\t\t\t\t// Invert the left side comparison operator\n\t\t\t\treturn match === '<' ? '>' : '<';\n\t\t\t}),\n\t\t].filter(Boolean),\n\t\t_values: values,\n\t\t_valueType: valueType,\n\t};\n\n}\n\n/**\n * Unescape backslash escaped string\n *\n * @param  {string} string\n * @return {string}\n */\nfunction unescape(string) {\n\treturn string && string.replace(/\\\\(.)/g, '$1');\n}\n\n/**\n * Split multiple selectors by `,`\n *\n * @param  {string} selectors\n * @return {Array.<string>}\n */\nfunction splitSelectors(selectors) {\n\treturn (selectors.match(/(?:\\\\.|\"(?:\\\\.|[^\"])*\"|\\([^)]*\\)|[^,])+/g) || [])\n\t\t.map(function(selector) {\n\t\t\treturn selector.trim();\n\t\t});\n}\n\n/**\n * Builds the styleCache needed by getOriginalStyle\n */\nfunction buildStyleCache() {\n\tstyleCache = {\n\t\twidth: {},\n\t\theight: {},\n\t};\n\tvar rules;\n\tfor (var i = 0; i < styleSheets.length; i++) {\n\t\tif (styleSheets[i].disabled) {\n\t\t\tcontinue;\n\t\t}\n\t\ttry {\n\t\t\trules = styleSheets[i].cssRules;\n\t\t\tif (!rules || !rules.length) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\t\tcatch(e) {\n\t\t\tcontinue;\n\t\t}\n\t\tbuildStyleCacheFromRules(rules);\n\t}\n}\n\n/**\n * @param {CSSRuleList} rules\n */\nfunction buildStyleCacheFromRules(rules) {\n\tfor (var i = 0; i < rules.length; i++) {\n\t\tif (rules[i].type === 1) { // Style rule\n\t\t\tif (\n\t\t\t\trules[i].style.getPropertyValue('width')\n\t\t\t\t|| rules[i].style.getPropertyValue('height')\n\t\t\t) {\n\t\t\t\tsplitSelectors(escapeSelectors(rules[i].selectorText)).forEach(function(selector) {\n\t\t\t\t\tvar rule = {\n\t\t\t\t\t\t_selector: selector,\n\t\t\t\t\t\t_rule: rules[i],\n\t\t\t\t\t\t_specificity: getSpecificity(selector),\n\t\t\t\t\t};\n\t\t\t\t\tvar rightMostSelector = selector\n\t\t\t\t\t\t.replace(/:[a-z-]+\\([^)]*\\)/i, '')\n\t\t\t\t\t\t.replace(/^.*[^\\\\][\\s>+~]\\s*/, '');\n\t\t\t\t\tif (\n\t\t\t\t\t\trightMostSelector.match(PSEUDO_ELEMENT_REGEXP)\n\t\t\t\t\t\t|| rightMostSelector.match(/:(?:before|after)/i)\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\trightMostSelector = rightMostSelector\n\t\t\t\t\t\t.replace(PSEUDO_CLASS_REGEXP, '')\n\t\t\t\t\t\t.trim();\n\t\t\t\t\t['width', 'height'].forEach(function(prop) {\n\t\t\t\t\t\tif (!rules[i].style.getPropertyValue(prop)) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar match = rightMostSelector.match(ID_REGEXP);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tmatch = rightMostSelector.match(CLASS_REGEXP);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tmatch = rightMostSelector.match(ELEMENT_REGEXP);\n\t\t\t\t\t\t\tif (match) {\n\t\t\t\t\t\t\t\tmatch = [match[0].toLowerCase()];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tmatch = '*';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!styleCache[prop][match[0]]) {\n\t\t\t\t\t\t\tstyleCache[prop][match[0]] = [];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstyleCache[prop][match[0]].push(rule);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\telse if (rules[i].cssRules) {\n\t\t\tbuildStyleCacheFromRules(rules[i].cssRules);\n\t\t}\n\t}\n}\n\n/**\n * Step 3: Loop through the `queries` and add or remove the CSS classes of all\n * matching elements\n *\n * @param {boolean}         clearContainerCache\n * @param {Array.<Element>} contexts\n */\nfunction updateClasses(clearContainerCache, contexts) {\n\n\tif (clearContainerCache || !containerCache) {\n\t\tcontainerCache = createCacheMap();\n\t}\n\n\tif (!Object.keys(queries).length) {\n\t\treturn;\n\t}\n\n\tvar elementsTree = buildElementsTree(contexts);\n\n\twhile(updateClassesRead(elementsTree)) {\n\t\tupdateClassesWrite(elementsTree);\n\t}\n\tupdateClassesWrite(elementsTree);\n\n}\n\n/**\n * Update classes read step\n *\n * @param  {Array.<{_element: Element, _children: array, _queries: array, _changes: array, _done: boolean}>} treeNodes\n * @param  {boolean}                                                                                         dontMarkAsDone\n * @return {boolean} True if changes were found\n */\nfunction updateClassesRead(treeNodes, dontMarkAsDone) {\n\tvar hasChanges = false;\n\tvar i, node, j, query;\n\tfor (i = 0; i < treeNodes.length; i++) {\n\t\tnode = treeNodes[i];\n\t\tif (!node._done) {\n\t\t\tfor (j = 0; j < node._queries.length; j++) {\n\t\t\t\tquery = node._queries[j];\n\t\t\t\tvar queryMatches = evaluateQuery(node._element.parentNode, query);\n\t\t\t\tif (queryMatches !== hasQuery(node._element, query)) {\n\t\t\t\t\tnode._changes.push([queryMatches, query]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tnode._done = !dontMarkAsDone;\n\t\t}\n\t\thasChanges = updateClassesRead(node._children, dontMarkAsDone || node._changes.length)\n\t\t\t|| node._changes.length\n\t\t\t|| hasChanges;\n\t}\n\treturn hasChanges;\n}\n\n/**\n * Update classes write step\n *\n * @param  {Array.<{_element: Element, _children: array, _queries: array, _changes: array, _done: boolean}>} treeNodes\n */\nfunction updateClassesWrite(treeNodes) {\n\tvar node, j;\n\tfor (var i = 0; i < treeNodes.length; i++) {\n\t\tnode = treeNodes[i];\n\t\tfor (j = 0; j < node._changes.length; j++) {\n\t\t\t(node._changes[j][0] ? addQuery : removeQuery)(node._element, node._changes[j][1]);\n\t\t}\n\t\tnode._changes = [];\n\t\tupdateClassesWrite(node._children);\n\t}\n}\n\n/**\n * Build tree of all query elements\n *\n * @param  {Array.<Element>} contexts\n * @return {Array.<{_element: Element, _children: array, _queries: array, _changes: array, _done: boolean}>}\n */\nfunction buildElementsTree(contexts) {\n\n\tcontexts = contexts || [document];\n\n\tvar queriesArray = Object.keys(queries).map(function(key) {\n\t\treturn queries[key];\n\t});\n\n\tvar selector = queriesArray.map(function(query) {\n\t\treturn query._selector;\n\t}).join(',');\n\n\tvar elements = [];\n\tcontexts.forEach(function(context) {\n\t\tfor (var node = context.parentNode; node; node = node.parentNode) {\n\t\t\t// Skip nested contexts\n\t\t\tif (contexts.indexOf(node) !== -1) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (context !== document && elementMatchesSelector(context, selector)) {\n\t\t\telements.push(context);\n\t\t}\n\t\telements.push.apply(elements, arrayFrom(context.querySelectorAll(selector)));\n\t});\n\n\tvar tree = [];\n\tvar treeCache = createCacheMap();\n\n\telements.forEach(function(element) {\n\n\t\tif (element === documentElement) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar treeNode = {\n\t\t\t_element: element,\n\t\t\t_children: [],\n\t\t\t_queries: [],\n\t\t\t_changes: [],\n\t\t\t_done: false,\n\t\t};\n\n\t\tvar children = tree;\n\t\tfor (var node = element.parentNode; node; node = node.parentNode) {\n\t\t\tif (treeCache.get(node)) {\n\t\t\t\tchildren = treeCache.get(node)._children;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\ttreeCache.set(element, treeNode);\n\n\t\tchildren.push(treeNode);\n\n\t\tqueriesArray.forEach(function(query) {\n\t\t\tif (elementMatchesSelector(element, query._selector)) {\n\t\t\t\ttreeNode._queries.push(query);\n\t\t\t}\n\t\t});\n\n\t});\n\n\treturn tree;\n\n}\n\n/**\n * True if the query matches otherwise false\n *\n * @param  {Element} parent\n * @param  {object}  query\n * @return {boolean}\n */\nfunction evaluateQuery(parent, query) {\n\n\tvar container = getContainer(parent, query._prop);\n\tvar qValues = query._values.slice(0);\n\tvar i;\n\n\tvar cValue;\n\tif (query._prop === 'width' || query._prop === 'height') {\n\t\tcValue = getSize(container, query._prop);\n\t}\n\telse {\n\t\tcValue = getComputedStyle(container).getPropertyValue(query._prop);\n\t}\n\n\tif (query._filter) {\n\t\tvar color = parseColor(cValue);\n\t\tif (query._filter[0] === 'h') {\n\t\t\tcValue = color[0];\n\t\t}\n\t\telse if (query._filter[0] === 's') {\n\t\t\tcValue = color[1];\n\t\t}\n\t\telse if (query._filter[0] === 'l') {\n\t\t\tcValue = color[2];\n\t\t}\n\t\telse if (query._filter[0] === 'a') {\n\t\t\tcValue = color[3];\n\t\t}\n\t\telse {\n\t\t\treturn false;\n\t\t}\n\t}\n\telse if (query._valueType === 'c') {\n\t\tcValue = parseColor(cValue).join(',');\n\t}\n\telse if (query._valueType === 'l') {\n\t\tfor (i = 0; i < qValues.length; i++) {\n\t\t\tqValues[i] = getComputedLength(qValues[i], parent);\n\t\t}\n\t\tif (typeof cValue === 'string') {\n\t\t\tcValue = getComputedLength(cValue, parent);\n\t\t}\n\t}\n\telse if (query._valueType === 'n') {\n\t\tcValue = parseFloat(cValue);\n\t}\n\telse if (typeof cValue === 'string') {\n\t\tcValue = cValue.trim();\n\t}\n\n\tif ((\n\t\tquery._types[0][0] === '>'\n\t\t|| query._types[0][0] === '<'\n\t) && (\n\t\ttypeof cValue !== 'number'\n\t\t|| typeof qValues[0] !== 'number'\n\t)) {\n\t\treturn false;\n\t}\n\n\tfor (i = 0; i < qValues.length; i++) {\n\t\tif (!(\n\t\t\t(query._types[i] === '>=' && cValue >= qValues[i])\n\t\t\t|| (query._types[i] === '<=' && cValue <= qValues[i])\n\t\t\t|| (query._types[i] === '>' && cValue > qValues[i])\n\t\t\t|| (query._types[i] === '<' && cValue < qValues[i])\n\t\t\t|| (query._types[i] === '=' && cValue === qValues[i])\n\t\t)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n\n}\n\n/**\n * Get the nearest qualified container element starting by the element itself\n *\n * @param  {Element} element\n * @param  {string}  prop    CSS property\n * @return {Element}\n */\nfunction getContainer(element, prop) {\n\n\tvar cache;\n\tif (containerCache.has(element)) {\n\t\tcache = containerCache.get(element);\n\t\tif (cache[prop]) {\n\t\t\treturn cache[prop];\n\t\t}\n\t}\n\telse {\n\t\tcache = {};\n\t\tcontainerCache.set(element, cache);\n\t}\n\n\tif (element === documentElement) {\n\t\tcache[prop] = element;\n\t}\n\n\telse if (prop !== 'width' && prop !== 'height') {\n\t\t// Skip transparent background colors\n\t\tif (prop === 'background-color' && !parseColor(getComputedStyle(element).getPropertyValue(prop))[3]) {\n\t\t\tcache[prop] = getContainer(element.parentNode, prop);\n\t\t}\n\t\telse {\n\t\t\tcache[prop] = element;\n\t\t}\n\t}\n\n\t// Skip inline elements\n\telse if (getComputedStyle(element).display === 'inline') {\n\t\tcache[prop] = getContainer(element.parentNode, prop);\n\t}\n\n\telse if (isFixedSize(element, prop)) {\n\t\tcache[prop] = element;\n\t}\n\n\telse {\n\n\t\tvar parentNode = element.parentNode;\n\n\t\t// Skip to next positioned ancestor for absolute positioned elements\n\t\tif (getComputedStyle(element).position === 'absolute') {\n\t\t\twhile (\n\t\t\t\tparentNode.parentNode\n\t\t\t\t&& parentNode.parentNode.nodeType === 1\n\t\t\t\t&& ['relative', 'absolute'].indexOf(getComputedStyle(parentNode).position) === -1\n\t\t\t) {\n\t\t\t\tparentNode = parentNode.parentNode;\n\t\t\t}\n\t\t}\n\n\t\t// Skip to next ancestor with a transform applied for fixed positioned elements\n\t\tif (getComputedStyle(element).position === 'fixed') {\n\t\t\twhile (\n\t\t\t\tparentNode.parentNode\n\t\t\t\t&& parentNode.parentNode.nodeType === 1\n\t\t\t\t&& [undefined, 'none'].indexOf(\n\t\t\t\t\tgetComputedStyle(parentNode).transform\n\t\t\t\t\t|| getComputedStyle(parentNode).MsTransform\n\t\t\t\t\t|| getComputedStyle(parentNode).WebkitTransform\n\t\t\t\t) !== -1\n\t\t\t) {\n\t\t\t\tparentNode = parentNode.parentNode;\n\t\t\t}\n\t\t}\n\n\t\tvar parentContainer = getContainer(parentNode, prop);\n\t\twhile (getComputedStyle(parentNode).display === 'inline') {\n\t\t\tparentNode = parentNode.parentNode;\n\t\t}\n\t\tif (parentNode === parentContainer && !isIntrinsicSize(element, prop)) {\n\t\t\tcache[prop] = element;\n\t\t}\n\t\telse {\n\t\t\tcache[prop] = parentContainer;\n\t\t}\n\t}\n\n\treturn cache[prop];\n\n}\n\n/**\n * Is the size of the element a fixed length e.g. `1px`?\n *\n * @param  {Element} element\n * @param  {string}  prop    `width` or `height`\n * @return {boolean}\n */\nfunction isFixedSize(element, prop) {\n\tvar originalStyle = getOriginalStyle(element, prop);\n\tif (originalStyle && (\n\t\toriginalStyle.match(LENGTH_REGEXP)\n\t\t|| originalStyle.match(/^calc\\([^%]*\\)$/i)\n\t)) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n/**\n * Is the size of the element depending on its descendants?\n *\n * @param  {Element} element\n * @param  {string}  prop    `width` or `height`\n * @return {boolean}\n */\nfunction isIntrinsicSize(element, prop) {\n\n\tvar computedStyle = getComputedStyle(element);\n\n\tif (computedStyle.display === 'none') {\n\t\treturn false;\n\t}\n\n\tif (computedStyle.display === 'inline') {\n\t\treturn true;\n\t}\n\n\t// Non-floating non-absolute block elements (only width)\n\tif (\n\t\tprop === 'width'\n\t\t&& ['block', 'list-item', 'flex', 'grid'].indexOf(computedStyle.display) !== -1\n\t\t&& computedStyle.cssFloat === 'none'\n\t\t&& computedStyle.position !== 'absolute'\n\t\t&& computedStyle.position !== 'fixed'\n\t) {\n\t\treturn false;\n\t}\n\n\tvar originalStyle = getOriginalStyle(element, prop);\n\n\t// Fixed size\n\tif (originalStyle && originalStyle.match(LENGTH_REGEXP)) {\n\t\treturn false;\n\t}\n\n\t// Percentage size\n\tif (originalStyle && originalStyle.substr(-1) === '%') {\n\t\treturn false;\n\t}\n\n\t// Calc expression\n\tif (originalStyle && originalStyle.substr(0, 5) === 'calc(') {\n\t\treturn false;\n\t}\n\n\t// Elements without a defined size\n\treturn true;\n\n}\n\n/**\n * Get the computed content-box size\n *\n * @param  {Element} element\n * @param  {string}  prop    `width` or `height`\n * @return {number}\n */\nfunction getSize(element, prop) {\n\tvar style = getComputedStyle(element);\n\tif (prop === 'width') {\n\t\treturn element.offsetWidth\n\t\t\t- parseFloat(style.borderLeftWidth)\n\t\t\t- parseFloat(style.paddingLeft)\n\t\t\t- parseFloat(style.borderRightWidth)\n\t\t\t- parseFloat(style.paddingRight);\n\t}\n\telse {\n\t\treturn element.offsetHeight\n\t\t\t- parseFloat(style.borderTopWidth)\n\t\t\t- parseFloat(style.paddingTop)\n\t\t\t- parseFloat(style.borderBottomWidth)\n\t\t\t- parseFloat(style.paddingBottom);\n\t}\n}\n\n/**\n * Get the computed length in pixel of a CSS length value\n *\n * @param  {string}  value\n * @param  {Element} element\n * @return {number}\n */\nfunction getComputedLength(value, element) {\n\tvar length = value.match(LENGTH_REGEXP);\n\tif (!length) {\n\t\treturn parseFloat(value);\n\t}\n\tvalue = parseFloat(length[1]);\n\tvar unit = length[2].toLowerCase();\n\tif (FIXED_UNIT_MAP[unit]) {\n\t\treturn value * FIXED_UNIT_MAP[unit];\n\t}\n\tif (unit === 'vw') {\n\t\treturn value * window.innerWidth / 100;\n\t}\n\tif (unit === 'vh') {\n\t\treturn value * window.innerHeight / 100;\n\t}\n\tif (unit === 'vmin') {\n\t\treturn value * Math.min(window.innerWidth, window.innerHeight) / 100;\n\t}\n\tif (unit === 'vmax') {\n\t\treturn value * Math.max(window.innerWidth, window.innerHeight) / 100;\n\t}\n\t// em units\n\tif (unit === 'rem') {\n\t\telement = documentElement;\n\t}\n\tif (unit === 'ex') {\n\t\tvalue /= 2;\n\t}\n\treturn parseFloat(getComputedStyle(element).fontSize) * value;\n}\n\n/**\n * @param  {Element} element\n * @return {CSSStyleDeclaration}\n */\nfunction getComputedStyle(element) {\n\n\tvar style = window.getComputedStyle(element);\n\n\t// Fix display inline in some browsers\n\tif (style.display === 'inline' && (\n\t\tstyle.position === 'absolute'\n\t\t|| style.position === 'fixed'\n\t\t|| style.cssFloat !== 'none'\n\t)) {\n\t\tvar newStyle = {};\n\t\tfor (var prop in style) {\n\t\t\tif (typeof style[prop] === 'string') {\n\t\t\t\tnewStyle[prop] = style[prop];\n\t\t\t}\n\t\t}\n\t\tstyle = newStyle;\n\t\tstyle.display = 'block';\n\t\tstyle.getPropertyValue = function(property) {\n\t\t\treturn this[property.replace(/-+(.)/g, function(match, char) {\n\t\t\t\treturn char.toUpperCase();\n\t\t\t})];\n\t\t};\n\t}\n\n\treturn style;\n\n}\n\n/**\n * Get the original style of an element as it was specified in CSS\n *\n * @param  {Element} element\n * @param  {string}  prop    Property to return, e.g. `width` or `height`\n * @return {string}\n */\nfunction getOriginalStyle(element, prop) {\n\n\tvar matchedRules = [];\n\tvar value;\n\tvar j;\n\n\tmatchedRules = sortRulesBySpecificity(\n\t\tfilterRulesByElementAndProp(styleCache[prop], element, prop)\n\t);\n\n\t// Add style attribute\n\tmatchedRules.unshift({\n\t\t_rule: {\n\t\t\tstyle: element.style,\n\t\t},\n\t});\n\n\t// Loop through all important styles\n\tfor (j = 0; j < matchedRules.length; j++) {\n\t\tif (\n\t\t\t(value = matchedRules[j]._rule.style.getPropertyValue(prop))\n\t\t\t&& matchedRules[j]._rule.style.getPropertyPriority(prop) === 'important'\n\t\t) {\n\t\t\treturn value;\n\t\t}\n\t}\n\n\t// Loop through all non-important styles\n\tfor (j = 0; j < matchedRules.length; j++) {\n\t\tif (\n\t\t\t(value = matchedRules[j]._rule.style.getPropertyValue(prop))\n\t\t\t&& matchedRules[j]._rule.style.getPropertyPriority(prop) !== 'important'\n\t\t) {\n\t\t\treturn value;\n\t\t}\n\t}\n\n\treturn undefined;\n\n}\n\n/**\n * @type {CSSStyleDeclaration}\n */\nvar parseColorStyle = createElement('div').style;\n\n/**\n * Parse CSS color and return as HSLA array\n *\n * @param  {string} color\n * @return {Array.<number>}\n */\nfunction parseColor(color) {\n\n\t// Let the browser round the RGBA values for consistency\n\tparseColorStyle.cssText = 'color:' + color;\n\tcolor = parseColorStyle.color;\n\n\tif (!color || !color.split || !color.split('(')[1]) {\n\t\treturn [0, 0, 0, 0];\n\t}\n\n\tcolor = color.split('(')[1].split(',').map(parseFloat);\n\n\tif (color[3] === undefined) {\n\t\tcolor[3] = 1;\n\t}\n\telse if (!color[3]) {\n\t\tcolor[0] = color[1] = color[2] = 0;\n\t}\n\n\tcolor[3] = Math.round(color[3] * 255);\n\n\treturn rgbaToHsla(color);\n\n}\n\n/**\n * @param  {Array.<number>} color\n * @return {Array.<number>}\n */\nfunction rgbaToHsla(color) {\n\n\tvar red = color[0] / 255;\n\tvar green = color[1] / 255;\n\tvar blue = color[2] / 255;\n\n\tvar max = Math.max(red, green, blue);\n\tvar min = Math.min(red, green, blue);\n\n\tvar hue;\n\tvar saturation;\n\tvar lightness = (max + min) / 2;\n\n\thue = saturation = 0;\n\n\tif (max !== min) {\n\t\tvar delta = max - min;\n\t\tsaturation = delta / (lightness > 0.5 ? 2 - max - min : max + min);\n\t\tif (max === red) {\n\t\t\thue = (green - blue) / delta + ((green < blue) * 6);\n\t\t}\n\t\telse if (max === green) {\n\t\t\thue = (blue - red) / delta + 2;\n\t\t}\n\t\telse {\n\t\t\thue = (red - green) / delta + 4;\n\t\t}\n\t\thue /= 6;\n\t}\n\n\treturn [hue * 360, saturation * 100, lightness * 100, color[3]];\n}\n\n/**\n * Filter rules by matching the element and at least one property\n *\n * @param  {{<string>: Array.<{_selector: string, _rule: CSSRule}>}} rules\n * @param  {Element}                                                 element\n * @param  {string}                                                  prop\n * @return {Array.<{_selector: string, _rule: CSSRule}>}\n */\nfunction filterRulesByElementAndProp(rules, element, prop) {\n\tvar foundRules = [];\n\tif (element.id) {\n\t\tfoundRules = foundRules.concat(rules['#' + element.id] || []);\n\t}\n\t(element.getAttribute('class') || '').split(/\\s+/).forEach(function(className) {\n\t\tfoundRules = foundRules.concat(rules['.' + className] || []);\n\t});\n\tfoundRules = foundRules\n\t\t.concat(rules[element.tagName.toLowerCase()] || [])\n\t\t.concat(rules['*'] || []);\n\treturn foundRules.filter(function(rule) {\n\t\treturn rule._rule.style.getPropertyValue(prop)\n\t\t\t&& (\n\t\t\t\t!rule._rule.parentRule\n\t\t\t\t|| rule._rule.parentRule.type !== 4 // @media rule\n\t\t\t\t|| matchesMedia(rule._rule.parentRule.media.mediaText)\n\t\t\t)\n\t\t\t&& elementMatchesSelector(element, rule._selector);\n\t});\n}\n\nvar elementMatchesSelectorMethod = (function(element) {\n\treturn element.matches\n\t\t|| element.mozMatchesSelector\n\t\t|| element.msMatchesSelector\n\t\t|| element.oMatchesSelector\n\t\t|| element.webkitMatchesSelector;\n})(createElement('div'));\n\n/**\n * @param  {Element} element\n * @param  {string}  selector\n * @return {boolean}\n */\nfunction elementMatchesSelector(element, selector) {\n\ttry {\n\t\treturn !!elementMatchesSelectorMethod.call(element, selector);\n\t}\n\tcatch(e) {\n\t\treturn false;\n\t}\n}\n\n/**\n * @param  {Array.<{_specificity: number}>} rules\n * @return {Array.<{_specificity: number}>}\n */\nfunction sortRulesBySpecificity(rules) {\n\treturn rules.map(function(rule, i) {\n\t\treturn [rule, i];\n\t}).sort(function(a, b) {\n\t\treturn (b[0]._specificity - a[0]._specificity) || b[1] - a[1];\n\t}).map(function(rule) {\n\t\treturn rule[0];\n\t});\n}\n\n/**\n * @param  {string} selector\n * @return {number}\n */\nfunction getSpecificity(selector) {\n\n\tvar idScore = 0;\n\tvar classScore = 0;\n\tvar typeScore = 0;\n\n\tselector\n\t\t.replace(SELECTOR_ESCAPED_REGEXP, function() {\n\t\t\tclassScore++;\n\t\t\treturn '';\n\t\t})\n\t\t.replace(SELECTOR_REGEXP, function() {\n\t\t\tclassScore++;\n\t\t\treturn '';\n\t\t})\n\t\t.replace(ATTR_REGEXP, function() {\n\t\t\tclassScore++;\n\t\t\treturn '';\n\t\t})\n\t\t.replace(PSEUDO_NOT_REGEXP, ' ')\n\t\t.replace(ID_REGEXP, function() {\n\t\t\tidScore++;\n\t\t\treturn '';\n\t\t})\n\t\t.replace(CLASS_REGEXP, function() {\n\t\t\tclassScore++;\n\t\t\treturn '';\n\t\t})\n\t\t.replace(PSEUDO_ELEMENT_REGEXP, function() {\n\t\t\ttypeScore++;\n\t\t\treturn '';\n\t\t})\n\t\t.replace(PSEUDO_CLASS_REGEXP, function() {\n\t\t\tclassScore++;\n\t\t\treturn '';\n\t\t})\n\t\t.replace(ELEMENT_REGEXP, function() {\n\t\t\ttypeScore++;\n\t\t\treturn '';\n\t\t});\n\n\treturn (\n\t\t(idScore * 256 * 256)\n\t\t+ (classScore * 256)\n\t\t+ typeScore\n\t);\n\n}\n\n/**\n * Create a new Map or a simple shim of it in non-supporting browsers\n *\n * @return {Map}\n */\nfunction createCacheMap() {\n\n\tif (typeof Map === 'function') {\n\t\treturn new Map();\n\t}\n\n\tvar keys = [];\n\tvar values = [];\n\n\tfunction getIndex(key) {\n\t\treturn keys.indexOf(key);\n\t}\n\n\tfunction get(key) {\n\t\treturn values[getIndex(key)];\n\t}\n\n\tfunction has(key) {\n\t\treturn getIndex(key) !== -1;\n\t}\n\n\tfunction set(key, value) {\n\t\tvar index = getIndex(key);\n\t\tif (index === -1) {\n\t\t\tindex = keys.push(key) - 1;\n\t\t}\n\t\tvalues[index] = value;\n\t}\n\n\tfunction deleteFunc(key) {\n\t\tvar index = getIndex(key);\n\t\tif (index === -1) {\n\t\t\treturn false;\n\t\t}\n\t\tdelete keys[index];\n\t\tdelete values[index];\n\t\treturn true;\n\t}\n\n\tfunction forEach(callback) {\n\t\tkeys.forEach(function(key, index) {\n\t\t\tif (key !== undefined) {\n\t\t\t\tcallback(values[index], key);\n\t\t\t}\n\t\t});\n\t}\n\n\treturn {\n\t\tset: set,\n\t\tget: get,\n\t\thas: has,\n\t\tdelete: deleteFunc,\n\t\tforEach: forEach,\n\t};\n}\n\n/**\n * @param  {Element}                                  element\n * @param  {{_className: string, _attribute: string}} query\n * @return {boolean}\n */\nfunction hasQuery(element, query) {\n\tif (query._className) {\n\t\treturn hasClass(element, query._className);\n\t}\n\treturn hasAttributeValue(element, 'data-cq', query._attribute);\n}\n\n/**\n * @param {Element}                                  element\n * @param {{_className: string, _attribute: string}} query\n */\nfunction addQuery(element, query) {\n\tif (query._className) {\n\t\taddClass(element, query._className);\n\t}\n\telse {\n\t\taddAttributeValue(element, 'data-cq', query._attribute);\n\t}\n}\n\n/**\n * @param {Element}                                  element\n * @param {{_className: string, _attribute: string}} query\n */\nfunction removeQuery(element, query) {\n\tif (query._className) {\n\t\tremoveClass(element, query._className);\n\t}\n\telse {\n\t\tremoveAttributeValue(element, 'data-cq', query._attribute);\n\t}\n}\n\n/**\n * @param {Element} element\n * @param {string}  className\n */\nfunction hasClass(element, className) {\n\tif (element.classList) {\n\t\treturn element.classList.contains(className);\n\t}\n\treturn hasAttributeValue(element, 'class', className);\n}\n\n/**\n * @param {Element} element\n * @param {string}  className\n */\nfunction addClass(element, className) {\n\tif (element.classList) {\n\t\telement.classList.add(className);\n\t}\n\telse if (!hasClass(element, className)) {\n\t\taddAttributeValue(element, 'class', className);\n\t}\n}\n\n/**\n * @param {Element} element\n * @param {string}  className\n */\nfunction removeClass(element, className) {\n\tif (element.classList) {\n\t\telement.classList.remove(className);\n\t}\n\telse {\n\t\tremoveAttributeValue(element, 'class', className);\n\t}\n}\n\n/**\n * @param  {Element} element\n * @param  {string}  attr\n * @param  {string}  value\n * @return {boolean}\n */\nfunction hasAttributeValue(element, attr, value) {\n\treturn !!(element.getAttribute(attr) || '').match(new RegExp(\n\t\t'(?:^|\\\\s+)'\n\t\t+ value.replace(REGEXP_ESCAPE_REGEXP, '\\\\$&')\n\t\t+ '($|\\\\s+)'\n\t));\n}\n\n/**\n * @param {Element} element\n * @param {string}  attr\n * @param {string}  value\n */\nfunction addAttributeValue(element, attr, value) {\n\tif (!hasAttributeValue(element, attr, value)) {\n\t\telement.setAttribute(attr, (element.getAttribute(attr) || '') + ' ' + value);\n\t}\n}\n\n/**\n * @param {Element} element\n * @param {string}  attr\n * @param {string}  value\n */\nfunction removeAttributeValue(element, attr, value) {\n\telement.setAttribute(attr, (element.getAttribute(attr) || '').replace(\n\t\tnew RegExp(\n\t\t\t'(?:^|\\\\s+)'\n\t\t\t+ value.replace(REGEXP_ESCAPE_REGEXP, '\\\\$&')\n\t\t\t+ '($|\\\\s+)'\n\t\t),\n\t\t'$1'\n\t));\n}\n\n/**\n * @param  {string} media\n * @return {boolean}\n */\nfunction matchesMedia(media) {\n\tif (window.matchMedia) {\n\t\treturn window.matchMedia(media).matches;\n\t}\n\treturn (window.styleMedia || window.media).matchMedium(media);\n}\n\n/**\n * Array.from or a simple shim for non-supporting browsers\n *\n * @param  {{length: number}} arrayLike\n * @return {array}\n */\nfunction arrayFrom(arrayLike) {\n\tif (Array.from) {\n\t\treturn Array.from(arrayLike);\n\t}\n\tvar array = [];\n\tfor (var i = 0; i < arrayLike.length; i++) {\n\t\tarray[i] = arrayLike[i];\n\t}\n\treturn array;\n}\n\nstartObserving();\n\nreturn api;\n\n}));\n\n})(window, document);\n\n\n//# sourceURL=webpack:///../node_modules/cq-prolyfill/cq-prolyfill.js?")},234:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _include_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(502);\n// /*!\r\n//  * global_vars is a file particular to your site\r\n//  * it contains base functions that are likely but not always used\r\n//  **/\r\n\r\n// check for buildinfo and add classes to body tag\r\n(function(){\r\n\r\n    if ( window.buildinfo !== undefined ){\r\n        var b = document.getElementsByTagName('body')[0]; \r\n        b.setAttribute( 'data-buildver', window.buildinfo.ver );\r\n        b.setAttribute( 'data-sitetemplate', window.buildinfo.template );\r\n\r\n        /*\r\n             // how to style against certain versions\r\n             body[data-buildver^=\"2.0\"]{\r\n             margin-top: 100px;\r\n             }\r\n         */\r\n    }\r\n\r\n})();\r\n\r\n\r\n\r\n__webpack_require__(429);\r\n__webpack_require__(502);\r\nvar cq = __webpack_require__(233)({ \r\n    preprocess: true\r\n});\r\n\r\nFS.events.onElementShown('panel', function ($element) {\r\n    cq.reevaluate(false, false, $.makeArray($element));\r\n});\r\n\r\nFS.events.onElementDialogShown('all', function ($element) {\r\n    cq.reevaluate(false, false, $.makeArray($element));\r\n});\r\n\r\n\r\n_include_index__WEBPACK_IMPORTED_MODULE_0__.INITIATE_ALL.init();\r\n\r\n\n\n//# sourceURL=webpack:///./js/global.js?")},279:function(){eval("/*\r\n *\tjQuery dotdotdot 1.8.3\r\n *\r\n *\tCopyright (c) Fred Heusschen\r\n *\twww.frebsite.nl\r\n *\r\n *\tPlugin website:\r\n *\tdotdotdot.frebsite.nl\r\n *\r\n *\tLicensed under the MIT license.\r\n *\thttp://en.wikipedia.org/wiki/MIT_License\r\n */\r\n\r\n(function( $, undef )\r\n{\r\n\tif ( $.fn.dotdotdot )\r\n\t{\r\n\t\treturn;\r\n\t}\r\n\r\n\t$.fn.dotdotdot = function( o )\r\n\t{\r\n\t\tif ( this.length == 0 )\r\n\t\t{\r\n\t\t\t$.fn.dotdotdot.debug( 'No element found for \"' + this.selector + '\".' );\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tif ( this.length > 1 )\r\n\t\t{\r\n\t\t\treturn this.each(\r\n\t\t\t\tfunction()\r\n\t\t\t\t{\r\n\t\t\t\t\t$(this).dotdotdot( o );\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t}\r\n\r\n\r\n\t\tvar $dot = this;\r\n\t\tvar orgContent\t= $dot.contents();\r\n\r\n\t\tif ( $dot.data( 'dotdotdot' ) )\r\n\t\t{\r\n\t\t\t$dot.trigger( 'destroy.dot' );\r\n\t\t}\r\n\r\n\t\t$dot.data( 'dotdotdot-style', $dot.attr( 'style' ) || '' );\r\n\t\t$dot.css( 'word-wrap', 'break-word' );\r\n\t\tif ($dot.css( 'white-space' ) === 'nowrap')\r\n\t\t{\r\n\t\t\t$dot.css( 'white-space', 'normal' );\r\n\t\t}\r\n\r\n\t\t$dot.bind_events = function()\r\n\t\t{\r\n\t\t\t$dot.bind(\r\n\t\t\t\t'update.dot',\r\n\t\t\t\tfunction( e, c )\r\n\t\t\t\t{\r\n\t\t\t\t\t$dot.removeClass(\"is-truncated\");\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\te.stopPropagation();\r\n\r\n\t\t\t\t\tswitch( typeof opts.height )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcase 'number':\r\n\t\t\t\t\t\t\topts.maxHeight = opts.height;\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'function':\r\n\t\t\t\t\t\t\topts.maxHeight = opts.height.call( $dot[ 0 ] );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\topts.maxHeight = getTrueInnerHeight( $dot );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\topts.maxHeight += opts.tolerance;\r\n\r\n\t\t\t\t\tif ( typeof c != 'undefined' )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif ( typeof c == 'string' || ('nodeType' in c && c.nodeType === 1) )\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t \t\tc = $('<div />').append( c ).contents();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( c instanceof $ )\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\torgContent = c;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t$inr = $dot.wrapInner( '<div class=\"dotdotdot\" />' ).children();\r\n\t\t\t\t\t$inr.contents()\r\n\t\t\t\t\t\t.detach()\r\n\t\t\t\t\t\t.end()\r\n\t\t\t\t\t\t.append( orgContent.clone( true ) )\r\n\t\t\t\t\t\t.find( 'br' )\r\n\t\t\t\t\t\t.replaceWith( '  <br />  ' )\r\n\t\t\t\t\t\t.end()\r\n\t\t\t\t\t\t.css({\r\n\t\t\t\t\t\t\t'height'\t: 'auto',\r\n\t\t\t\t\t\t\t'width'\t\t: 'auto',\r\n\t\t\t\t\t\t\t'border'\t: 'none',\r\n\t\t\t\t\t\t\t'padding'\t: 0,\r\n\t\t\t\t\t\t\t'margin'\t: 0\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\tvar after = false,\r\n\t\t\t\t\t\ttrunc = false;\r\n\r\n\t\t\t\t\tif ( conf.afterElement )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tafter = conf.afterElement.clone( true );\r\n\t\t\t\t\t    after.show();\r\n\t\t\t\t\t\tconf.afterElement.detach();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( test( $inr, opts ) )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif ( opts.wrap == 'children' )\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\ttrunc = children( $inr, opts, after );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\ttrunc = ellipsis( $inr, $dot, $inr, opts, after );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t$inr.replaceWith( $inr.contents() );\r\n\t\t\t\t\t$inr = null;\r\n\r\n\t\t\t\t\tif ( $.isFunction( opts.callback ) )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\topts.callback.call( $dot[ 0 ], trunc, orgContent );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconf.isTruncated = trunc;\r\n\t\t\t\t\treturn trunc;\r\n\t\t\t\t}\r\n\r\n\t\t\t).bind(\r\n\t\t\t\t'isTruncated.dot',\r\n\t\t\t\tfunction( e, fn )\r\n\t\t\t\t{\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\te.stopPropagation();\r\n\r\n\t\t\t\t\tif ( typeof fn == 'function' )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tfn.call( $dot[ 0 ], conf.isTruncated );\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn conf.isTruncated;\r\n\t\t\t\t}\r\n\r\n\t\t\t).bind(\r\n\t\t\t\t'originalContent.dot',\r\n\t\t\t\tfunction( e, fn )\r\n\t\t\t\t{\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\te.stopPropagation();\r\n\r\n\t\t\t\t\tif ( typeof fn == 'function' )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tfn.call( $dot[ 0 ], orgContent );\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn orgContent;\r\n\t\t\t\t}\r\n\r\n\t\t\t).bind(\r\n\t\t\t\t'destroy.dot',\r\n\t\t\t\tfunction( e )\r\n\t\t\t\t{\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\te.stopPropagation();\r\n\r\n\t\t\t\t\t$dot.unwatch()\r\n\t\t\t\t\t\t.unbind_events()\r\n\t\t\t\t\t\t.contents()\r\n\t\t\t\t\t\t.detach()\r\n\t\t\t\t\t\t.end()\r\n\t\t\t\t\t\t.append( orgContent )\r\n\t\t\t\t\t\t.attr( 'style', $dot.data( 'dotdotdot-style' ) || '' )\r\n\t\t\t\t\t\t.removeClass( 'is-truncated' )\r\n\t\t\t\t\t\t.data( 'dotdotdot', false );\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t\treturn $dot;\r\n\t\t};\t//\t/bind_events\r\n\r\n\t\t$dot.unbind_events = function()\r\n\t\t{\r\n\t\t\t$dot.unbind('.dot');\r\n\t\t\treturn $dot;\r\n\t\t};\t//\t/unbind_events\r\n\r\n\t\t$dot.watch = function()\r\n\t\t{\r\n\t\t\t$dot.unwatch();\r\n\t\t\tif ( opts.watch == 'window' )\r\n\t\t\t{\r\n\t\t\t\tvar $window = $(window),\r\n\t\t\t\t\t_wWidth = $window.width(),\r\n\t\t\t\t\t_wHeight = $window.height();\r\n\r\n\t\t\t\t$window.bind(\r\n\t\t\t\t\t'resize.dot' + conf.dotId,\r\n\t\t\t\t\tfunction()\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif ( _wWidth != $window.width() || _wHeight != $window.height() || !opts.windowResizeFix )\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t_wWidth = $window.width();\r\n\t\t\t\t\t\t\t_wHeight = $window.height();\r\n\r\n\t\t\t\t\t\t\tif ( watchInt )\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tclearInterval( watchInt );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\twatchInt = setTimeout(\r\n\t\t\t\t\t\t\t\tfunction()\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t$dot.trigger( 'update.dot' );\r\n\t\t\t\t\t\t\t\t}, 100\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\twatchOrg = getSizes( $dot );\r\n\t\t\t\twatchInt = setInterval(\r\n\t\t\t\t\tfunction()\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif ( $dot.is( ':visible' ) )\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tvar watchNew = getSizes( $dot );\r\n\t\t\t\t\t\t\tif ( watchOrg.width  != watchNew.width ||\r\n\t\t\t\t\t\t\t\t watchOrg.height != watchNew.height )\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t$dot.trigger( 'update.dot' );\r\n\t\t\t\t\t\t\t\twatchOrg = watchNew;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, 500\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\treturn $dot;\r\n\t\t};\r\n\t\t$dot.unwatch = function()\r\n\t\t{\r\n\t\t\t$(window).unbind( 'resize.dot' + conf.dotId );\r\n\t\t\tif ( watchInt )\r\n\t\t\t{\r\n\t\t\t\tclearInterval( watchInt );\r\n\t\t\t}\r\n\t\t\treturn $dot;\r\n\t\t};\r\n\r\n\t\tvar\topts \t\t= $.extend( true, {}, $.fn.dotdotdot.defaults, o ),\r\n\t\t\tconf\t\t= {},\r\n\t\t\twatchOrg\t= {},\r\n\t\t\twatchInt\t= null,\r\n\t\t\t$inr\t\t= null;\r\n\r\n\r\n\t\tif ( !( opts.lastCharacter.remove instanceof Array ) )\r\n\t\t{\r\n\t\t\topts.lastCharacter.remove = $.fn.dotdotdot.defaultArrays.lastCharacter.remove;\r\n\t\t}\r\n\t\tif ( !( opts.lastCharacter.noEllipsis instanceof Array ) )\r\n\t\t{\r\n\t\t\topts.lastCharacter.noEllipsis = $.fn.dotdotdot.defaultArrays.lastCharacter.noEllipsis;\r\n\t\t}\r\n\r\n\r\n\t\tconf.afterElement\t= getElement( opts.after, $dot );\r\n\t\tconf.isTruncated\t= false;\r\n\t\tconf.dotId\t\t\t= dotId++;\r\n\r\n\r\n\t\t$dot.data( 'dotdotdot', true )\r\n\t\t\t.bind_events()\r\n\t\t\t.trigger( 'update.dot' );\r\n\r\n\t\tif ( opts.watch )\r\n\t\t{\r\n\t\t\t$dot.watch();\r\n\t\t}\r\n\r\n\t\treturn $dot;\r\n\t};\r\n\r\n\r\n\t//\tpublic\r\n\t$.fn.dotdotdot.defaults = {\r\n\t\t'ellipsis'\t\t\t: '... ',\r\n\t\t'wrap'\t\t\t\t: 'word',\r\n\t\t'fallbackToLetter'\t: true,\r\n\t\t'lastCharacter'\t\t: {},\r\n\t\t'tolerance'\t\t\t: 0,\r\n\t\t'callback'\t\t\t: null,\r\n\t\t'after'\t\t\t\t: null,\r\n\t\t'height'\t\t\t: null,\r\n\t\t'watch'\t\t\t\t: false,\r\n\t\t'windowResizeFix'\t: true\r\n\t};\r\n\t$.fn.dotdotdot.defaultArrays = {\r\n\t\t'lastCharacter'\t\t: {\r\n\t\t\t'remove'\t\t\t: [ ' ', '\\u3000', ',', ';', '.', '!', '?' ],\r\n\t\t\t'noEllipsis'\t\t: []\r\n\t\t}\r\n\t};\r\n\t$.fn.dotdotdot.debug = function( msg ) {};\r\n\r\n\r\n\t//\tprivate\r\n\tvar dotId = 1;\r\n\r\n\tfunction children( $elem, o, after )\r\n\t{\r\n\t\tvar $elements \t= $elem.children(),\r\n\t\t\tisTruncated\t= false;\r\n\r\n\t\t$elem.empty();\r\n\r\n\t\tfor ( var a = 0, l = $elements.length; a < l; a++ )\r\n\t\t{\r\n\t\t\tvar $e = $elements.eq( a );\r\n\t\t\t$elem.append( $e );\r\n\t\t\tif ( after )\r\n\t\t\t{\r\n\t\t\t\t$elem.append( after );\r\n\t\t\t}\r\n\t\t\tif ( test( $elem, o ) )\r\n\t\t\t{\r\n\t\t\t\t$e.remove();\r\n\t\t\t\tisTruncated = true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tif ( after )\r\n\t\t\t\t{\r\n\t\t\t\t\tafter.detach();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn isTruncated;\r\n\t}\r\n\tfunction ellipsis( $elem, $d, $i, o, after )\r\n\t{\r\n\t\tvar isTruncated\t= false;\r\n\r\n\t\t//\tDon't put the ellipsis directly inside these elements\r\n\t\tvar notx = 'a, table, thead, tbody, tfoot, tr, col, colgroup, object, embed, param, ol, ul, dl, blockquote, select, optgroup, option, textarea, script, style';\r\n\r\n\t\t//\tDon't remove these elements even if they are after the ellipsis\r\n\t\tvar noty = 'script, .dotdotdot-keep';\r\n\r\n\t\t$elem\r\n\t\t\t.contents()\r\n\t\t\t.detach()\r\n\t\t\t.each(\r\n\t\t\t\tfunction()\r\n\t\t\t\t{\r\n\r\n\t\t\t\t\tvar e\t= this,\r\n\t\t\t\t\t\t$e\t= $(e);\r\n\r\n\t\t\t\t\tif ( typeof e == 'undefined' )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if ( $e.is( noty ) )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$elem.append( $e );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if ( isTruncated )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$elem.append( $e );\r\n\t\t\t\t\t\tif ( after && !$e.is( o.after ) && !$e.find( o.after ).length  )\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$elem[ $elem.is( notx ) ? 'after' : 'append' ]( after );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( test( $i, o ) )\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif ( e.nodeType == 3 ) // node is TEXT\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tisTruncated = ellipsisElement( $e, $d, $i, o, after );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tisTruncated = ellipsis( $e, $d, $i, o, after );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( !isTruncated )\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif ( after )\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tafter.detach();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t$d.addClass(\"is-truncated\");\r\n\t\treturn isTruncated;\r\n\t}\r\n\tfunction ellipsisElement( $e, $d, $i, o, after )\r\n\t{\r\n\t\tvar e = $e[ 0 ];\r\n\r\n\t\tif ( !e )\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tvar txt\t\t\t= getTextContent( e ),\r\n\t\t\tspace\t\t= ( txt.indexOf(' ') !== -1 ) ? ' ' : '\\u3000',\r\n\t\t\tseparator\t= ( o.wrap == 'letter' ) ? '' : space,\r\n\t\t\ttextArr\t\t= txt.split( separator ),\r\n\t\t\tposition \t= -1,\r\n\t\t\tmidPos\t\t= -1,\r\n\t\t\tstartPos\t= 0,\r\n\t\t\tendPos\t\t= textArr.length - 1;\r\n\r\n\r\n\t\t//\tOnly one word\r\n\t\tif ( o.fallbackToLetter && startPos == 0 && endPos == 0 )\r\n\t\t{\r\n\t\t\tseparator\t= '';\r\n\t\t\ttextArr\t\t= txt.split( separator );\r\n\t\t\tendPos\t\t= textArr.length - 1;\r\n\t\t}\r\n\r\n\t\twhile ( startPos <= endPos && !( startPos == 0 && endPos == 0 ) )\r\n\t\t{\r\n\t\t\tvar m = Math.floor( ( startPos + endPos ) / 2 );\r\n\t\t\tif ( m == midPos )\r\n\t\t\t{\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tmidPos = m;\r\n\r\n\t\t\tsetTextContent( e, textArr.slice( 0, midPos + 1 ).join( separator ) + o.ellipsis );\r\n\t\t\t$i.children()\r\n\t\t\t\t.each(\r\n\t\t\t\t\tfunction()\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$(this).toggle().toggle();\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\r\n\t\t\tif ( !test( $i, o ) )\r\n\t\t\t{\r\n\t\t\t\tposition = midPos;\r\n\t\t\t\tstartPos = midPos;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tendPos = midPos;\r\n\r\n\t\t\t\t//\tFallback to letter\r\n\t\t\t\tif (o.fallbackToLetter && startPos == 0 && endPos == 0 )\r\n\t\t\t\t{\r\n\t\t\t\t\tseparator\t= '';\r\n\t\t\t\t\ttextArr\t\t= textArr[ 0 ].split( separator );\r\n\t\t\t\t\tposition\t= -1;\r\n\t\t\t\t\tmidPos\t\t= -1;\r\n\t\t\t\t\tstartPos\t= 0;\r\n\t\t\t\t\tendPos\t\t= textArr.length - 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( position != -1 && !( textArr.length == 1 && textArr[ 0 ].length == 0 ) )\r\n\t\t{\r\n\t\t\ttxt = addEllipsis( textArr.slice( 0, position + 1 ).join( separator ), o );\r\n\t\t\tsetTextContent( e, txt );\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tvar $w = $e.parent();\r\n\t\t\t$e.detach();\r\n\r\n\t\t\tvar afterLength = ( after && after.closest($w).length ) ? after.length : 0;\r\n\r\n\t\t\tif ( $w.contents().length > afterLength )\r\n\t\t\t{\r\n\t\t\t\te = findLastTextNode( $w.contents().eq( -1 - afterLength ), $d );\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\te = findLastTextNode( $w, $d, true );\r\n\t\t\t\tif ( !afterLength )\r\n\t\t\t\t{\r\n\t\t\t\t\t$w.detach();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ( e )\r\n\t\t\t{\r\n\t\t\t\ttxt = addEllipsis( getTextContent( e ), o );\r\n\t\t\t\tsetTextContent( e, txt );\r\n\t\t\t\tif ( afterLength && after )\r\n\t\t\t\t{\r\n\t\t\t\t\tvar $parent = after.parent();\r\n\r\n\t\t\t\t\t$(e).parent().append( after );\r\n\r\n\t\t\t\t\tif ( !$.trim( $parent.html() ) )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$parent.remove();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\tfunction test( $i, o )\r\n\t{\r\n\t\treturn $i.innerHeight() > o.maxHeight;\r\n\t}\r\n\tfunction addEllipsis( txt, o )\r\n\t{\r\n\t\twhile( $.inArray( txt.slice( -1 ), o.lastCharacter.remove ) > -1 )\r\n\t\t{\r\n\t\t\ttxt = txt.slice( 0, -1 );\r\n\t\t}\r\n\t\tif ( $.inArray( txt.slice( -1 ), o.lastCharacter.noEllipsis ) < 0 )\r\n\t\t{\r\n\t\t\ttxt += o.ellipsis;\r\n\t\t}\r\n\t\treturn txt;\r\n\t}\r\n\tfunction getSizes( $d )\r\n\t{\r\n\t\treturn {\r\n\t\t\t'width'\t: $d.innerWidth(),\r\n\t\t\t'height': $d.innerHeight()\r\n\t\t};\r\n\t}\r\n\tfunction setTextContent( e, content )\r\n\t{\r\n\t\tif ( e.innerText )\r\n\t\t{\r\n\t\t\te.innerText = content;\r\n\t\t}\r\n\t\telse if ( e.nodeValue )\r\n\t\t{\r\n\t\t\te.nodeValue = content;\r\n\t\t}\r\n\t\telse if (e.textContent)\r\n\t\t{\r\n\t\t\te.textContent = content;\r\n\t\t}\r\n\r\n\t}\r\n\tfunction getTextContent( e )\r\n\t{\r\n\t\tif ( e.innerText )\r\n\t\t{\r\n\t\t\treturn e.innerText;\r\n\t\t}\r\n\t\telse if ( e.nodeValue )\r\n\t\t{\r\n\t\t\treturn e.nodeValue;\r\n\t\t}\r\n\t\telse if ( e.textContent )\r\n\t\t{\r\n\t\t\treturn e.textContent;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn \"\";\r\n\t\t}\r\n\t}\r\n\tfunction getPrevNode( n )\r\n\t{\r\n\t\tdo\r\n\t\t{\r\n\t\t\tn = n.previousSibling;\r\n\t\t}\r\n\t\twhile ( n && n.nodeType !== 1 && n.nodeType !== 3 );\r\n\r\n\t\treturn n;\r\n\t}\r\n\tfunction findLastTextNode( $el, $top, excludeCurrent )\r\n\t{\r\n\t\tvar e = $el && $el[ 0 ], p;\r\n\t\tif ( e )\r\n\t\t{\r\n\t\t\tif ( !excludeCurrent )\r\n\t\t\t{\r\n\t\t\t\tif ( e.nodeType === 3 )\r\n\t\t\t\t{\r\n\t\t\t\t\treturn e;\r\n\t\t\t\t}\r\n\t\t\t\tif ( $.trim( $el.text() ) )\r\n\t\t\t\t{\r\n\t\t\t\t\treturn findLastTextNode( $el.contents().last(), $top );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tp = getPrevNode( e );\r\n\t\t\twhile ( !p )\r\n\t\t\t{\r\n\t\t\t\t$el = $el.parent();\r\n\t\t\t\tif ( $el.is( $top ) || !$el.length )\r\n\t\t\t\t{\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tp = getPrevNode( $el[0] );\r\n\t\t\t}\r\n\t\t\tif ( p )\r\n\t\t\t{\r\n\t\t\t\treturn findLastTextNode( $(p), $top );\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tfunction getElement( e, $i )\r\n\t{\r\n\t\tif ( !e )\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ( typeof e === 'string' )\r\n\t\t{\r\n\t\t\te = $(e, $i);\r\n\t\t\treturn ( e.length )\r\n\t\t\t\t? e\r\n\t\t\t\t: false;\r\n\t\t}\r\n\t\treturn !e.jquery\r\n\t\t\t? false\r\n\t\t\t: e;\r\n\t}\r\n\tfunction getTrueInnerHeight( $el )\r\n\t{\r\n\t\tvar h = $el.innerHeight(),\r\n\t\t\ta = [ 'paddingTop', 'paddingBottom' ];\r\n\r\n\t\tfor ( var z = 0, l = a.length; z < l; z++ )\r\n\t\t{\r\n\t\t\tvar m = parseInt( $el.css( a[ z ] ), 10 );\r\n\t\t\tif ( isNaN( m ) )\r\n\t\t\t{\r\n\t\t\t\tm = 0;\r\n\t\t\t}\r\n\t\t\th -= m;\r\n\t\t}\r\n\t\treturn h;\r\n\t}\r\n\r\n\r\n\t//\toverride jQuery.html\r\n\tvar _orgHtml = $.fn.html;\r\n\t$.fn.html = function( str )\r\n\t{\r\n\t\tif ( str != undef && !$.isFunction( str ) && this.data( 'dotdotdot' ) )\r\n\t\t{\r\n\t\t\treturn this.trigger( 'update', [ str ] );\r\n\t\t}\r\n\t\treturn _orgHtml.apply( this, arguments );\r\n\t};\r\n\r\n\r\n\t//\toverride jQuery.text\r\n\tvar _orgText = $.fn.text;\r\n\t$.fn.text = function( str )\r\n\t{\r\n\t\tif ( str != undef && !$.isFunction( str ) && this.data( 'dotdotdot' ) )\r\n\t\t{\r\n\t\t\tstr = $( '<div />' ).text( str ).html();\r\n\t\t\treturn this.trigger( 'update', [ str ] );\r\n\t\t}\r\n\t\treturn _orgText.apply( this, arguments );\r\n\t};\r\n\r\n\r\n})( jQuery );\r\n\r\n/*\r\n\r\n## Automatic parsing for CSS classes\r\nContributed by [Ramil Valitov](https://github.com/rvalitov)\r\n\r\n### The idea\r\nYou can add one or several CSS classes to HTML elements to automatically invoke \"jQuery.dotdotdot functionality\" and some extra features. It allows to use jQuery.dotdotdot only by adding appropriate CSS classes without JS programming.\r\n\r\n### Available classes and their description\r\n* dot-ellipsis - automatically invoke jQuery.dotdotdot to this element. This class must be included if you plan to use other classes below.\r\n* dot-resize-update - automatically update if window resize event occurs. It's equivalent to option `watch:'window'`.\r\n* dot-timer-update - automatically update if window resize event occurs. It's equivalent to option `watch:true`.\r\n* dot-load-update - automatically update after the window has beem completely rendered. Can be useful if your content is generated dynamically using using JS and, hence, jQuery.dotdotdot can't correctly detect the height of the element before it's rendered completely.\r\n* dot-height-XXX - available height of content area in pixels, where XXX is a number, e.g. can be `dot-height-35` if you want to set maximum height for 35 pixels. It's equivalent to option `height:'XXX'`.\r\n\r\n### Usage examples\r\n*Adding jQuery.dotdotdot to element*\r\n    \r\n\t<div class=\"dot-ellipsis\">\r\n\t<p>Lorem Ipsum is simply dummy text.</p>\r\n\t</div>\r\n\t\r\n*Adding jQuery.dotdotdot to element with update on window resize*\r\n    \r\n\t<div class=\"dot-ellipsis dot-resize-update\">\r\n\t<p>Lorem Ipsum is simply dummy text.</p>\r\n\t</div>\r\n\t\r\n*Adding jQuery.dotdotdot to element with predefined height of 50px*\r\n    \r\n\t<div class=\"dot-ellipsis dot-height-50\">\r\n\t<p>Lorem Ipsum is simply dummy text.</p>\r\n\t</div>\r\n\t\r\n*/\r\n\r\njQuery(document).ready(function($) {\r\n\t//We only invoke jQuery.dotdotdot on elements that have dot-ellipsis class\r\n\t$(\".dot-ellipsis\").each(function(){\r\n\t\t//Checking if update on window resize required\r\n\t\tvar watch_window=$(this).hasClass(\"dot-resize-update\");\r\n\t\t\r\n\t\t//Checking if update on timer required\r\n\t\tvar watch_timer=$(this).hasClass(\"dot-timer-update\");\r\n\t\t\r\n\t\t//Checking if height set\r\n\t\tvar height=0;\t\t\r\n\t\tvar classList = $(this).attr('class').split(/\\s+/);\r\n\t\t$.each(classList, function(index, item) {\r\n\t\t\tvar matchResult = item.match(/^dot-height-(\\d+)$/);\r\n\t\t\tif(matchResult !== null)\r\n\t\t\t\theight = Number(matchResult[1]);\r\n\t\t});\r\n\t\t\r\n\t\t//Invoking jQuery.dotdotdot\r\n\t\tvar x = new Object();\r\n\t\tif (watch_timer)\r\n\t\t\tx.watch=true;\r\n\t\tif (watch_window)\r\n\t\t\tx.watch='window';\r\n\t\tif (height>0)\r\n\t\t\tx.height=height;\r\n\t\t$(this).dotdotdot(x);\r\n\t});\r\n\t\t\r\n});\r\n\r\n//Updating elements (if any) on window.load event\r\njQuery(window).on('load', function(){\r\n\tjQuery(\".dot-ellipsis.dot-load-update\").trigger(\"update.dot\");\r\n});\n\n//# sourceURL=webpack:///./js/vendor/jquery.dotdotdot.js?")},417:function(__unused_webpack_module,__unused_webpack_exports,__webpack_require__){eval("// require main build files\r\n__webpack_require__(595); \r\n__webpack_require__(234);\r\n\r\n//components\r\n__webpack_require__(536);\r\n\r\n//You should not need to add anything else to this file\r\n//BPAs go in /src/components/components.js\n\n//# sourceURL=webpack:///./build.js?")},429:function(){eval("/*!\r\n * modernizr v3.5.0\r\n * Build https://modernizr.com/download?-audio-flexbox-forcetouch-objectfit-pointerevents-svg-touchevents-setclasses-dontmin\r\n *\r\n * Copyright (c)\r\n *  Faruk Ates\r\n *  Paul Irish\r\n *  Alex Sexton\r\n *  Ryan Seddon\r\n *  Patrick Kettner\r\n *  Stu Cox\r\n *  Richard Herrera\r\n\r\n * MIT License\r\n */\r\n\r\n/*\r\n * Modernizr tests which native CSS3 and HTML5 features are available in the\r\n * current UA and makes the results available to you in two ways: as properties on\r\n * a global `Modernizr` object, and as classes on the `<html>` element. This\r\n * information allows you to progressively enhance your pages with a granular level\r\n * of control over the experience.\r\n*/\r\n\r\n;(function(window, document, undefined){\r\n  var classes = [];\r\n  \r\n\r\n  var tests = [];\r\n  \r\n\r\n  /**\r\n   *\r\n   * ModernizrProto is the constructor for Modernizr\r\n   *\r\n   * @class\r\n   * @access public\r\n   */\r\n\r\n  var ModernizrProto = {\r\n    // The current version, dummy\r\n    _version: '3.5.0',\r\n\r\n    // Any settings that don't work as separate modules\r\n    // can go in here as configuration.\r\n    _config: {\r\n      'classPrefix': '',\r\n      'enableClasses': true,\r\n      'enableJSClass': true,\r\n      'usePrefixes': true\r\n    },\r\n\r\n    // Queue of tests\r\n    _q: [],\r\n\r\n    // Stub these for people who are listening\r\n    on: function(test, cb) {\r\n      // I don't really think people should do this, but we can\r\n      // safe guard it a bit.\r\n      // -- NOTE:: this gets WAY overridden in src/addTest for actual async tests.\r\n      // This is in case people listen to synchronous tests. I would leave it out,\r\n      // but the code to *disallow* sync tests in the real version of this\r\n      // function is actually larger than this.\r\n      var self = this;\r\n      setTimeout(function() {\r\n        cb(self[test]);\r\n      }, 0);\r\n    },\r\n\r\n    addTest: function(name, fn, options) {\r\n      tests.push({name: name, fn: fn, options: options});\r\n    },\r\n\r\n    addAsyncTest: function(fn) {\r\n      tests.push({name: null, fn: fn});\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  // Fake some of Object.create so we can force non test results to be non \"own\" properties.\r\n  var Modernizr = function() {};\r\n  Modernizr.prototype = ModernizrProto;\r\n\r\n  // Leak modernizr globally when you `require` it rather than force it here.\r\n  // Overwrite name so constructor name is nicer :D\r\n  Modernizr = new Modernizr();\r\n\r\n  \r\n/*!\r\n{\r\n  \"name\": \"SVG\",\r\n  \"property\": \"svg\",\r\n  \"caniuse\": \"svg\",\r\n  \"tags\": [\"svg\"],\r\n  \"authors\": [\"Erik Dahlstrom\"],\r\n  \"polyfills\": [\r\n    \"svgweb\",\r\n    \"raphael\",\r\n    \"amplesdk\",\r\n    \"canvg\",\r\n    \"svg-boilerplate\",\r\n    \"sie\",\r\n    \"dojogfx\",\r\n    \"fabricjs\"\r\n  ]\r\n}\r\n!*/\r\n/* DOC\r\nDetects support for SVG in `<embed>` or `<object>` elements.\r\n*/\r\n\r\n  Modernizr.addTest('svg', !!document.createElementNS && !!document.createElementNS('http://www.w3.org/2000/svg', 'svg').createSVGRect);\r\n\r\n\r\n  /**\r\n   * is returns a boolean if the typeof an obj is exactly type.\r\n   *\r\n   * @access private\r\n   * @function is\r\n   * @param {*} obj - A thing we want to check the type of\r\n   * @param {string} type - A string to compare the typeof against\r\n   * @returns {boolean}\r\n   */\r\n\r\n  function is(obj, type) {\r\n    return typeof obj === type;\r\n  }\r\n  ;\r\n\r\n  /**\r\n   * Run through all tests and detect their support in the current UA.\r\n   *\r\n   * @access private\r\n   */\r\n\r\n  function testRunner() {\r\n    var featureNames;\r\n    var feature;\r\n    var aliasIdx;\r\n    var result;\r\n    var nameIdx;\r\n    var featureName;\r\n    var featureNameSplit;\r\n\r\n    for (var featureIdx in tests) {\r\n      if (tests.hasOwnProperty(featureIdx)) {\r\n        featureNames = [];\r\n        feature = tests[featureIdx];\r\n        // run the test, throw the return value into the Modernizr,\r\n        // then based on that boolean, define an appropriate className\r\n        // and push it into an array of classes we'll join later.\r\n        //\r\n        // If there is no name, it's an 'async' test that is run,\r\n        // but not directly added to the object. That should\r\n        // be done with a post-run addTest call.\r\n        if (feature.name) {\r\n          featureNames.push(feature.name.toLowerCase());\r\n\r\n          if (feature.options && feature.options.aliases && feature.options.aliases.length) {\r\n            // Add all the aliases into the names list\r\n            for (aliasIdx = 0; aliasIdx < feature.options.aliases.length; aliasIdx++) {\r\n              featureNames.push(feature.options.aliases[aliasIdx].toLowerCase());\r\n            }\r\n          }\r\n        }\r\n\r\n        // Run the test, or use the raw value if it's not a function\r\n        result = is(feature.fn, 'function') ? feature.fn() : feature.fn;\r\n\r\n\r\n        // Set each of the names on the Modernizr object\r\n        for (nameIdx = 0; nameIdx < featureNames.length; nameIdx++) {\r\n          featureName = featureNames[nameIdx];\r\n          // Support dot properties as sub tests. We don't do checking to make sure\r\n          // that the implied parent tests have been added. You must call them in\r\n          // order (either in the test, or make the parent test a dependency).\r\n          //\r\n          // Cap it to TWO to make the logic simple and because who needs that kind of subtesting\r\n          // hashtag famous last words\r\n          featureNameSplit = featureName.split('.');\r\n\r\n          if (featureNameSplit.length === 1) {\r\n            Modernizr[featureNameSplit[0]] = result;\r\n          } else {\r\n            // cast to a Boolean, if not one already\r\n            if (Modernizr[featureNameSplit[0]] && !(Modernizr[featureNameSplit[0]] instanceof Boolean)) {\r\n              Modernizr[featureNameSplit[0]] = new Boolean(Modernizr[featureNameSplit[0]]);\r\n            }\r\n\r\n            Modernizr[featureNameSplit[0]][featureNameSplit[1]] = result;\r\n          }\r\n\r\n          classes.push((result ? '' : 'no-') + featureNameSplit.join('-'));\r\n        }\r\n      }\r\n    }\r\n  }\r\n  ;\r\n\r\n  /**\r\n   * docElement is a convenience wrapper to grab the root element of the document\r\n   *\r\n   * @access private\r\n   * @returns {HTMLElement|SVGElement} The root element of the document\r\n   */\r\n\r\n  var docElement = document.documentElement;\r\n  \r\n\r\n  /**\r\n   * A convenience helper to check if the document we are running in is an SVG document\r\n   *\r\n   * @access private\r\n   * @returns {boolean}\r\n   */\r\n\r\n  var isSVG = docElement.nodeName.toLowerCase() === 'svg';\r\n  \r\n\r\n  /**\r\n   * setClasses takes an array of class names and adds them to the root element\r\n   *\r\n   * @access private\r\n   * @function setClasses\r\n   * @param {string[]} classes - Array of class names\r\n   */\r\n\r\n  // Pass in an and array of class names, e.g.:\r\n  //  ['no-webp', 'borderradius', ...]\r\n  function setClasses(classes) {\r\n    var className = docElement.className;\r\n    var classPrefix = Modernizr._config.classPrefix || '';\r\n\r\n    if (isSVG) {\r\n      className = className.baseVal;\r\n    }\r\n\r\n    // Change `no-js` to `js` (independently of the `enableClasses` option)\r\n    // Handle classPrefix on this too\r\n    if (Modernizr._config.enableJSClass) {\r\n      var reJS = new RegExp('(^|\\\\s)' + classPrefix + 'no-js(\\\\s|$)');\r\n      className = className.replace(reJS, '$1' + classPrefix + 'js$2');\r\n    }\r\n\r\n    if (Modernizr._config.enableClasses) {\r\n      // Add the new classes\r\n      className += ' ' + classPrefix + classes.join(' ' + classPrefix);\r\n      if (isSVG) {\r\n        docElement.className.baseVal = className;\r\n      } else {\r\n        docElement.className = className;\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  ;\r\n\r\n  /**\r\n   * createElement is a convenience wrapper around document.createElement. Since we\r\n   * use createElement all over the place, this allows for (slightly) smaller code\r\n   * as well as abstracting away issues with creating elements in contexts other than\r\n   * HTML documents (e.g. SVG documents).\r\n   *\r\n   * @access private\r\n   * @function createElement\r\n   * @returns {HTMLElement|SVGElement} An HTML or SVG element\r\n   */\r\n\r\n  function createElement() {\r\n    if (typeof document.createElement !== 'function') {\r\n      // This is the case in IE7, where the type of createElement is \"object\".\r\n      // For this reason, we cannot call apply() as Object is not a Function.\r\n      return document.createElement(arguments[0]);\r\n    } else if (isSVG) {\r\n      return document.createElementNS.call(document, 'http://www.w3.org/2000/svg', arguments[0]);\r\n    } else {\r\n      return document.createElement.apply(document, arguments);\r\n    }\r\n  }\r\n\r\n  ;\r\n/*!\r\n{\r\n  \"name\" : \"HTML5 Audio Element\",\r\n  \"property\": \"audio\",\r\n  \"tags\" : [\"html5\", \"audio\", \"media\"]\r\n}\r\n!*/\r\n/* DOC\r\nDetects the audio element\r\n*/\r\n\r\n  // This tests evaluates support of the audio element, as well as\r\n  // testing what types of content it supports.\r\n  //\r\n  // We're using the Boolean constructor here, so that we can extend the value\r\n  // e.g.  Modernizr.audio     // true\r\n  //       Modernizr.audio.ogg // 'probably'\r\n  //\r\n  // Codec values from : github.com/NielsLeenheer/html5test/blob/9106a8/index.html#L845\r\n  //                     thx to NielsLeenheer and zcorpan\r\n\r\n  // Note: in some older browsers, \"no\" was a return value instead of empty string.\r\n  //   It was live in FF3.5.0 and 3.5.1, but fixed in 3.5.2\r\n  //   It was also live in Safari 4.0.0 - 4.0.4, but fixed in 4.0.5\r\n  Modernizr.addTest('audio', function() {\r\n    var elem = createElement('audio');\r\n    var bool = false;\r\n\r\n    try {\r\n      bool = !!elem.canPlayType\r\n      if (bool) {\r\n        bool      = new Boolean(bool);\r\n        bool.ogg  = elem.canPlayType('audio/ogg; codecs=\"vorbis\"') .replace(/^no$/, '');\r\n        bool.mp3  = elem.canPlayType('audio/mpeg; codecs=\"mp3\"')   .replace(/^no$/, '');\r\n        bool.opus  = elem.canPlayType('audio/ogg; codecs=\"opus\"')  ||\r\n                     elem.canPlayType('audio/webm; codecs=\"opus\"') .replace(/^no$/, '');\r\n\r\n        // Mimetypes accepted:\r\n        //   developer.mozilla.org/En/Media_formats_supported_by_the_audio_and_video_elements\r\n        //   bit.ly/iphoneoscodecs\r\n        bool.wav  = elem.canPlayType('audio/wav; codecs=\"1\"')     .replace(/^no$/, '');\r\n        bool.m4a  = (elem.canPlayType('audio/x-m4a;')            ||\r\n                     elem.canPlayType('audio/aac;'))             .replace(/^no$/, '');\r\n      }\r\n    } catch (e) { }\r\n\r\n    return bool;\r\n  });\r\n\r\n\r\n  /**\r\n   * Modernizr.hasEvent() detects support for a given event\r\n   *\r\n   * @memberof Modernizr\r\n   * @name Modernizr.hasEvent\r\n   * @optionName Modernizr.hasEvent()\r\n   * @optionProp hasEvent\r\n   * @access public\r\n   * @function hasEvent\r\n   * @param  {string|*} eventName - the name of an event to test for (e.g. \"resize\")\r\n   * @param  {Element|string} [element=HTMLDivElement] - is the element|document|window|tagName to test on\r\n   * @returns {boolean}\r\n   * @example\r\n   *  `Modernizr.hasEvent` lets you determine if the browser supports a supplied event.\r\n   *  By default, it does this detection on a div element\r\n   *\r\n   * ```js\r\n   *  hasEvent('blur') // true;\r\n   * ```\r\n   *\r\n   * However, you are able to give an object as a second argument to hasEvent to\r\n   * detect an event on something other than a div.\r\n   *\r\n   * ```js\r\n   *  hasEvent('devicelight', window) // true;\r\n   * ```\r\n   *\r\n   */\r\n\r\n  var hasEvent = (function() {\r\n\r\n    // Detect whether event support can be detected via `in`. Test on a DOM element\r\n    // using the \"blur\" event b/c it should always exist. bit.ly/event-detection\r\n    var needsFallback = !('onblur' in document.documentElement);\r\n\r\n    function inner(eventName, element) {\r\n\r\n      var isSupported;\r\n      if (!eventName) { return false; }\r\n      if (!element || typeof element === 'string') {\r\n        element = createElement(element || 'div');\r\n      }\r\n\r\n      // Testing via the `in` operator is sufficient for modern browsers and IE.\r\n      // When using `setAttribute`, IE skips \"unload\", WebKit skips \"unload\" and\r\n      // \"resize\", whereas `in` \"catches\" those.\r\n      eventName = 'on' + eventName;\r\n      isSupported = eventName in element;\r\n\r\n      // Fallback technique for old Firefox - bit.ly/event-detection\r\n      if (!isSupported && needsFallback) {\r\n        if (!element.setAttribute) {\r\n          // Switch to generic element if it lacks `setAttribute`.\r\n          // It could be the `document`, `window`, or something else.\r\n          element = createElement('div');\r\n        }\r\n\r\n        element.setAttribute(eventName, '');\r\n        isSupported = typeof element[eventName] === 'function';\r\n\r\n        if (element[eventName] !== undefined) {\r\n          // If property was created, \"remove it\" by setting value to `undefined`.\r\n          element[eventName] = undefined;\r\n        }\r\n        element.removeAttribute(eventName);\r\n      }\r\n\r\n      return isSupported;\r\n    }\r\n    return inner;\r\n  })();\r\n\r\n\r\n  ModernizrProto.hasEvent = hasEvent;\r\n  \r\n\r\n  /**\r\n   * List of property values to set for css tests. See ticket #21\r\n   * http://git.io/vUGl4\r\n   *\r\n   * @memberof Modernizr\r\n   * @name Modernizr._prefixes\r\n   * @optionName Modernizr._prefixes\r\n   * @optionProp prefixes\r\n   * @access public\r\n   * @example\r\n   *\r\n   * Modernizr._prefixes is the internal list of prefixes that we test against\r\n   * inside of things like [prefixed](#modernizr-prefixed) and [prefixedCSS](#-code-modernizr-prefixedcss). It is simply\r\n   * an array of kebab-case vendor prefixes you can use within your code.\r\n   *\r\n   * Some common use cases include\r\n   *\r\n   * Generating all possible prefixed version of a CSS property\r\n   * ```js\r\n   * var rule = Modernizr._prefixes.join('transform: rotate(20deg); ');\r\n   *\r\n   * rule === 'transform: rotate(20deg); webkit-transform: rotate(20deg); moz-transform: rotate(20deg); o-transform: rotate(20deg); ms-transform: rotate(20deg);'\r\n   * ```\r\n   *\r\n   * Generating all possible prefixed version of a CSS value\r\n   * ```js\r\n   * rule = 'display:' +  Modernizr._prefixes.join('flex; display:') + 'flex';\r\n   *\r\n   * rule === 'display:flex; display:-webkit-flex; display:-moz-flex; display:-o-flex; display:-ms-flex; display:flex'\r\n   * ```\r\n   */\r\n\r\n  // we use ['',''] rather than an empty array in order to allow a pattern of .`join()`ing prefixes to test\r\n  // values in feature detects to continue to work\r\n  var prefixes = (ModernizrProto._config.usePrefixes ? ' -webkit- -moz- -o- -ms- '.split(' ') : ['','']);\r\n\r\n  // expose these for the plugin API. Look in the source for how to join() them against your input\r\n  ModernizrProto._prefixes = prefixes;\r\n\r\n  \r\n\r\n  /**\r\n   * cssToDOM takes a kebab-case string and converts it to camelCase\r\n   * e.g. box-sizing -> boxSizing\r\n   *\r\n   * @access private\r\n   * @function cssToDOM\r\n   * @param {string} name - String name of kebab-case prop we want to convert\r\n   * @returns {string} The camelCase version of the supplied name\r\n   */\r\n\r\n  function cssToDOM(name) {\r\n    return name.replace(/([a-z])-([a-z])/g, function(str, m1, m2) {\r\n      return m1 + m2.toUpperCase();\r\n    }).replace(/^-/, '');\r\n  }\r\n  ;\r\n\r\n  /**\r\n   * If the browsers follow the spec, then they would expose vendor-specific styles as:\r\n   *   elem.style.WebkitBorderRadius\r\n   * instead of something like the following (which is technically incorrect):\r\n   *   elem.style.webkitBorderRadius\r\n\r\n   * WebKit ghosts their properties in lowercase but Opera & Moz do not.\r\n   * Microsoft uses a lowercase `ms` instead of the correct `Ms` in IE8+\r\n   *   erik.eae.net/archives/2008/03/10/21.48.10/\r\n\r\n   * More here: github.com/Modernizr/Modernizr/issues/issue/21\r\n   *\r\n   * @access private\r\n   * @returns {string} The string representing the vendor-specific style properties\r\n   */\r\n\r\n  var omPrefixes = 'Moz O ms Webkit';\r\n  \r\n\r\n  /**\r\n   * List of JavaScript DOM values used for tests\r\n   *\r\n   * @memberof Modernizr\r\n   * @name Modernizr._domPrefixes\r\n   * @optionName Modernizr._domPrefixes\r\n   * @optionProp domPrefixes\r\n   * @access public\r\n   * @example\r\n   *\r\n   * Modernizr._domPrefixes is exactly the same as [_prefixes](#modernizr-_prefixes), but rather\r\n   * than kebab-case properties, all properties are their Capitalized variant\r\n   *\r\n   * ```js\r\n   * Modernizr._domPrefixes === [ \"Moz\", \"O\", \"ms\", \"Webkit\" ];\r\n   * ```\r\n   */\r\n\r\n  var domPrefixes = (ModernizrProto._config.usePrefixes ? omPrefixes.toLowerCase().split(' ') : []);\r\n  ModernizrProto._domPrefixes = domPrefixes;\r\n  \r\n/*!\r\n{\r\n  \"name\": \"DOM Pointer Events API\",\r\n  \"property\": \"pointerevents\",\r\n  \"tags\": [\"input\"],\r\n  \"authors\": [\"Stu Cox\"],\r\n  \"notes\": [\r\n    {\r\n      \"name\": \"W3C spec\",\r\n      \"href\": \"https://www.w3.org/TR/pointerevents/\"\r\n    }\r\n  ],\r\n  \"warnings\": [\"This property name now refers to W3C DOM PointerEvents: https://github.com/Modernizr/Modernizr/issues/548#issuecomment-12812099\"],\r\n  \"polyfills\": [\"handjs\",\"pep\"]\r\n}\r\n!*/\r\n/* DOC\r\nDetects support for the DOM Pointer Events API, which provides a unified event interface for pointing input devices, as implemented in IE10+.\r\n*/\r\n\r\n  // **Test name hijacked!**\r\n  // Now refers to W3C DOM PointerEvents spec rather than the CSS pointer-events property.\r\n  Modernizr.addTest('pointerevents', function() {\r\n    // Cannot use `.prefixed()` for events, so test each prefix\r\n    var bool = false,\r\n      i = domPrefixes.length;\r\n\r\n    // Don't forget un-prefixed...\r\n    bool = Modernizr.hasEvent('pointerdown');\r\n\r\n    while (i-- && !bool) {\r\n      if (hasEvent(domPrefixes[i] + 'pointerdown')) {\r\n        bool = true;\r\n      }\r\n    }\r\n    return bool;\r\n  });\r\n\r\n\r\n  var cssomPrefixes = (ModernizrProto._config.usePrefixes ? omPrefixes.split(' ') : []);\r\n  ModernizrProto._cssomPrefixes = cssomPrefixes;\r\n  \r\n\r\n  /**\r\n   * atRule returns a given CSS property at-rule (eg @keyframes), possibly in\r\n   * some prefixed form, or false, in the case of an unsupported rule\r\n   *\r\n   * @memberof Modernizr\r\n   * @name Modernizr.atRule\r\n   * @optionName Modernizr.atRule()\r\n   * @optionProp atRule\r\n   * @access public\r\n   * @function atRule\r\n   * @param {string} prop - String name of the @-rule to test for\r\n   * @returns {string|boolean} The string representing the (possibly prefixed)\r\n   * valid version of the @-rule, or `false` when it is unsupported.\r\n   * @example\r\n   * ```js\r\n   *  var keyframes = Modernizr.atRule('@keyframes');\r\n   *\r\n   *  if (keyframes) {\r\n   *    // keyframes are supported\r\n   *    // could be `@-webkit-keyframes` or `@keyframes`\r\n   *  } else {\r\n   *    // keyframes === `false`\r\n   *  }\r\n   * ```\r\n   *\r\n   */\r\n\r\n  var atRule = function(prop) {\r\n    var length = prefixes.length;\r\n    var cssrule = window.CSSRule;\r\n    var rule;\r\n\r\n    if (typeof cssrule === 'undefined') {\r\n      return undefined;\r\n    }\r\n\r\n    if (!prop) {\r\n      return false;\r\n    }\r\n\r\n    // remove literal @ from beginning of provided property\r\n    prop = prop.replace(/^@/, '');\r\n\r\n    // CSSRules use underscores instead of dashes\r\n    rule = prop.replace(/-/g, '_').toUpperCase() + '_RULE';\r\n\r\n    if (rule in cssrule) {\r\n      return '@' + prop;\r\n    }\r\n\r\n    for (var i = 0; i < length; i++) {\r\n      // prefixes gives us something like -o-, and we want O_\r\n      var prefix = prefixes[i];\r\n      var thisRule = prefix.toUpperCase() + '_' + rule;\r\n\r\n      if (thisRule in cssrule) {\r\n        return '@-' + prefix.toLowerCase() + '-' + prop;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  ModernizrProto.atRule = atRule;\r\n\r\n  \r\n\r\n  /**\r\n   * getBody returns the body of a document, or an element that can stand in for\r\n   * the body if a real body does not exist\r\n   *\r\n   * @access private\r\n   * @function getBody\r\n   * @returns {HTMLElement|SVGElement} Returns the real body of a document, or an\r\n   * artificially created element that stands in for the body\r\n   */\r\n\r\n  function getBody() {\r\n    // After page load injecting a fake body doesn't work so check if body exists\r\n    var body = document.body;\r\n\r\n    if (!body) {\r\n      // Can't use the real body create a fake one.\r\n      body = createElement(isSVG ? 'svg' : 'body');\r\n      body.fake = true;\r\n    }\r\n\r\n    return body;\r\n  }\r\n\r\n  ;\r\n\r\n  /**\r\n   * injectElementWithStyles injects an element with style element and some CSS rules\r\n   *\r\n   * @access private\r\n   * @function injectElementWithStyles\r\n   * @param {string} rule - String representing a css rule\r\n   * @param {function} callback - A function that is used to test the injected element\r\n   * @param {number} [nodes] - An integer representing the number of additional nodes you want injected\r\n   * @param {string[]} [testnames] - An array of strings that are used as ids for the additional nodes\r\n   * @returns {boolean}\r\n   */\r\n\r\n  function injectElementWithStyles(rule, callback, nodes, testnames) {\r\n    var mod = 'modernizr';\r\n    var style;\r\n    var ret;\r\n    var node;\r\n    var docOverflow;\r\n    var div = createElement('div');\r\n    var body = getBody();\r\n\r\n    if (parseInt(nodes, 10)) {\r\n      // In order not to give false positives we create a node for each test\r\n      // This also allows the method to scale for unspecified uses\r\n      while (nodes--) {\r\n        node = createElement('div');\r\n        node.id = testnames ? testnames[nodes] : mod + (nodes + 1);\r\n        div.appendChild(node);\r\n      }\r\n    }\r\n\r\n    style = createElement('style');\r\n    style.type = 'text/css';\r\n    style.id = 's' + mod;\r\n\r\n    // IE6 will false positive on some tests due to the style element inside the test div somehow interfering offsetHeight, so insert it into body or fakebody.\r\n    // Opera will act all quirky when injecting elements in documentElement when page is served as xml, needs fakebody too. #270\r\n    (!body.fake ? div : body).appendChild(style);\r\n    body.appendChild(div);\r\n\r\n    if (style.styleSheet) {\r\n      style.styleSheet.cssText = rule;\r\n    } else {\r\n      style.appendChild(document.createTextNode(rule));\r\n    }\r\n    div.id = mod;\r\n\r\n    if (body.fake) {\r\n      //avoid crashing IE8, if background image is used\r\n      body.style.background = '';\r\n      //Safari 5.13/5.1.4 OSX stops loading if ::-webkit-scrollbar is used and scrollbars are visible\r\n      body.style.overflow = 'hidden';\r\n      docOverflow = docElement.style.overflow;\r\n      docElement.style.overflow = 'hidden';\r\n      docElement.appendChild(body);\r\n    }\r\n\r\n    ret = callback(div, rule);\r\n    // If this is done after page load we don't want to remove the body so check if body exists\r\n    if (body.fake) {\r\n      body.parentNode.removeChild(body);\r\n      docElement.style.overflow = docOverflow;\r\n      // Trigger layout so kinetic scrolling isn't disabled in iOS6+\r\n      // eslint-disable-next-line\r\n      docElement.offsetHeight;\r\n    } else {\r\n      div.parentNode.removeChild(div);\r\n    }\r\n\r\n    return !!ret;\r\n\r\n  }\r\n\r\n  ;\r\n\r\n  /**\r\n   * testStyles injects an element with style element and some CSS rules\r\n   *\r\n   * @memberof Modernizr\r\n   * @name Modernizr.testStyles\r\n   * @optionName Modernizr.testStyles()\r\n   * @optionProp testStyles\r\n   * @access public\r\n   * @function testStyles\r\n   * @param {string} rule - String representing a css rule\r\n   * @param {function} callback - A function that is used to test the injected element\r\n   * @param {number} [nodes] - An integer representing the number of additional nodes you want injected\r\n   * @param {string[]} [testnames] - An array of strings that are used as ids for the additional nodes\r\n   * @returns {boolean}\r\n   * @example\r\n   *\r\n   * `Modernizr.testStyles` takes a CSS rule and injects it onto the current page\r\n   * along with (possibly multiple) DOM elements. This lets you check for features\r\n   * that can not be detected by simply checking the [IDL](https://developer.mozilla.org/en-US/docs/Mozilla/Developer_guide/Interface_development_guide/IDL_interface_rules).\r\n   *\r\n   * ```js\r\n   * Modernizr.testStyles('#modernizr { width: 9px; color: papayawhip; }', function(elem, rule) {\r\n   *   // elem is the first DOM node in the page (by default #modernizr)\r\n   *   // rule is the first argument you supplied - the CSS rule in string form\r\n   *\r\n   *   addTest('widthworks', elem.style.width === '9px')\r\n   * });\r\n   * ```\r\n   *\r\n   * If your test requires multiple nodes, you can include a third argument\r\n   * indicating how many additional div elements to include on the page. The\r\n   * additional nodes are injected as children of the `elem` that is returned as\r\n   * the first argument to the callback.\r\n   *\r\n   * ```js\r\n   * Modernizr.testStyles('#modernizr {width: 1px}; #modernizr2 {width: 2px}', function(elem) {\r\n   *   document.getElementById('modernizr').style.width === '1px'; // true\r\n   *   document.getElementById('modernizr2').style.width === '2px'; // true\r\n   *   elem.firstChild === document.getElementById('modernizr2'); // true\r\n   * }, 1);\r\n   * ```\r\n   *\r\n   * By default, all of the additional elements have an ID of `modernizr[n]`, where\r\n   * `n` is its index (e.g. the first additional, second overall is `#modernizr2`,\r\n   * the second additional is `#modernizr3`, etc.).\r\n   * If you want to have more meaningful IDs for your function, you can provide\r\n   * them as the fourth argument, as an array of strings\r\n   *\r\n   * ```js\r\n   * Modernizr.testStyles('#foo {width: 10px}; #bar {height: 20px}', function(elem) {\r\n   *   elem.firstChild === document.getElementById('foo'); // true\r\n   *   elem.lastChild === document.getElementById('bar'); // true\r\n   * }, 2, ['foo', 'bar']);\r\n   * ```\r\n   *\r\n   */\r\n\r\n  var testStyles = ModernizrProto.testStyles = injectElementWithStyles;\r\n  \r\n/*!\r\n{\r\n  \"name\": \"Touch Events\",\r\n  \"property\": \"touchevents\",\r\n  \"caniuse\" : \"touch\",\r\n  \"tags\": [\"media\", \"attribute\"],\r\n  \"notes\": [{\r\n    \"name\": \"Touch Events spec\",\r\n    \"href\": \"https://www.w3.org/TR/2013/WD-touch-events-20130124/\"\r\n  }],\r\n  \"warnings\": [\r\n    \"Indicates if the browser supports the Touch Events spec, and does not necessarily reflect a touchscreen device\"\r\n  ],\r\n  \"knownBugs\": [\r\n    \"False-positive on some configurations of Nokia N900\",\r\n    \"False-positive on some BlackBerry 6.0 builds â€“ https://github.com/Modernizr/Modernizr/issues/372#issuecomment-3112695\"\r\n  ]\r\n}\r\n!*/\r\n/* DOC\r\nIndicates if the browser supports the W3C Touch Events API.\r\n\r\nThis *does not* necessarily reflect a touchscreen device:\r\n\r\n* Older touchscreen devices only emulate mouse events\r\n* Modern IE touch devices implement the Pointer Events API instead: use `Modernizr.pointerevents` to detect support for that\r\n* Some browsers & OS setups may enable touch APIs when no touchscreen is connected\r\n* Future browsers may implement other event models for touch interactions\r\n\r\nSee this article: [You Can't Detect A Touchscreen](http://www.stucox.com/blog/you-cant-detect-a-touchscreen/).\r\n\r\nIt's recommended to bind both mouse and touch/pointer events simultaneously â€“ see [this HTML5 Rocks tutorial](http://www.html5rocks.com/en/mobile/touchandmouse/).\r\n\r\nThis test will also return `true` for Firefox 4 Multitouch support.\r\n*/\r\n\r\n  // Chrome (desktop) used to lie about its support on this, but that has since been rectified: http://crbug.com/36415\r\n  Modernizr.addTest('touchevents', function() {\r\n    var bool;\r\n    if (('ontouchstart' in window) || window.DocumentTouch && document instanceof DocumentTouch) {\r\n      bool = true;\r\n    } else {\r\n      // include the 'heartz' as a way to have a non matching MQ to help terminate the join\r\n      // https://git.io/vznFH\r\n      var query = ['@media (', prefixes.join('touch-enabled),('), 'heartz', ')', '{#modernizr{top:9px;position:absolute}}'].join('');\r\n      testStyles(query, function(node) {\r\n        bool = node.offsetTop === 9;\r\n      });\r\n    }\r\n    return bool;\r\n  });\r\n\r\n\r\n\r\n  /**\r\n   * contains checks to see if a string contains another string\r\n   *\r\n   * @access private\r\n   * @function contains\r\n   * @param {string} str - The string we want to check for substrings\r\n   * @param {string} substr - The substring we want to search the first string for\r\n   * @returns {boolean}\r\n   */\r\n\r\n  function contains(str, substr) {\r\n    return !!~('' + str).indexOf(substr);\r\n  }\r\n\r\n  ;\r\n\r\n  /**\r\n   * fnBind is a super small [bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind) polyfill.\r\n   *\r\n   * @access private\r\n   * @function fnBind\r\n   * @param {function} fn - a function you want to change `this` reference to\r\n   * @param {object} that - the `this` you want to call the function with\r\n   * @returns {function} The wrapped version of the supplied function\r\n   */\r\n\r\n  function fnBind(fn, that) {\r\n    return function() {\r\n      return fn.apply(that, arguments);\r\n    };\r\n  }\r\n\r\n  ;\r\n\r\n  /**\r\n   * testDOMProps is a generic DOM property test; if a browser supports\r\n   *   a certain property, it won't return undefined for it.\r\n   *\r\n   * @access private\r\n   * @function testDOMProps\r\n   * @param {array.<string>} props - An array of properties to test for\r\n   * @param {object} obj - An object or Element you want to use to test the parameters again\r\n   * @param {boolean|object} elem - An Element to bind the property lookup again. Use `false` to prevent the check\r\n   * @returns {false|*} returns false if the prop is unsupported, otherwise the value that is supported\r\n   */\r\n  function testDOMProps(props, obj, elem) {\r\n    var item;\r\n\r\n    for (var i in props) {\r\n      if (props[i] in obj) {\r\n\r\n        // return the property name as a string\r\n        if (elem === false) {\r\n          return props[i];\r\n        }\r\n\r\n        item = obj[props[i]];\r\n\r\n        // let's bind a function\r\n        if (is(item, 'function')) {\r\n          // bind to obj unless overriden\r\n          return fnBind(item, elem || obj);\r\n        }\r\n\r\n        // return the unbound function or obj or value\r\n        return item;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  ;\r\n\r\n\r\n  /**\r\n   * wrapper around getComputedStyle, to fix issues with Firefox returning null when\r\n   * called inside of a hidden iframe\r\n   *\r\n   * @access private\r\n   * @function computedStyle\r\n   * @param {HTMLElement|SVGElement} - The element we want to find the computed styles of\r\n   * @param {string|null} [pseudoSelector]- An optional pseudo element selector (e.g. :before), of null if none\r\n   * @returns {CSSStyleDeclaration}\r\n   */\r\n\r\n  function computedStyle(elem, pseudo, prop) {\r\n    var result;\r\n\r\n    if ('getComputedStyle' in window) {\r\n      result = getComputedStyle.call(window, elem, pseudo);\r\n      var console = window.console;\r\n\r\n      if (result !== null) {\r\n        if (prop) {\r\n          result = result.getPropertyValue(prop);\r\n        }\r\n      } else {\r\n        if (console) {\r\n          var method = console.error ? 'error' : 'log';\r\n          console[method].call(console, 'getComputedStyle returning null, its possible modernizr test results are inaccurate');\r\n        }\r\n      }\r\n    } else {\r\n      result = !pseudo && elem.currentStyle && elem.currentStyle[prop];\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  ;\r\n\r\n  /**\r\n   * domToCSS takes a camelCase string and converts it to kebab-case\r\n   * e.g. boxSizing -> box-sizing\r\n   *\r\n   * @access private\r\n   * @function domToCSS\r\n   * @param {string} name - String name of camelCase prop we want to convert\r\n   * @returns {string} The kebab-case version of the supplied name\r\n   */\r\n\r\n  function domToCSS(name) {\r\n    return name.replace(/([A-Z])/g, function(str, m1) {\r\n      return '-' + m1.toLowerCase();\r\n    }).replace(/^ms-/, '-ms-');\r\n  }\r\n  ;\r\n\r\n  /**\r\n   * nativeTestProps allows for us to use native feature detection functionality if available.\r\n   * some prefixed form, or false, in the case of an unsupported rule\r\n   *\r\n   * @access private\r\n   * @function nativeTestProps\r\n   * @param {array} props - An array of property names\r\n   * @param {string} value - A string representing the value we want to check via @supports\r\n   * @returns {boolean|undefined} A boolean when @supports exists, undefined otherwise\r\n   */\r\n\r\n  // Accepts a list of property names and a single value\r\n  // Returns `undefined` if native detection not available\r\n  function nativeTestProps(props, value) {\r\n    var i = props.length;\r\n    // Start with the JS API: http://www.w3.org/TR/css3-conditional/#the-css-interface\r\n    if ('CSS' in window && 'supports' in window.CSS) {\r\n      // Try every prefixed variant of the property\r\n      while (i--) {\r\n        if (window.CSS.supports(domToCSS(props[i]), value)) {\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    }\r\n    // Otherwise fall back to at-rule (for Opera 12.x)\r\n    else if ('CSSSupportsRule' in window) {\r\n      // Build a condition string for every prefixed variant\r\n      var conditionText = [];\r\n      while (i--) {\r\n        conditionText.push('(' + domToCSS(props[i]) + ':' + value + ')');\r\n      }\r\n      conditionText = conditionText.join(' or ');\r\n      return injectElementWithStyles('@supports (' + conditionText + ') { #modernizr { position: absolute; } }', function(node) {\r\n        return computedStyle(node, null, 'position') == 'absolute';\r\n      });\r\n    }\r\n    return undefined;\r\n  }\r\n  ;\r\n\r\n  /**\r\n   * Create our \"modernizr\" element that we do most feature tests on.\r\n   *\r\n   * @access private\r\n   */\r\n\r\n  var modElem = {\r\n    elem: createElement('modernizr')\r\n  };\r\n\r\n  // Clean up this element\r\n  Modernizr._q.push(function() {\r\n    delete modElem.elem;\r\n  });\r\n\r\n  \r\n\r\n  var mStyle = {\r\n    style: modElem.elem.style\r\n  };\r\n\r\n  // kill ref for gc, must happen before mod.elem is removed, so we unshift on to\r\n  // the front of the queue.\r\n  Modernizr._q.unshift(function() {\r\n    delete mStyle.style;\r\n  });\r\n\r\n  \r\n\r\n  // testProps is a generic CSS / DOM property test.\r\n\r\n  // In testing support for a given CSS property, it's legit to test:\r\n  //    `elem.style[styleName] !== undefined`\r\n  // If the property is supported it will return an empty string,\r\n  // if unsupported it will return undefined.\r\n\r\n  // We'll take advantage of this quick test and skip setting a style\r\n  // on our modernizr element, but instead just testing undefined vs\r\n  // empty string.\r\n\r\n  // Property names can be provided in either camelCase or kebab-case.\r\n\r\n  function testProps(props, prefixed, value, skipValueTest) {\r\n    skipValueTest = is(skipValueTest, 'undefined') ? false : skipValueTest;\r\n\r\n    // Try native detect first\r\n    if (!is(value, 'undefined')) {\r\n      var result = nativeTestProps(props, value);\r\n      if (!is(result, 'undefined')) {\r\n        return result;\r\n      }\r\n    }\r\n\r\n    // Otherwise do it properly\r\n    var afterInit, i, propsLength, prop, before;\r\n\r\n    // If we don't have a style element, that means we're running async or after\r\n    // the core tests, so we'll need to create our own elements to use\r\n\r\n    // inside of an SVG element, in certain browsers, the `style` element is only\r\n    // defined for valid tags. Therefore, if `modernizr` does not have one, we\r\n    // fall back to a less used element and hope for the best.\r\n    // for strict XHTML browsers the hardly used samp element is used\r\n    var elems = ['modernizr', 'tspan', 'samp'];\r\n    while (!mStyle.style && elems.length) {\r\n      afterInit = true;\r\n      mStyle.modElem = createElement(elems.shift());\r\n      mStyle.style = mStyle.modElem.style;\r\n    }\r\n\r\n    // Delete the objects if we created them.\r\n    function cleanElems() {\r\n      if (afterInit) {\r\n        delete mStyle.style;\r\n        delete mStyle.modElem;\r\n      }\r\n    }\r\n\r\n    propsLength = props.length;\r\n    for (i = 0; i < propsLength; i++) {\r\n      prop = props[i];\r\n      before = mStyle.style[prop];\r\n\r\n      if (contains(prop, '-')) {\r\n        prop = cssToDOM(prop);\r\n      }\r\n\r\n      if (mStyle.style[prop] !== undefined) {\r\n\r\n        // If value to test has been passed in, do a set-and-check test.\r\n        // 0 (integer) is a valid property value, so check that `value` isn't\r\n        // undefined, rather than just checking it's truthy.\r\n        if (!skipValueTest && !is(value, 'undefined')) {\r\n\r\n          // Needs a try catch block because of old IE. This is slow, but will\r\n          // be avoided in most cases because `skipValueTest` will be used.\r\n          try {\r\n            mStyle.style[prop] = value;\r\n          } catch (e) {}\r\n\r\n          // If the property value has changed, we assume the value used is\r\n          // supported. If `value` is empty string, it'll fail here (because\r\n          // it hasn't changed), which matches how browsers have implemented\r\n          // CSS.supports()\r\n          if (mStyle.style[prop] != before) {\r\n            cleanElems();\r\n            return prefixed == 'pfx' ? prop : true;\r\n          }\r\n        }\r\n        // Otherwise just return true, or the property name if this is a\r\n        // `prefixed()` call\r\n        else {\r\n          cleanElems();\r\n          return prefixed == 'pfx' ? prop : true;\r\n        }\r\n      }\r\n    }\r\n    cleanElems();\r\n    return false;\r\n  }\r\n\r\n  ;\r\n\r\n  /**\r\n   * testPropsAll tests a list of DOM properties we want to check against.\r\n   * We specify literally ALL possible (known and/or likely) properties on\r\n   * the element including the non-vendor prefixed one, for forward-\r\n   * compatibility.\r\n   *\r\n   * @access private\r\n   * @function testPropsAll\r\n   * @param {string} prop - A string of the property to test for\r\n   * @param {string|object} [prefixed] - An object to check the prefixed properties on. Use a string to skip\r\n   * @param {HTMLElement|SVGElement} [elem] - An element used to test the property and value against\r\n   * @param {string} [value] - A string of a css value\r\n   * @param {boolean} [skipValueTest] - An boolean representing if you want to test if value sticks when set\r\n   * @returns {false|string} returns the string version of the property, or false if it is unsupported\r\n   */\r\n  function testPropsAll(prop, prefixed, elem, value, skipValueTest) {\r\n\r\n    var ucProp = prop.charAt(0).toUpperCase() + prop.slice(1),\r\n      props = (prop + ' ' + cssomPrefixes.join(ucProp + ' ') + ucProp).split(' ');\r\n\r\n    // did they call .prefixed('boxSizing') or are we just testing a prop?\r\n    if (is(prefixed, 'string') || is(prefixed, 'undefined')) {\r\n      return testProps(props, prefixed, value, skipValueTest);\r\n\r\n      // otherwise, they called .prefixed('requestAnimationFrame', window[, elem])\r\n    } else {\r\n      props = (prop + ' ' + (domPrefixes).join(ucProp + ' ') + ucProp).split(' ');\r\n      return testDOMProps(props, prefixed, elem);\r\n    }\r\n  }\r\n\r\n  // Modernizr.testAllProps() investigates whether a given style property,\r\n  // or any of its vendor-prefixed variants, is recognized\r\n  //\r\n  // Note that the property names must be provided in the camelCase variant.\r\n  // Modernizr.testAllProps('boxSizing')\r\n  ModernizrProto.testAllProps = testPropsAll;\r\n\r\n  \r\n\r\n  /**\r\n   * prefixed returns the prefixed or nonprefixed property name variant of your input\r\n   *\r\n   * @memberof Modernizr\r\n   * @name Modernizr.prefixed\r\n   * @optionName Modernizr.prefixed()\r\n   * @optionProp prefixed\r\n   * @access public\r\n   * @function prefixed\r\n   * @param {string} prop - String name of the property to test for\r\n   * @param {object} [obj] - An object to test for the prefixed properties on\r\n   * @param {HTMLElement} [elem] - An element used to test specific properties against\r\n   * @returns {string|false} The string representing the (possibly prefixed) valid\r\n   * version of the property, or `false` when it is unsupported.\r\n   * @example\r\n   *\r\n   * Modernizr.prefixed takes a string css value in the DOM style camelCase (as\r\n   * opposed to the css style kebab-case) form and returns the (possibly prefixed)\r\n   * version of that property that the browser actually supports.\r\n   *\r\n   * For example, in older Firefox...\r\n   * ```js\r\n   * prefixed('boxSizing')\r\n   * ```\r\n   * returns 'MozBoxSizing'\r\n   *\r\n   * In newer Firefox, as well as any other browser that support the unprefixed\r\n   * version would simply return `boxSizing`. Any browser that does not support\r\n   * the property at all, it will return `false`.\r\n   *\r\n   * By default, prefixed is checked against a DOM element. If you want to check\r\n   * for a property on another object, just pass it as a second argument\r\n   *\r\n   * ```js\r\n   * var rAF = prefixed('requestAnimationFrame', window);\r\n   *\r\n   * raf(function() {\r\n   *  renderFunction();\r\n   * })\r\n   * ```\r\n   *\r\n   * Note that this will return _the actual function_ - not the name of the function.\r\n   * If you need the actual name of the property, pass in `false` as a third argument\r\n   *\r\n   * ```js\r\n   * var rAFProp = prefixed('requestAnimationFrame', window, false);\r\n   *\r\n   * rafProp === 'WebkitRequestAnimationFrame' // in older webkit\r\n   * ```\r\n   *\r\n   * One common use case for prefixed is if you're trying to determine which transition\r\n   * end event to bind to, you might do something like...\r\n   * ```js\r\n   * var transEndEventNames = {\r\n   *     'WebkitTransition' : 'webkitTransitionEnd', * Saf 6, Android Browser\r\n   *     'MozTransition'    : 'transitionend',       * only for FF < 15\r\n   *     'transition'       : 'transitionend'        * IE10, Opera, Chrome, FF 15+, Saf 7+\r\n   * };\r\n   *\r\n   * var transEndEventName = transEndEventNames[ Modernizr.prefixed('transition') ];\r\n   * ```\r\n   *\r\n   * If you want a similar lookup, but in kebab-case, you can use [prefixedCSS](#modernizr-prefixedcss).\r\n   */\r\n\r\n  var prefixed = ModernizrProto.prefixed = function(prop, obj, elem) {\r\n    if (prop.indexOf('@') === 0) {\r\n      return atRule(prop);\r\n    }\r\n\r\n    if (prop.indexOf('-') != -1) {\r\n      // Convert kebab-case to camelCase\r\n      prop = cssToDOM(prop);\r\n    }\r\n    if (!obj) {\r\n      return testPropsAll(prop, 'pfx');\r\n    } else {\r\n      // Testing DOM property e.g. Modernizr.prefixed('requestAnimationFrame', window) // 'mozRequestAnimationFrame'\r\n      return testPropsAll(prop, obj, elem);\r\n    }\r\n  };\r\n\r\n  \r\n/*!\r\n{\r\n  \"name\": \"Force Touch Events\",\r\n  \"property\": \"forcetouch\",\r\n  \"authors\": [\"Kraig Walker\"],\r\n  \"notes\": [{\r\n    \"name\": \"Responding to Force Touch Events from JavaScript\",\r\n    \"href\": \"https://developer.apple.com/library/prerelease/mac/documentation/AppleApplications/Conceptual/SafariJSProgTopics/Articles/RespondingtoForceTouchEventsfromJavaScript.html\"\r\n  }]\r\n}\r\n!*/\r\n/* DOC\r\nTests whether the browser supports the detection of Force Touch Events.\r\nForce Touch Events allow custom behaviours and interactions to take place based on the given pressure or change in pressure from a compatible trackpad.\r\n\r\nForce Touch events are available in OS X 10.11 and later on devices equipped with Force Touch trackpads.\r\n*/\r\n\r\n  Modernizr.addTest('forcetouch', function() {\r\n\t\t// github.com/Modernizr/Modernizr/issues/1613\r\n    // Test if the browser supports the force touch event progression (see notes link)\r\n    if (!hasEvent(prefixed('mouseforcewillbegin', window, false), window)) {\r\n      return false;\r\n    }\r\n\r\n    // Test if the browser provides thresholds defining a \"force touch\" from a normal touch/click event\r\n    return MouseEvent.WEBKIT_FORCE_AT_MOUSE_DOWN && MouseEvent.WEBKIT_FORCE_AT_FORCE_MOUSE_DOWN;\r\n  });\r\n\r\n/*!\r\n{\r\n  \"name\": \"CSS Object Fit\",\r\n  \"caniuse\": \"object-fit\",\r\n  \"property\": \"objectfit\",\r\n  \"tags\": [\"css\"],\r\n  \"builderAliases\": [\"css_objectfit\"],\r\n  \"notes\": [{\r\n    \"name\": \"Opera Article on Object Fit\",\r\n    \"href\": \"https://dev.opera.com/articles/css3-object-fit-object-position/\"\r\n  }]\r\n}\r\n!*/\r\n\r\n  Modernizr.addTest('objectfit', !!prefixed('objectFit'), {aliases: ['object-fit']});\r\n\r\n\r\n  /**\r\n   * testAllProps determines whether a given CSS property is supported in the browser\r\n   *\r\n   * @memberof Modernizr\r\n   * @name Modernizr.testAllProps\r\n   * @optionName Modernizr.testAllProps()\r\n   * @optionProp testAllProps\r\n   * @access public\r\n   * @function testAllProps\r\n   * @param {string} prop - String naming the property to test (either camelCase or kebab-case)\r\n   * @param {string} [value] - String of the value to test\r\n   * @param {boolean} [skipValueTest=false] - Whether to skip testing that the value is supported when using non-native detection\r\n   * @example\r\n   *\r\n   * testAllProps determines whether a given CSS property, in some prefixed form,\r\n   * is supported by the browser.\r\n   *\r\n   * ```js\r\n   * testAllProps('boxSizing')  // true\r\n   * ```\r\n   *\r\n   * It can optionally be given a CSS value in string form to test if a property\r\n   * value is valid\r\n   *\r\n   * ```js\r\n   * testAllProps('display', 'block') // true\r\n   * testAllProps('display', 'penguin') // false\r\n   * ```\r\n   *\r\n   * A boolean can be passed as a third parameter to skip the value check when\r\n   * native detection (@supports) isn't available.\r\n   *\r\n   * ```js\r\n   * testAllProps('shapeOutside', 'content-box', true);\r\n   * ```\r\n   */\r\n\r\n  function testAllProps(prop, value, skipValueTest) {\r\n    return testPropsAll(prop, undefined, undefined, value, skipValueTest);\r\n  }\r\n  ModernizrProto.testAllProps = testAllProps;\r\n  \r\n/*!\r\n{\r\n  \"name\": \"Flexbox\",\r\n  \"property\": \"flexbox\",\r\n  \"caniuse\": \"flexbox\",\r\n  \"tags\": [\"css\"],\r\n  \"notes\": [{\r\n    \"name\": \"The _new_ flexbox\",\r\n    \"href\": \"http://dev.w3.org/csswg/css3-flexbox\"\r\n  }],\r\n  \"warnings\": [\r\n    \"A `true` result for this detect does not imply that the `flex-wrap` property is supported; see the `flexwrap` detect.\"\r\n  ]\r\n}\r\n!*/\r\n/* DOC\r\nDetects support for the Flexible Box Layout model, a.k.a. Flexbox, which allows easy manipulation of layout order and sizing within a container.\r\n*/\r\n\r\n  Modernizr.addTest('flexbox', testAllProps('flexBasis', '1px', true));\r\n\r\n\r\n  // Run each test\r\n  testRunner();\r\n\r\n  // Remove the \"no-js\" class if it exists\r\n  setClasses(classes);\r\n\r\n  delete ModernizrProto.addTest;\r\n  delete ModernizrProto.addAsyncTest;\r\n\r\n  // Run the things that are supposed to run after the tests\r\n  for (var i = 0; i < Modernizr._q.length; i++) {\r\n    Modernizr._q[i]();\r\n  }\r\n\r\n  // Leak Modernizr namespace\r\n  window.Modernizr = Modernizr;\r\n\r\n\r\n;\r\n\r\n})(window, document);\n\n//# sourceURL=webpack:///./js/vendor/modernizr.custom.80802.js?")},502:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  INITIATE_ALL: function() { return /* binding */ INITIATE_ALL; }\n});\n\n;// ./js/include/config-vars.js\nconst config_vars_$body = $('body'),\r\n\t\t\t\t$html = $('html'),\r\n\t\t\t\t$pageBodyWrapper = $('#fsPageBodyWrapper'),\r\n\t\t\t\t$header = $('#fsHeader'),\r\n\t\t\t\t$section = $('section'),\r\n\t\t\t\tisHome = $('.home').length,\r\n\t\t\t\tnotDraftMode = !$('.fsDraftMode').length, // if (isHome && notDraftMode)...\r\n\t\t\t\tconfig_vars_notComposeMode = !$('.fsComposeMode').length,\r\n\t\t\t\t$window = $(window),\r\n\r\n\t\t\t\t// Constant Custom Classes\r\n\t\t\t\t// ================================,\r\n\t\t\t\t$navMain = $('.nav-main'),\r\n\t\t\t\t$navMain_level1 = $navMain.find('.fsNavLevel1'),\r\n\t\t\t\t$navSub = $('.nav-sub'),\r\n\t\t\t\tsectionTitle = $navMain.find('li[class*=\"fsNavCurrentPage\"] > a').first().text(),\r\n\t\t\t\t$navMainMobile = $('.nav-main-mobile'),\r\n\t\t\t\tmobileMenuToggle = '.mobile-toggle',\r\n\t\t\t\tmobileMenuClose = '.mobile-close',\r\n\t\t\t\t$mobileParentNavs = $navMainMobile.find('.fsNavParentPage'),\r\n\r\n\t\t\t\t// Element Specific Variables\r\n\t\t\t\t// ================================,\r\n\t\t\t\t$calendarGrid = $('.fsCalendar.fsGrid'),\r\n\r\n\t\t\t\t// Slideshow Subtype\r\n\t\t\t\t// ================================,\r\n\t\t\t\t$slideshowSubtype = $('.fsSlideshow'),\r\n\r\n\t\t\t\t// Specific Custom Classes\r\n\t\t\t\t// ================================,\r\n\t\t\t\t$siteSearch = $('.site-search'),\r\n\t\t\t\t$searchToggle = $('.search-toggle'),\r\n\r\n\t\t\t\t// Styles Manager Variables\r\n\t\t\t\t// ================================\r\n\t\t\t\t$tableStyle = $('table.table-styled, table.fsElementTable, .table-styled'),\r\n\t\t\t\t     \t\r\n\t\t\t\t// Enhancements\r\n\t\t\t\t// ================================\r\n\t\t\t\tconfig_vars_$hero = $('.hero')\r\n\r\n\t;\n;// ./js/internal/responsive-calendar-grid.js\n// ===================================================\r\n// Calendar Element GRid Subtype Responsive Breakdown\r\n// ===================================================\r\n\r\n\r\nconst RESPONSIVE_CALENDAR_GRID = {\r\n\r\n    init () {\r\n        this.responsiveCalendarGrid();\r\n    }, \r\n\r\n    responsiveCalendarGrid () {\r\n        var eventview,\r\n        scrollUp,\r\n\r\n        onClickGridEvent = function onClickGridEvent(event) {\r\n\r\n            var element = $(event.target).closest('.fsCalendar.fsGrid'),\r\n                daybox = $(event.target).closest('.fsCalendarDaybox').hasClass(\"fsCalendarWeekendDayBox\") ? $(event.target).closest('div[tabIndex]') : $(event.target).closest('.fsCalendarDaybox'),\r\n                offsetTop = 0,\r\n                date,\r\n                eventview = element.find('#event-view')\r\n                ;\r\n\r\n            element.find('.fsCalendarEventGrid .fsCalendarDaybox, .fsCalendarWeekendDayBox > div').removeClass('selected');\r\n\r\n            if (eventview.length && daybox.length) {\r\n                date = daybox.clone();\r\n                daybox.addClass('selected');\r\n\r\n                offsetTop = eventview.offset().top - 16;\r\n                eventview.find(\"> div\").remove();\r\n                eventview.prepend(date);\r\n            }\r\n\r\n            if ($(window).width() < 900) {\r\n                $('html,body').animate({\r\n                    'scrollTop': offsetTop\r\n                }, 450);\r\n            }\r\n        },\r\n\r\n        onClickScrollUp = function onClickScrollUp(element) {\r\n            $('html,body').animate({\r\n                'scrollTop': element.offset().top\r\n            }, 450);\r\n            if(element.find(\".selected\").length) {\r\n                element.find(\".selected\").focus();\r\n            } else {\r\n                element.find(\".fsCalendarDaybox[tabIndex], .fsCalendarWeekendDayBox > div[tabIndex]\").last().focus();\r\n            }\r\n        },\r\n\r\n        onGridUpdate = function(element) {\r\n\r\n            if (element.hasClass('fsCalendar fsGrid')) {\r\n                var id = element.attr('id'),\r\n                    i = 0,\r\n                    max = 20,\r\n                    grid,\r\n                    checkGrid = setInterval(function() {\r\n                        grid = $('#' + id).find('.fsCalendarEventGrid');                        \r\n\r\n                        if (grid.length) {\r\n                            clearInterval(checkGrid);\r\n                            initCalendar(grid);\r\n                        }\r\n\r\n                        if (i++ > max) {\r\n                            clearInterval(checkGrid);\r\n                        }\r\n                    }, 20);\r\n            }\r\n        },\r\n\r\n        initCalendar = function initCalendar(element) {\r\n\r\n            var eventview = $('<div id=\"event-view\" />').insertAfter(element),\r\n                scrollUp = $('<button class=\"scroll-up\">Back Up To Calendar</button>').appendTo(eventview),\r\n                todayDate = element.find('.fsCalendarToday').clone().removeClass('fsCalendarToday')\r\n                ;\r\n\r\n            eventview.each(function() {\r\n                $(this).prepend(todayDate);\r\n            });\r\n\r\n            scrollUp.on('click', function() {\r\n                onClickScrollUp(element);\r\n            });\r\n\r\n            element.find('.fsCalendarDaybox:not(.fsCalendarWeekendDayBox), .fsCalendarWeekendDayBox > div').has('.fsCalendarInfo').attr(\"tabIndex\", 0);\r\n\r\n            element.on('click', '.fsCalendarDaybox:not(.fsCalendarWeekendDayBox), .fsCalendarWeekendDayBox > div ', onClickGridEvent);\r\n            element.on(\"keydown\", '.fsCalendarDaybox:not(.fsCalendarWeekendDayBox), .fsCalendarWeekendDayBox > div ', function(event) { \r\n                var keyCode = (event.keyCode ? event.keyCode : event.which);   \r\n                if (keyCode == 13 && $(window).width() < 900) { //899 and down we consider mobile for the calendar grid\r\n                    $(this).trigger('click');\r\n                    eventview.find(\":focusable\").eq(0).focus();\r\n                }\r\n            });\r\n            eventview.on(\"keydown\", function(e) {\r\n                var focusableEls = eventview[0].querySelectorAll('a[href]:not([disabled]), div[tabIndex], .scroll-up'),\r\n                  firstFocusableEl = focusableEls[0],\r\n                  KEYCODE_TAB = 9,\r\n                  isTabPressed = (e.key === 'Tab' || e.keyCode === KEYCODE_TAB);\r\n                if(!isTabPressed && !e.shiftKey) { \r\n                    return; \r\n                }\r\n                if((e.shiftKey && isTabPressed) && document.activeElement === firstFocusableEl) {\r\n                    if(element.find(\".selected\").length) {\r\n                        element.find(\".selected\").focus();\r\n                    } else {\r\n                        element.find(\".fsCalendarDaybox[tabIndex], .fsCalendarWeekendDayBox > div[tabIndex]\").last().focus();\r\n                    }\r\n                    e.preventDefault();\r\n                }\r\n            });\r\n        },\r\n\r\n        nextDay = function(element) {\r\n            const totalRows = element.find(\".fsCalendarRow\").length;\r\n            const selectedRow = element.find(\".selected\").parent().index() - 1;\r\n            for(let i = selectedRow; i < totalRows; i++) {\r\n                if(element.find(\".fsCalendarRow:eq(\"+i+\") .selected\").length) { //first loop\r\n                    if(element.find(\".fsCalendarRow:eq(\"+i+\") .selected\").is(\":last-child\") || !element.find(\".fsCalendarRow:eq(\"+i+\") .selected\").nextAll(\".fsStateHasEvents\").length) {\r\n                        continue;\r\n                    } else {\r\n                        return element.find(\".fsCalendarRow:eq(\"+i+\") .selected\").nextAll(\".fsStateHasEvents\").first();\r\n                    }\r\n                } else {\r\n                    if(element.find(\".fsCalendarRow:eq(\"+i+\") .fsStateHasEvents\").length) {\r\n                        return element.find(\".fsCalendarRow:eq(\"+i+\") .fsStateHasEvents\").first();\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        FS.events.onElementUpdated('Calendar', function($element) {\r\n            onGridUpdate($element);\r\n        });\r\n\r\n        $('.fsGrid .fsCalendarEventGrid').each(function() {\r\n            initCalendar( $(this) );\r\n        });\r\n    }\r\n\r\n}; //end RESPONSIVE_CALENDAR_GRID\r\n\n;// ./js/include/responsive-slideshow-subtype.js\n// ================================================\r\n// Element Slideshow Subtype Responsive Breakdown\r\n// ================================================\r\n\r\n\r\n\r\n/*\r\nIf you have Slideshow subtype elements that\r\nshouldn't have the slick control wrapping,\r\nfill out the custom class(es) here\r\n*/\r\nconst excludedClasses = [\r\n\t'hero-banner',\r\n];\r\n\r\n\r\nconst RESPONSIVE_SLIDESHOW_SUBTYPE = {\r\n\r\n\tinit () {\r\n\r\n\t\tthis.responsiveSlideshows();\r\n\r\n\t}, \r\n\r\n\tresponsiveSlideshows () {\r\n\r\n\t\t// var options,\r\n\t\t// update breakpoint variables here\r\n\t\tvar bpOneSlide = 600,\r\n\t\t\tbpTwoSlides = 800,\r\n\t\t\tbpThreeSlides = 1000,\r\n\t\t\tbpFourSlides = 1100\r\n\t\t;\r\n\r\n\t\t$slideshowSubtype.find('.fsElementSlideshow').each(function () {\r\n\r\n\t\t\tvar target = this;\r\n\t\t\tvar slidesToShow = $(target).data('slides-to-show');\r\n\r\n\t\t\t//determines slides to show & and slides to scroll\r\n\t\t\tvar stsTwo = slidesToShow < 2 ? slidesToShow : 2;\r\n\t\t\tvar stsThree =  slidesToShow < 3 ? slidesToShow : 3;\r\n\t\t\tvar stsFour = slidesToShow < 4 ? slidesToShow : 4;\r\n\r\n\r\n\t\t\tvar  customSlick = [{\r\n\t\t\t\tbreakpoint: bpFourSlides,\r\n\t\t\t\tsettings: {\r\n\t\t\t\t\tslidesToShow: stsFour,\r\n\t\t\t\t\tslidesToScroll: stsFour\r\n\t\t\t\t}\r\n\t\t\t}, {\r\n\t\t\t\tbreakpoint: bpThreeSlides,\r\n\t\t\t\tsettings: {\r\n\t\t\t\t\tslidesToShow: stsThree,\r\n\t\t\t\t\tslidesToScroll: stsThree\r\n\t\t\t\t}\r\n\t\t\t}, {\r\n\t\t\t\tbreakpoint: bpTwoSlides,\r\n\t\t\t\tsettings: {\r\n\t\t\t\t\tslidesToShow: stsTwo,\r\n\t\t\t\t\tslidesToScroll: stsTwo\r\n\t\t\t\t}\r\n\t\t\t}, {\r\n\t\t\t\tbreakpoint: bpOneSlide,\r\n\t\t\t\tsettings: {\r\n\t\t\t\t\tslidesToShow: 1,\r\n\t\t\t\t\tslidesToScroll: 1\r\n\t\t\t\t}\r\n\r\n\t\t\t}];\r\n\t\t\t\t\r\n\t\t\tif( $(target).hasClass('slick-initialized')) {\r\n\t\t\t\t// responsive slick only for non-Resources horizontal slideshows\r\n\t\t\t\tif($(target).parents(\".fsSlideshow\").hasClass(\"fsSlideshowHorizontal\")) {\r\n\t\t\t\t\t$(target).slick( 'slickSetOption', 'responsive', customSlick, true);\r\n\t\t\t\t}\r\n\t\t\t\t//wrapping slick controls\r\n\t\t\t\t$(target).each(function() {\r\n\t\t\t\t\tif(!excludedClasses.some(x => [...$(target).parents(\".fsSlideshow\")[0].classList].includes(x))) {\r\n\t\t\t\t\t\tRESPONSIVE_SLIDESHOW_SUBTYPE.slideshowControls($(this).slick(\"getSlick\"), target);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// set options on init for Resource slideshows\r\n\t\t\t\t$(target).on('init', function(event,slick){\r\n\t\t\t\t\tsetTimeout( function(){\r\n\t\t\t\t\t\t// responsive slick only for horizontal slideshows\r\n\t\t\t\t\t\tif($(target).parents(\".fsSlideshow\").hasClass(\"fsSlideshowHorizontal\")) {\r\n\t\t\t\t\t\t\t$(target).slick( 'slickSetOption', 'responsive', customSlick, true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//wrapping slick controls on page load\r\n\t\t\t\t\t\tif(!excludedClasses.some(x => [...$(target).parents(\".fsSlideshow\")[0].classList].includes(x))) {\r\n\t\t\t\t\t\t\tRESPONSIVE_SLIDESHOW_SUBTYPE.slideshowControls(slick, target);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},1);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t$(target).on('breakpoint', function(event, slick) {\r\n\t\t\t\t//removing slick navigation\r\n\t\t\t\t$(target).find(\".slick-navigation > *\").eq(0).unwrap();\r\n\t\t\t\t//wrapping slick controls\r\n\t\t\t\tif(!excludedClasses.some(x => [...$(target).parents(\".fsSlideshow\")[0].classList].includes(x))) {\r\n\t\t\t\t\tRESPONSIVE_SLIDESHOW_SUBTYPE.slideshowControls(slick, target);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t});\r\n\r\n\t\tFS.events.onElementDialogShown('all', function ($element) {\r\n\t\t  $element.find(\".fsElementSlideshow\").on('init', function(event,slick){\r\n\t\t\t\tsetTimeout( function(){\r\n\t\t\t\t\t//wrapping slick controls on dialog load\r\n\t\t\t\t\tRESPONSIVE_SLIDESHOW_SUBTYPE.slideshowControls(slick, $element.find(\".fsElementSlideshow\"));\r\n\t\t\t\t},1);\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t},\r\n\r\n\tslideshowControls (slick, target) {\r\n\r\n\t\tif($(target).find(\".slick-navigation\").length) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif($(target).data(\"arrows\")) {\r\n\t\t  slick.$nextArrow.appendTo($(target));\r\n\t\t  slick.$nextArrow.wrap('<div class=\"slick-navigation\"/>');\r\n\t\t  if($(target).data(\"vertical\")) {\r\n\t\t    slick.$prevArrow.prependTo($(target));\r\n\t\t  } else {\r\n\t\t    slick.$prevArrow.insertBefore(slick.$nextArrow);\r\n\t\t  }\r\n\r\n\t\t\tif($(target).data(\"dots\")) {\r\n\t\t\t\tslick.$dots.insertBefore(slick.$nextArrow);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}; //end RESPONSIVE_SLIDESHOW_SUBTYPE\r\n\n;// ./js/include/accessibility.js\n// ================================\r\n// ADA\r\n// ================================\r\n\r\n__webpack_require__(509);\r\n\r\n\r\n\r\nconst ACCESSIBILITY = {\r\n\r\n  init () {\r\n    if (notDraftMode) {\r\n      this.accessibleNavigation();\r\n    }\r\n    this.accessibleSearch();\r\n  },\r\n\r\n  // ==============================================================\r\n  // Accessible Main Navigation\r\n  // allows user to tab through main navigation and dropdown links\r\n  // ==============================================================\r\n\r\n  accessibleNavigation () {\r\n\r\n    $navMain_level1.accessibility_menu();\r\n\r\n  },\r\n\r\n  // ==============================================================\r\n  // Accessible Search Flyout\r\n  // allows user to tab through a search flyout\r\n  // ==============================================================\r\n\r\n  accessibleSearch () {\r\n\r\n    $siteSearch.on('focusin click', function() {\r\n      $(this).addClass(\"search-open\");\r\n    });\r\n\r\n    $siteSearch.on('focusout', function() {\r\n      $(this).removeClass(\"search-open\");\r\n    });\r\n\r\n    $(document).on('click', function(e) {\r\n      if (!$(e.target).closest($siteSearch).length) {\r\n        $siteSearch.removeClass(\"search-open\");\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n}; //end ACCESSIBILITY\r\n\r\n\r\n\n;// ./js/internal/fs-move-resource-image.js\n// ====================================================\r\n// Resources - Move Resource to another element\r\n// Ex: img or other container to use a background\r\n// ====================================================\r\n\r\n/* v1.0.0\r\n\tmoveResourceImage(ele, target) \r\n\r\n\tele = element with a data-image-sizes attribute\r\n\ttarget = element to apply the image to\r\n\r\n\tUsage:\r\n\r\n  // Import function within desired file for use: \r\n\r\n\timport {\r\n\t\t moveResourceImage\r\n\t} from '../internal/fs-move-resource-image';\r\n\r\n\tExample 1: \r\n\r\n\t\tmoveResourceImage('.custom-resource-element img','.img-out');\r\n\r\n\t** Note: if multiple instances on the same page usage is\r\n\twithin an each statement **\r\n\r\n\tExample 2: \r\n\r\n\t\t$('.custom-resource-element').each(function() {\r\n\t\t  var elementImage = $(this).find('img');\r\n\t\t  var imageDestination = $(this).find('picture');\r\n\r\n\t\t  moveResourceImage(elementImage, imageDestination);\r\n\t\t});\r\n\r\n\t** In Composer: \r\n\tElement Settings > Design > uncheck \"Scale media on load\"\r\n  \r\n*/\r\n\r\nfunction moveResourceImage(ele, target) {\r\n\r\n\tif ( ele.length === 0 || target.length === 0 ) { return false; }\r\n\r\n\t\tvar $this = $(ele).eq(0),\r\n\t\t\t  imgSizes = $this.attr('data-image-sizes'),\r\n\t\t\t\taspect = $this.attr('data-aspect-ratio');\r\n\r\n\t\t$(target).eq(0)\r\n\t\t\t.attr('data-image-sizes',imgSizes)\r\n\t\t\t.attr('data-aspect-ratio',aspect);\r\n\r\n\t\t// Composer function for finding image size\r\n\t\tFS.util.updateDynamicImages( $(target).eq(0) );\r\n\r\n};\r\n\n;// ./js/internal/utilities.js\n// =============================\r\n// Common Utitlies\r\n// =============================\r\n\r\nfunction backgroundImage($element) {\r\n  backgroundElement = $element;\r\n  $(backgroundElement).each(function() {\r\n\r\n    var image = $(this).find('img').attr('src');\r\n\r\n    $(this).css('background-image', 'url(\"' + image + '\")');\r\n\r\n  });\r\n};\r\n\r\n// ===================================\r\n// Debouncing for Window Resize Events\r\n// ===================================\r\n\r\nfunction debounce(func, wait, immediate) {\r\n  var timeout;\r\n  return function() {\r\n    var context = this, args = arguments;\r\n    var later = function() {\r\n      timeout = null;\r\n      if (!immediate) func.apply(context, args);\r\n    };\r\n    var callNow = immediate && !timeout;\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(later, wait);\r\n    if (callNow) func.apply(context, args);\r\n  }\r\n};\r\n\r\n// ===================================\r\n// Search Module Placeholder\r\n// Use: placeholder($(\".search-module\"), \"Search\");\r\n// Note: function MUST be called after $.support.placeholder function below this comment\r\n// ===================================\r\n\r\n// //check if browser supports placeholders for placeholder()\r\n// $.support.placeholder = (function() {\r\n//     var i = document.createElement('input');\r\n//     return 'placeholder' in i;\r\n// })();\r\n\r\nfunction placeholder(el, text) {\r\n\r\n    var counter = 100, // number of attempts before the function self-terminates\r\n        interval = 100, // milliseconds between attempts\r\n        searchCheck,\r\n        timer\r\n    ;\r\n\r\n    searchCheck = function searchCheck(){\r\n        if(el.find(\"input.gsc-input\").length){\r\n            if($.support.placeholder) {\r\n                el.find(\"input.gsc-input\").attr(\"placeholder\", text);\r\n            }\r\n            else {\r\n                el.find(\"input.gsc-input\").attr(\"value\", text);\r\n            }\r\n        } else if( counter > 0 ) {\r\n            timer = setTimeout( searchCheck, interval );\r\n            counter -= 1;\r\n        }\r\n    };\r\n\r\n    timer = setTimeout( searchCheck, interval );\r\n};\r\n\r\n// =============================\r\n// Nano Templates\r\n// https://github.com/trix/nano\r\n// =============================\r\n\r\nfunction nano(template, data) {\r\n  return template.replace(/\\{([\\w\\.]*)\\}/g, function(str, key) {\r\n    var keys = key.split(\".\"), v = data[keys.shift()];\r\n    for (var i = 0, l = keys.length; i < l; i++) v = v[keys[i]];\r\n    return (typeof v !== \"undefined\" && v !== null) ? v : \"\";\r\n  });\r\n};\r\n\r\n// =============================\r\n// Randomize Function\r\n// =============================\r\n\r\nfunction randomGenerator() {\r\n  $.fn.randomize = function(selector){\r\n    var $elems = selector ? $(this).find(selector) : $(this).children(),\r\n        $parents = $elems.parent();\r\n\r\n    $parents.each(function(){\r\n        $(this).children(selector).sort(function(){\r\n            return Math.round(Math.random()) - 0.5;\r\n        }).detach().appendTo(this);\r\n    });\r\n\r\n    return this;\r\n  };\r\n};\r\n\r\n// =============================\r\n// Trap Focus Function\r\n// =============================\r\n\r\nfunction trapFocus(element, cb) {\r\n  const KEYCODE_TAB = 9,\r\n      ESCAPE_TAB = 27;\r\n  element.addEventListener('keydown', function(e) {\r\n    var focusableEls = Array.from(element.querySelectorAll('a[href]:not([disabled]), button:not([disabled]), textarea:not([disabled]), input[type=\"text\"]:not([disabled]), input[type=\"radio\"]:not([disabled]), input[type=\"checkbox\"]:not([disabled]), select:not([disabled])')).filter(s =>\r\n      !!( s.offsetWidth || s.offsetHeight || s.getClientRects().length )\r\n    );\r\n    var firstFocusableEl = focusableEls[0];  \r\n    var lastFocusableEl = focusableEls[focusableEls.length - 1];\r\n    var isTabPressed = (e.key === 'Tab' || e.keyCode === KEYCODE_TAB);\r\n    var isEscPressed = (e.key === 'Escape' || e.keyCode === ESCAPE_TAB);\r\n    if(!isTabPressed && !isEscPressed) { \r\n      return; \r\n    }\r\n    if(isEscPressed) {\r\n      this.callback = cb;\r\n      this.callback();\r\n    }\r\n    if(e.shiftKey) /* shift + tab */ {\r\n      if(document.activeElement === firstFocusableEl) {\r\n        lastFocusableEl.focus();\r\n        e.preventDefault();\r\n      }\r\n    } else /* tab */ {\r\n      if(document.activeElement === lastFocusableEl) {\r\n        firstFocusableEl.focus();\r\n        e.preventDefault();\r\n      }\r\n    }\r\n  });\r\n};\n;// ./js/internal/fs-weglot.js\n/*\r\n======================\r\nThis plugin should be used on design packages where Weglot has been integrated into the design.\r\n\r\nThese are the options in the plugin:\r\n\r\n--defaultTemplate: This is the HTML string of each language link. You should only need to do a minor modification to this default string, like adding an inner span tag. {lang} refers to the 2 digit language code, like \"EN\" for English. {language} refers the the long form name of the language, like \"English\". DO NOT MODIFY ANY ARIA ATTRIBUTES, ROLE ATTRIBUTE, OR THE TABINDEX.\r\n\r\n--toggleButtonOutput: True by default. This outputs a button which you can use to open and close the list of language links. If false, toggleButtonHTML will not be used (obviously).\r\n\r\n--toggleButtonHTML: This is the HTML string of the button which is used to open and close the list of language links. Keep modifications here to the minimum. In the below example, there are 2 toggleButtonHTML's created:\r\n    --One is set up to show visible text to the user (Translate), with hidden text within <span class=\"fsStyleSROnly\">. It's important that hidden text be contained within this SPAN, and not some other class. \r\n    --One is set up to show the active language the user is on. You can use {lang} or {language}.\r\n\r\n======================\r\nHow to import this plugin:\r\n\r\nimport {\r\n  FSWeglot\r\n} from '../internal/fs-weglot';\r\n======================\r\nHow to call this plugin:\r\n\r\nconst weglotInstance = new FSWeglot(\r\n  document.querySelector(\".fsEmbed.fs-weglot-container > .fsElementContent\"),\r\n  {\r\n    defaultTemplate: '<li role=\"none\"><a href=\"#Weglot-{lang}\" lang=\"{lang}\" role=\"option\" tabindex=\"-1\">{language}</a></li>',// Should only need to do small modifications here, like adding an inner <span>, for example.\r\n    toggleButtonOutput: true, // True by default. Set to false if you want to create your own toggle button\r\n    toggleButtonHTML: '<button aria-controls=\"weglot-list\" aria-expanded=\"false\" aria-haspopup=\"listbox\" role=\"combobox\" class=\"fs-weglot-toggle\">Translate<span class=\"fsStyleSROnly\"> this page</span></button>', //If using a span to hide text, please use the fsStyleSROnly class as shown in this example.\r\n    // toggleButtonHTML: '<button aria-controls=\"weglot-list\" aria-expanded=\"false\" aria-haspopup=\"listbox\" role=\"combobox\" class=\"fs-weglot-toggle\">{language}</button>', // A second option of how the toggleButton can render (active language).\r\n    dropdownDelay: 300 // 0 is default. When you open toggleButton, we focus to the first anchor inside. If you need to delay the focus to the first anchor, set that here.\r\n  },\r\n  function () {\r\n    // Your callback logic here\r\n  }\r\n).init();\r\n======================\r\n*/\r\n\r\nclass FSWeglot {\r\n  constructor(targets, options, callback) {\r\n    this.targets = Array.isArray(targets) ? targets : [targets];\r\n    this.options = options;\r\n    this.defaultTemplate = options.defaultTemplate || '<li role=\"none\"><a href=\"#Weglot-{lang}\" lang=\"{lang}\" role=\"option\" tabindex=\"-1\">{language}</a></li>';\r\n    this.callback = callback;\r\n    this.toggleButtonOutput = options.toggleButtonOutput !== undefined ? options.toggleButtonOutput : true;\r\n    this.toggleButtonHTML = options.toggleButtonHTML || '<button aria-controls=\"weglot-list\" aria-expanded=\"false\" aria-haspopup=\"listbox\" role=\"combobox\" class=\"fs-weglot-toggle\">Translate<span class=\"fsStyleSROnly\"> this page</span></button>';\r\n    this.translationType = null;\r\n    this.dropdownDelay = options.dropdownDelay || 0;\r\n  }\r\n\r\n  init() {\r\n    Weglot.on(\"initialized\", () => {\r\n      this.targets.forEach((target) => {\r\n        this.createLanguageList(target);\r\n\r\n        if (this.toggleButtonOutput) {\r\n          this.addToggleButton(target);\r\n        }\r\n      });\r\n\r\n      this.callback();\r\n    });\r\n  }\r\n\r\n  createLanguageList(target) {\r\n    const availableLanguages = Weglot.getAvailableLanguages(),\r\n          list = $('<ul role=\"listbox\" id=\"weglot-list\" class=\"weglot-list\"/>');\r\n\r\n    if (!$(target).find(list).length) {\r\n      $(target).append(list);\r\n    }\r\n\r\n    availableLanguages.forEach((language) => {\r\n      list.append(this.createLanguageItem(language));\r\n    });\r\n  }\r\n\r\n  createLanguageItem(language) {\r\n    const listItem = this.createLanguageTemplate(language),\r\n          anchor = listItem.find(\"a\");\r\n\r\n    anchor.on(\"click\", (e) => {\r\n      e.preventDefault();\r\n      this.handleLanguageChange(language);\r\n    });\r\n\r\n    return listItem;\r\n  }\r\n\r\n  createLanguageTemplate(language) {\r\n    const template = this.defaultTemplate\r\n      .replaceAll(\"{lang}\", language)\r\n      .replaceAll(\"{language}\", Weglot.getLanguageName(language));\r\n\r\n    return $(template);\r\n  }\r\n\r\n  handleLanguageChange(language) {\r\n    const validLanguages = Weglot.getAvailableLanguages();\r\n    if (validLanguages.includes(language)) {\r\n      Weglot.switchTo(language);\r\n    } else {\r\n      console.error(`[Weglot] ${language} isn't a language you have added`);\r\n    }\r\n  }\r\n\r\n  addToggleButton(target) {\r\n    const toggleButton = $(target).prepend(this.getUpdatedToggleButtonHTML()).find('.fs-weglot-toggle');\r\n    const dropdownList = $(target).find(\".weglot-list\");\r\n\r\n    this.toggleButtonAccessibility(toggleButton, dropdownList);\r\n\r\n    Weglot.on(\"languageChanged\", () => {\r\n      this.updateButtonText(toggleButton);\r\n    });\r\n\r\n    $(document).on(\"click\", (event) => {\r\n      const isDropdownClick = dropdownList.is(event.target) || dropdownList.has(event.target).length > 0;\r\n      const isToggleButtonClick = toggleButton.is(event.target);\r\n\r\n      if (!isDropdownClick && !isToggleButtonClick) {\r\n        dropdownList.removeClass(\"weglot-list-open\");\r\n        toggleButton.removeClass(\"active\").attr('aria-expanded', 'false');\r\n      }\r\n    });\r\n  }\r\n\r\n  toggleButtonAccessibility(toggleButton, dropdownList) {\r\n    const delay = this.dropdownDelay;\r\n    toggleButton.on(\"click\", function () {\r\n      dropdownList.toggleClass(\"weglot-list-open\");\r\n      $(this).toggleClass(\"active\");\r\n      toggleButton.attr('aria-expanded', (index, attr) => attr === 'true' ? 'false' : 'true');\r\n      if(dropdownList.hasClass(\"weglot-list-open\")) {\r\n        setTimeout(() => {\r\n          dropdownList.find(\"a:visible\").eq(0).focus();\r\n        }, delay);\r\n      }\r\n    });\r\n\r\n    $(this.target).on(\"keydown\", \".weglot-list a\", function (e) {\r\n      const anchors = dropdownList.find(\"a:visible\"),\r\n            currentIndex = anchors.index(this);\r\n\r\n      switch (e.which) {\r\n        case 13: // Enter\r\n          e.preventDefault();\r\n          Weglot.switchTo(anchors.eq(currentIndex).attr(\"lang\"));\r\n          dropdownList.removeClass(\"weglot-list-open\");\r\n          toggleButton.removeClass(\"active\").attr('aria-expanded', 'false').focus();\r\n          break;\r\n        case 27: // Escape\r\n          dropdownList.removeClass(\"weglot-list-open\");\r\n          toggleButton.removeClass(\"active\").attr('aria-expanded', 'false').focus();\r\n          break;\r\n        case 38: // Up arrow\r\n          e.preventDefault();\r\n          if (currentIndex > 0) {\r\n            anchors.eq(currentIndex - 1).focus();\r\n          }\r\n          break;\r\n        case 40: // Down arrow\r\n          e.preventDefault();\r\n          if (currentIndex < anchors.length - 1) {\r\n            anchors.eq(currentIndex + 1).focus();\r\n          }\r\n          break;\r\n      }\r\n    });\r\n\r\n    // Detect when focus leaves the dropdownList and close it\r\n    $(document).on(\"focusin\", (event) => {\r\n        const isDropdownClick = dropdownList.is(event.target) || dropdownList.has(event.target).length > 0;\r\n        const isToggleButtonClick = toggleButton.is(event.target);\r\n\r\n        if (!isDropdownClick && !isToggleButtonClick) {\r\n            // Check if the newly focused element is outside the dropdown and toggleButton\r\n            const isOutsideDropdownAndButton = !dropdownList.find(event.target).length && !toggleButton.is(event.target);\r\n\r\n            if (isOutsideDropdownAndButton) {\r\n                dropdownList.removeClass(\"weglot-list-open\");\r\n                toggleButton.removeClass(\"active\").attr('aria-expanded', 'false');\r\n            }\r\n        }\r\n    });\r\n  }\r\n\r\n  updateButtonText(button) {\r\n    const lang = Weglot.getCurrentLang();\r\n    button.text(Weglot.getLanguageName(lang));\r\n  }\r\n\r\n  getUpdatedToggleButtonHTML() {\r\n    return this.toggleButtonHTML\r\n      .replace(/{lang}/g, Weglot.getCurrentLang())\r\n      .replace(/{language}/g, Weglot.getLanguageName(Weglot.getCurrentLang()));\r\n  }\r\n}\r\n\r\n\n;// ./js/include/navigation.js\n// ================================\r\n// NAVIGATION\r\n// ================================\r\n__webpack_require__(81);\r\n__webpack_require__(644);\r\n__webpack_require__(279);\r\n__webpack_require__(534);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst NAVIGATION = {\r\n\r\n  init () {\r\n\r\n    if(config_vars_notComposeMode){\r\n      this.handledWeglotSettings();\r\n    }\r\n\r\n    this.offCanvasMenu();\r\n    this.collapseSubNav();\r\n    this.canvasMenus_settings();\r\n    this.schoolsCanvas_positionMobile();\r\n    this.navFunctionality();\r\n    this.navExpanders();\r\n    this.navigationsSettings();\r\n    this.doubleTapNavs();\r\n\r\n    if(config_vars_notComposeMode){\r\n      this.customSearchSettings();\r\n      this.heroBanner();\r\n\r\n      // global site fade\r\n      // to be fulling loaded\r\n      $window.on('load', function() {  \r\n        setTimeout(function(){ \r\n          config_vars_$body.addClass('site-is--loaded');\r\n        }, 400);\r\n      });\r\n\r\n    }\r\n\r\n    // Homepage\r\n    if( isHome && config_vars_notComposeMode ){\r\n\r\n      $window.on('load',() =>{\r\n        setTimeout(() => {\r\n          document.body.classList.add('preloading-animations--first');\r\n        }, 1250); \r\n        \r\n        setTimeout(() => {\r\n          document.body.classList.add('preloading-animations--second');\r\n        }, 2350); \r\n\r\n        setTimeout(() => {\r\n          document.body.classList.add('preloading-animations--third');\r\n        }, 3200); \r\n\r\n        // setTimeout(() => {\r\n        //   document.body.classList.add('preloading-animations--resets');\r\n        // }, 2800);    \r\n      \r\n      });\r\n\r\n      window.onbeforeunload = function () {\r\n        window.scrollTo(0, 0);\r\n      }\r\n\r\n    } \r\n\r\n  }, \r\n  \r\n  // Weglot Settings\r\n  // ------------------------------\r\n  handledWeglotSettings () {\r\n\r\n    const weglotInstance = new FSWeglot(\r\n      [\r\n        document.querySelector('.translate-container > .fsElementContent'),\r\n      ],\r\n      {\r\n        defaultTemplate: '<li role=\"none\"><a href=\"#Weglot-{lang}\" lang=\"{lang}\" role=\"option\">{language}</a></li>',\r\n        toggleButtonOutput: false,\r\n        dropdownDelay: 300,\r\n      },\r\n      () => {\r\n        console.log('Weglot initialized for multiple placements');\r\n      }\r\n    ).init();\r\n\r\n  },\r\n\r\n\r\n  // Off Canvas Menu\r\n  // ==================================================\r\n\r\n  offCanvasMenu () {\r\n    // Toggle attribute of the body\r\n    $(mobileMenuToggle).on('click', function() {\r\n      config_vars_$body.toggleClass('drawer-is-active');\r\n    });\r\n\r\n    $(mobileMenuClose).on('click', function() {\r\n      config_vars_$body.removeClass('drawer-is-active');\r\n    });\r\n\r\n    $(mobileMenuToggle).on('keypress', function(e){\r\n      if ( e.which == 13 ){\r\n        setTimeout(function() {\r\n          $('.fsMenu').find(':focusable').eq(0).focus();\r\n        }, 700);\r\n      } \r\n    });\r\n\r\n    $(mobileMenuClose).on('keypress', function(e){\r\n      if ( e.which == 13 ){\r\n        setTimeout(function() {\r\n          $(mobileMenuToggle).focus();\r\n        }, 600);\r\n      } \r\n    });\r\n\r\n    trapFocus(document.querySelector('.fsMenu'), function() {\r\n      // what runs if they hit \"esc\" and leave the menu\r\n      config_vars_$body.removeClass('drawer-is-active');\r\n      setTimeout(function() {\r\n        $(mobileMenuToggle).focus();\r\n      }, 600);\r\n    });\r\n\r\n    $('.nav-main .fsNavLevel1 > li').each(function(){\r\n      $(this).find(' > a ').wrapInner('<span></span>');\r\n    });\r\n\r\n    // Remove attribute on the bottom if anything other than\r\n    // what is mentioned is clicked on\r\n    $(document).on('click', function(event) {\r\n      if (!$(event.target).closest('#fsMenu, .mobile-toggle').length) {\r\n        config_vars_$body.removeClass('drawer-is-active');\r\n      }\r\n    });\r\n\r\n    // moving menu image to bg\r\n    const menuImage_picture = $('.fsMenu').find('.menu--background--image picture');\r\n    const menuImage_IMG = $('.fsMenu').find('.menu--background--image picture img');\r\n    moveResourceImage(menuImage_IMG, menuImage_picture); \r\n\r\n  },\r\n\r\n\r\n  // collapsable subnav on mobile\r\n  // ==================================================\r\n\r\n  collapseSubNav () {\r\n    $navSub.each(function() {\r\n      const _ = $(this),\r\n            $navSub_container = _.find('> header'),\r\n            $navSub_title = _.find('> header > .fsElementTitle'),\r\n            buttonText = sectionTitle || $navSub_title.text();\r\n\r\n\r\n      if(!_.find('.fsNavLevel1').length) {\r\n        _.addClass('nav-sub-empty');\r\n      }\r\n\r\n      if(sectionTitle.length) {\r\n        $navSub_title.html(sectionTitle);\r\n      }\r\n\r\n      if(_.parents('.fsHeader').length) {\r\n\r\n        $navSub_container.append([\r\n         '<button class=\"nav-toggle\" aria-expanded=\"false\">',\r\n          '<span>Toggle '+buttonText+' Navigation</span>',\r\n         '</button>'\r\n       ].join('\\n'));\r\n\r\n        $navSub_container.on('click', function() {\r\n          _.toggleClass('active-nav');\r\n          $(this).find(\".nav-toggle\")\r\n            .attr(\"aria-expanded\",  $(this).find(\".nav-toggle\").attr(\"aria-expanded\") !== \"true\");\r\n        });\r\n\r\n        // nav-sub remove click elsewhere\r\n        $(document).on('click', function(event) {\r\n          if (!$(event.target).closest(_).length && _.hasClass('active-nav')) {\r\n            _.removeClass('active-nav')\r\n              .find(\".nav-toggle\").attr(\"aria-expanded\", \"false\");\r\n          }\r\n        });\r\n\r\n        _.on(\"focusout\", function(event) {\r\n          setTimeout(function() {\r\n            var hasFocus = !! (_.find(':focus').length > 0);\r\n            if (! hasFocus && _.hasClass('active-nav') && !$(event.target).is(\".nav-toggle\")) {\r\n              _.removeClass('active-nav')\r\n                .find(\".nav-toggle\").attr(\"aria-expanded\", \"false\");\r\n            }\r\n          }, 10);\r\n        });\r\n\r\n      }\r\n\r\n    });\r\n  },\r\n\r\n  // Search & Schools - Canvas\r\n  // --------------------------------\r\n  canvasMenus_settings () {\r\n\r\n    const canvasMenus_container = $header.find('.canvas-container-wrapper');\r\n\r\n    // Cavans Element Settings    \r\n    $header.find('.popular--searches .fsNavLevel1').columns({\r\n      columns: 2\r\n    });\r\n\r\n    $header.find('.desktop--schools--tabs .fsNavigation .fsNavLevel1').columns({\r\n      columns: 3\r\n    });\r\n\r\n    // Moving Canvas Container\r\n    canvasMenus_container.insertBefore($header);\r\n\r\n    // DOM Selectors\r\n    const containerBTN = $('.toggle-container-btn');\r\n    const canvasMenus = $('.canvas-menu');\r\n\r\n    containerBTN.each(function() {\r\n\r\n      const thisBTN_container = $(this);\r\n      const trigger_btn = thisBTN_container.find('.trigger-btn');\r\n\r\n      // vars\r\n      const searchBTN_class = thisBTN_container.hasClass('toggle-search-container');\r\n      const schoolsBTN_class = thisBTN_container.hasClass('toggle-schools-container');\r\n      const translateBTN_class = thisBTN_container.hasClass('toggle-translate-container');\r\n\r\n      trigger_btn.on('click', function(){\r\n\r\n        if ( searchBTN_class ) {\r\n\r\n          config_vars_$body.addClass('canvas-search-active canvas-visible');\r\n          config_vars_$body.removeClass('canvas-translate-active canvas-schools-active');\r\n\r\n        } else if ( schoolsBTN_class ) {\r\n\r\n          config_vars_$body.toggleClass('canvas-schools-active canvas-visible');\r\n          config_vars_$body.removeClass('canvas-translate-active canvas-search-active');\r\n\r\n        } else if ( translateBTN_class ){\r\n          config_vars_$body.addClass('canvas-translate-active canvas-visible');\r\n          config_vars_$body.removeClass('canvas-search-active canvas-schools-active');\r\n        }\r\n        \r\n      });\r\n\r\n      trigger_btn.on('keypress', function(e){\r\n\r\n        if ( e.which == 13 ){\r\n\r\n          setTimeout(function() {\r\n            canvasMenus.find(':focusable').eq(0).focus();\r\n          }, 600);\r\n\r\n        } \r\n\r\n      });\r\n\r\n      // Closing on document\r\n      $(document).on('click', function(event) {\r\n        if (!$(event.target).closest('.canvas-menu, .trigger-btn').length) {\r\n          config_vars_$body.removeClass('canvas-schools-active canvas-search-active canvas-translate-active canvas-visible');\r\n        }\r\n      });\r\n\r\n      // trapFocus for canvas menus\r\n      // ----------------------------\r\n      const search_trigger = $('.toggle-search-container button');\r\n      const schools_trigger = $('.toggle-schools-container button');\r\n      const translate_trigger = $('.toggle-translate-container button');\r\n\r\n      trapFocus(document.querySelector('.search-canvas-menu'), function() {\r\n        // what runs if they hit \"esc\" and leave the menu\r\n        config_vars_$body.removeClass('canvas-search-active canvas-visible');\r\n        search_trigger.focus();\r\n      });\r\n\r\n      trapFocus(document.querySelector('.schools-canvas-menu'), function() {\r\n        // what runs if they hit \"esc\" and leave the menu\r\n        config_vars_$body.removeClass('canvas-schools-active canvas-visible');\r\n        schools_trigger.focus();\r\n      });\r\n\r\n      trapFocus(document.querySelector('.translate-canvas-menu'), function() {\r\n        // what runs if they hit \"esc\" and leave the menu\r\n        config_vars_$body.removeClass('canvas-translate-active canvas-visible');\r\n        translate_trigger.focus();\r\n      });\r\n\r\n      // Canvas Menus\r\n      // --------------------\r\n      canvasMenus.each(function() {\r\n\r\n        const thisCanvas_menu = $(this);\r\n\r\n        // DOM Selectors\r\n        const closeBTN = thisCanvas_menu.find('.close-trigger-canvas');\r\n        const searchCanvas_class = thisCanvas_menu.hasClass('search-canvas-menu');\r\n        const schoolCanvas_class = thisCanvas_menu.hasClass('schools-canvas-menu');\r\n        const translateCanvas_class = thisCanvas_menu.hasClass('translate-canvas-menu');\r\n\r\n\r\n        // closing everything\r\n        closeBTN.on('click', function() {\r\n          config_vars_$body.removeClass(\r\n            'canvas-schools-active canvas-search-active canvas-translate-active canvas-visible  drawer-is-active'\r\n          );\r\n        });\r\n\r\n        // focusing on 'Enter' key\r\n        closeBTN.on('keypress', function(e) {\r\n\r\n          if ( e.which == 13 ){\r\n\r\n            if ( searchCanvas_class ) {\r\n  \r\n              setTimeout(function(){\r\n                search_trigger.focus();\r\n              }, 500);\r\n  \r\n            } else if ( schoolCanvas_class ) {\r\n  \r\n              setTimeout(function(){\r\n                schools_trigger.focus();\r\n              }, 500);\r\n  \r\n            } else if ( translateCanvas_class ) {\r\n  \r\n              setTimeout(function(){\r\n                translate_trigger.focus();\r\n              }, 500);\r\n  \r\n            }\r\n    \r\n          } \r\n\r\n        });\r\n\r\n      }); // end canvas Each\r\n\r\n    }); // end Container BTN each\r\n\r\n  },\r\n\r\n  // Schools Canvas Position - Mobile\r\n  // ----------------------------\r\n  schoolsCanvas_positionMobile () {\r\n\r\n    $window.on(\"load resize\", debounce(function() {\r\n\r\n      const winWidth = $window.width();\r\n      const schoolsCanvas = config_vars_$body.find('.schools-canvas-menu');\r\n      const hasAccountBar = config_vars_$body.hasClass('fsAccountBarVisible');\r\n      const headerHolder_wrapper = $header.find('.header--holder').outerHeight(true);\r\n\r\n      let height_position = headerHolder_wrapper;\r\n\r\n      if ( winWidth < 1200 ) {\r\n\r\n        if (hasAccountBar){\r\n          height_position += 45;\r\n        }\r\n\r\n        schoolsCanvas.css({\r\n          height: `calc(100vh - ${height_position}px)`,\r\n          top: `${height_position}px`\r\n        });\r\n        \r\n\r\n      } else{\r\n        schoolsCanvas.removeAttr('style');\r\n      }\r\n\r\n      \r\n    }, 200));\r\n\r\n    $window.trigger(\"resize\");\r\n\r\n  },\r\n\r\n  // Mobile Main Functionality\r\n  // =================================\r\n  navFunctionality() {\r\n\r\n    const el = $('.mobile--main--nav li');\r\n\r\n    el.each(function(i) {\r\n      const _ = $(this);\r\n\r\n      const $sectiontitle = _.find(' > a '),\r\n      buttonText = $sectiontitle.text();\r\n\r\n      if (_.find('> .fsNavPageInfo').length) {\r\n\r\n        _.addClass('has-expander');\r\n        const fsNavPageInfo = _.find('> .fsNavPageInfo');\r\n        $('<button aria-expanded=\"false\" class=\"expander-btn\"><span> toggle '+ buttonText +' section </span></button>').insertBefore(fsNavPageInfo);\r\n\r\n      }\r\n\r\n      if (_.hasClass('fsNavCurrentPageAncestor') || _.hasClass('fsNavCurrentPage')) {\r\n        _.addClass('expanded');\r\n      }\r\n\r\n      if (_.hasClass('expanded')) {\r\n        _.find('> .fsNavPageInfo > ul').show();\r\n        _.find('> .expander-btn').attr('aria-expanded', 'true');\r\n      }\r\n\r\n    });\r\n\r\n    $('.expander-btn').click(function(e) {\r\n      $(this).closest('li').toggleClass('expanded');\r\n      $(this).closest('li').find('> div > ul').slideToggle(400);\r\n\r\n      const $sectiontitle = $(this).closest('li').find('> a');\r\n      const buttonText = $sectiontitle.text();\r\n\r\n      if ($(this).closest('li').hasClass('expanded')) {\r\n        $(this).attr('aria-expanded', 'true');\r\n      } else {\r\n        $(this).attr('aria-expanded', 'false');\r\n      }\r\n\r\n      e.preventDefault();\r\n\r\n    });\r\n\r\n  },\r\n\r\n  navExpanders: function() {\r\n\r\n    var el = $('.nav-sub li');\r\n\r\n    el.each(function() {\r\n      var _ = $(this);\r\n\r\n      if (_.find('> .fsNavPageInfo').length) {\r\n        _.addClass('has-expander');\r\n        _.find('> a').append('<button class=\"expander\">expand this section</button>');\r\n      }\r\n      if (_.hasClass('fsNavCurrentPageAncestor') || _.hasClass('fsNavCurrentPage')) {\r\n        _.addClass('expanded');\r\n      }\r\n      if (_.hasClass('expanded')) {\r\n        _.find('> .fsNavPageInfo > ul').show();\r\n      }\r\n    });\r\n\r\n    $('.nav-sub .expander').click(function(e) {\r\n      $(this).closest('li').toggleClass('expanded');\r\n      $(this).closest('li').find('> div > ul').slideToggle(400);\r\n      e.preventDefault();\r\n    });\r\n  },\r\n\r\n  // ========================\r\n  // nav settings\r\n\r\n  navigationsSettings () {\r\n\r\n    const $mobileNavSub = $('.nav-sub.mobile-nav-sub'),\r\n          $horizontalNav = $('.horizontal-nav'),\r\n          $bread = $('.fsBreadcrumb');\r\n          // $mainNav = $('.fsHeader').find('.nav-main .fsNavLevel1');\r\n          // $mainNav_titleText = $mainNav.find('> li[class*=\"fsNavCurrentPage\"] > a').text(),\r\n          // $breadCrumbLocation = $bread.find('ul > li[aria-current*=\"location\"]').text();\r\n\r\n    $horizontalNav.insertBefore('#fsPageBodyWrapper');\r\n    $mobileNavSub.insertBefore($horizontalNav);\r\n    $bread.insertBefore('#fsPageBody');\r\n\r\n    if ($horizontalNav.find('nav ul li').length !== 0) {\r\n      $horizontalNav.removeClass('horizontal-nav-empty');\r\n      config_vars_$body.removeClass('no-horizontal-nav');\r\n    } else {\r\n      $horizontalNav.addClass('horizontal-nav-empty');\r\n      config_vars_$body.addClass('no-horizontal-nav');\r\n    }\r\n\r\n    if ( $bread.find('nav ul li').length !== 0 ) {\r\n      // $('<li class=\"to-home\"><a href=\"/\">Home</a><span aria-hidden=\"true\" class=\"fsNavBreadcrumbSeperator\"></span></li>').prependTo($bread.find(\"ul\"));\r\n      $bread.removeClass('empty-bread');\r\n    } else {\r\n      $bread.addClass('empty-bread');\r\n    }\r\n\r\n  },\r\n\r\n  // DoubleTap\r\n  // =======================\r\n  doubleTapNavs () {\r\n    const isTouch = ('ontouchstart' in document.documentElement);\r\n\r\n    if (isTouch) {\r\n      $('html').addClass('touch-device');\r\n    } else {\r\n      $('html').addClass('no-touch-device');\r\n    }\r\n\r\n    const $html = $('html');\r\n\r\n    // Function to detect Safari browser\r\n    function isSafari() {\r\n      const ua = navigator.userAgent.toLowerCase();\r\n      return ua.includes('safari') && !ua.includes('chrome');\r\n    }\r\n\r\n    if ($html.hasClass('touch-device')) {\r\n      if (isSafari()) {\r\n        // Apply double-tap functionality specifically for Safari browsers\r\n        $('.nav-main .fsNavLevel1 > li.fsNavParentPage > a').doubleTapToGo();\r\n\r\n      } else {\r\n        // Apply double-tap functionality for other touch devices\r\n        $('.nav-main .fsNavLevel1 > li.fsNavParentPage').doubleTapToGo();\r\n      }\r\n    }\r\n  },\r\n\r\n  // Custom Search Settings\r\n  // ----------------------------\r\n  customSearchSettings () {\r\n\r\n    // Search Settings\r\n    // Desktop & Mobile\r\n    $('.custom--search').each(function() {\r\n\r\n      const thisSearch = $(this);\r\n      const searchField = thisSearch.find('.fsStyleSearchField');\r\n      const searchClear = thisSearch.find('.fsButtonClear');\r\n\r\n      searchClear.on('keypress', function(e) {\r\n        if(e.which == \"13\") {\r\n          searchField.focus();\r\n        }\r\n      });\r\n\r\n    });\r\n\r\n  },\r\n\r\n  // Main Hero\r\n  // ------------------------\r\n  heroBanner () {\r\n    const _hero = $('.hero-banner');\r\n\r\n    if (_hero.length && config_vars_notComposeMode) {\r\n      config_vars_$body.addClass('hasHero');\r\n    } else {\r\n      config_vars_$body.addClass('noHero');\r\n    }\r\n\r\n    _hero.each(function () {\r\n      const thisHero = $(this);\r\n      thisHero.insertAfter('.fsHeader');\r\n\r\n      thisHero.find(\".fsResource\").each(function () {\r\n        $(this).attr('role', 'generic');\r\n\r\n        if ($(this).hasClass(\"fsResourceTypeImage\")) {\r\n          const imgResource = $(this);\r\n          const heroImg = imgResource.find('img'),\r\n                image_title = imgResource.find('.fsTitle:not(.fsResourceName)'),\r\n                image_caption = imgResource.find('figcaption'),\r\n                pictureTag = imgResource.find('picture');\r\n\r\n          moveResourceImage(heroImg, pictureTag);\r\n\r\n          if (image_title.length && !image_caption.length) {\r\n            imgResource.append('<figcaption></figcaption>');\r\n            image_title.prependTo(imgResource.find('figcaption'));\r\n          }\r\n\r\n        } else if ($(this).hasClass(\"fsResourceTypeVideo\")) {\r\n          const videoResource = $(this);\r\n          const video = videoResource.find(\"video\"),\r\n                video_title = videoResource.find('.fsTitle:not(.fsResourceName)'),\r\n                caption_video = videoResource.find('.fsDescription');\r\n\r\n          videoResource.wrapInner('<figure></figure>');\r\n\r\n          if (video_title.length && caption_video.length) {\r\n            video_title.prependTo(caption_video);\r\n          } else if (video_title.length && !caption_video.length) {\r\n            videoResource.append('<div class=\"fsDescription\"></div>');\r\n            videoResource.find('.fsTitle:not(.fsResourceName)').prependTo(videoResource.find('.fsDescription'));\r\n          }\r\n\r\n          video.wrap('<div class=\"video-wrapper\"></div>');\r\n        }\r\n      });\r\n\r\n      thisHero.find(\".fsResource\").each(function () {\r\n        $(this).find('figcaption').addClass('commonClass');\r\n        $(this).find('.fsDescription').addClass('commonClass');\r\n      });\r\n\r\n      if (thisHero.hasClass('fsSlideshow')) {\r\n        const checkSlideshow = setInterval(function () {\r\n          if (thisHero.find('> .fsElementContent .fsElementSlideshow.slick-initialized').length) {\r\n            clearInterval(checkSlideshow);\r\n\r\n            const arrows = thisHero.find(' > .fsElementContent .slick-arrow');\r\n            const playPause = thisHero.find('> .fsElementContent .fsElementSlideshowControls');\r\n            const elementSlideshow = thisHero.find('> .fsElementContent .fsElementSlideshow');\r\n            arrows.add(playPause).appendTo(elementSlideshow).wrapAll('<div class=\"holder-controls\"></div>');\r\n\r\n            const holderControls = thisHero.find('.holder-controls');\r\n\r\n            thisHero.find('.fsElementSlideshow').slick('slickSetOption', {\r\n              autoplaySpeed: 5000,\r\n              pauseOnHover: false,\r\n              pauseOnFocus: false,\r\n            }, true);\r\n\r\n            $window.on(\"load resize\", debounce(function () {\r\n              adjustStylesForSlide(thisHero.find(\".slick-slide.slick-current\"));\r\n            }, 200));\r\n\r\n            thisHero.find(\".fsElementSlideshow.slick-initialized\").on('beforeChange', function (event, slick, currentSlide, nextSlide) {\r\n              adjustStylesForSlide($(slick.$slides[nextSlide]));\r\n              startProgressBar(); // restart progress on slide change\r\n            });\r\n\r\n            thisHero.find(\".fsElementSlideshow.slick-initialized\").on('afterChange', function (event, slick, currentSlide) {\r\n              adjustStylesForSlide($(slick.$slides[currentSlide]));\r\n            });\r\n\r\n            function adjustStylesForSlide($currentSlide) {\r\n              const hasCaption = $currentSlide.find(\".commonClass\").length > 0;\r\n              let mobileFinalHeight;\r\n\r\n              if (hasCaption) {\r\n                const resourceCaptionHeight = $currentSlide.find(\".commonClass\").outerHeight();\r\n                const resourceHeight = $currentSlide.outerHeight();\r\n                mobileFinalHeight = resourceHeight - resourceCaptionHeight;\r\n\r\n                if ($window.width() < 1200) {\r\n                  holderControls.css({\r\n                    top: `${mobileFinalHeight - 72}px`,\r\n                    bottom: 'auto',\r\n                  });\r\n                } else {\r\n                  holderControls.removeAttr('style');\r\n                }\r\n              } else {\r\n                holderControls.removeAttr('style');\r\n              }\r\n            }\r\n\r\n            // progress bar setup\r\n            elementSlideshow.prepend('<div class=\"progress-bar-container\"><div class=\"progress-bar\"></div></div>');\r\n\r\n            let progressBarDuration = 5000; // fallback\r\n            let progressTimer;\r\n            let progressStartTime = 0;\r\n            let progressElapsed = 0;\r\n            let isPaused = false;\r\n\r\n            const $progressBar = thisHero.find('.progress-bar');\r\n            const slickInstance = thisHero.find(\".fsElementSlideshow.slick-initialized\").slick('getSlick');\r\n\r\n            if (slickInstance && slickInstance.options && slickInstance.options.autoplaySpeed) {\r\n              // Set progress bar duration to 500ms shorter than autoplay\r\n              progressBarDuration = slickInstance.options.autoplaySpeed - 500;\r\n            }\r\n\r\n            function startProgressBar() {\r\n              clearTimeout(progressTimer);\r\n              progressElapsed = 0;\r\n              isPaused = false;\r\n              runProgressBar();\r\n            }\r\n\r\n            function runProgressBar() {\r\n              progressStartTime = Date.now();\r\n              $progressBar.css({ width: '0%', transition: 'none' });\r\n              void $progressBar[0].offsetWidth;\r\n\r\n              $progressBar.css({\r\n                width: '100%',\r\n                transition: `width ${progressBarDuration}ms linear`\r\n              });\r\n\r\n              progressTimer = setTimeout(() => {\r\n                $progressBar.css({ width: '0%' });\r\n              }, progressBarDuration);\r\n            }\r\n\r\n            function pauseProgressBar() {\r\n              if (isPaused) return;\r\n              isPaused = true;\r\n              clearTimeout(progressTimer);\r\n              progressElapsed += Date.now() - progressStartTime;\r\n              const currentWidth = (progressElapsed / progressBarDuration) * 100;\r\n              $progressBar.css({\r\n                width: `${currentWidth}%`,\r\n                transition: 'none'\r\n              });\r\n            }\r\n\r\n            function resumeProgressBar() {\r\n              if (!isPaused) return;\r\n              isPaused = false;\r\n              const remaining = progressBarDuration - progressElapsed;\r\n\r\n              progressStartTime = Date.now();\r\n              $progressBar.css({\r\n                width: '100%',\r\n                transition: `width ${remaining}ms linear`\r\n              });\r\n\r\n              progressTimer = setTimeout(() => {\r\n                $progressBar.css({ width: '0%' });\r\n              }, remaining);\r\n            }\r\n\r\n            const $pauseBtn = thisHero.find('.fsSlideshowPause');\r\n            const $playBtn = thisHero.find('.fsSlideshowPlay');\r\n\r\n            $pauseBtn.on('click', pauseProgressBar);\r\n            $playBtn.on('click', resumeProgressBar);\r\n\r\n            startProgressBar(); // Initial run\r\n            thisHero.find(\".fsElementSlideshow.slick-initialized\").slick(\"slickGoTo\", 0);\r\n            $window.trigger(\"resize\");\r\n\r\n          }\r\n        }, 200);\r\n      }\r\n\r\n      if (thisHero.hasClass('fsSingleItem') && !thisHero.find('.commonClass').length) {\r\n        thisHero.addClass('no-caption');\r\n      } else {\r\n        thisHero.addClass('has-caption');\r\n      }\r\n\r\n      const $playPause = '<div class=\"fsElementSlideshowControls custom\">' +\r\n        '<button class=\"customPP pause fsSlideshowPause\" value=\"pause\" type=\"button\">Pause</button>' +\r\n        '<button class=\"customPP play fsSlideshowPlay\" value=\"play\" type=\"button\">Play</button>' +\r\n        '</div>';\r\n\r\n      if (thisHero.hasClass('fsSingleItem') && thisHero.find('.fsResourceTypeVideo').length) {\r\n        thisHero.addClass('single-video');\r\n        thisHero.find(' > .fsElementContent ').append($playPause);\r\n      }\r\n\r\n      thisHero.find('.pause').click(function () {\r\n        thisHero.find('video').get(0).pause();\r\n        thisHero.find('.customPP.play').addClass('visible').removeClass('hidden');\r\n        $(this).addClass('hidden').removeClass('visible');\r\n      });\r\n\r\n      thisHero.find('.play').click(function () {\r\n        thisHero.find('video').get(0).play();\r\n        thisHero.find('.customPP.pause').addClass('visible').removeClass('hidden');\r\n        $(this).addClass('hidden').removeClass('visible');\r\n      });\r\n    });\r\n  }\r\n\r\n\r\n\r\n}; //end NAVIGATION\n;// ./js/include/default-styles.js\n// ================================\r\n// DEFAULT STYLE \r\n// ================================\r\n\r\n\r\n\r\n\r\nconst DEFAULT_STYLES = {\r\n\r\n  init () {\r\n    if ($tableStyle.length) {\r\n      this.tableStyle();\r\n    }\r\n\r\n\t\tif(config_vars_notComposeMode) {\r\n\t\t\tthis.homepageNewsroom();\r\n\t\t\tthis.factsPanel();\r\n\t\t\tthis.factsPanel2();\r\n\t\t}\r\n  },\r\n\r\n  tableStyle () {\r\n  \t// update $tableStyle variable definition in js/include/config-vars.js\r\n\r\n    function tableStyleWrap() {\r\n\t    $tableStyle.each(function() {\r\n\t      if(!$(this).parent().hasClass(\"table-overflow\")) {\r\n\t        $(this).wrap('<div class=\"table-overflow\" tabindex=\"0\" />');\r\n\t      }\r\n\t    });\r\n    };\r\n\r\n  \tif (config_vars_notComposeMode) {\r\n  \t\ttableStyleWrap();\r\n\t  }\r\n\r\n\t  // wrap & unwrap table when toggling compose mode on/off\r\n    FS.events.onComposeModeChanged(function(enabled) { \r\n      if(enabled === false) {\r\n      \ttableStyleWrap();\r\n      } else if(enabled === true) {\r\n\t\t    $tableStyle.each(function() {\r\n\t\t      if($(this).parent().hasClass(\"table-overflow\")) {\r\n\t\t        $(this).unwrap();\r\n\t\t      }\r\n\t\t    });\r\n      }\r\n    });\r\n  },\r\n\r\n\thomepageNewsroom () {\r\n\t\tconst newsroom = $('.hp-newsroom');\r\n\r\n\t\tnewsroom.each(function() {\r\n\t\t\tconst area = $(this);\r\n\t\t\tconst areaHeader = area.find('> header');\r\n\t\t\tconst areaFooter = area.find('> footer');\r\n\t\t\tconst featuredStoriesSlider = area.find('.featured-stories-slider');\r\n\t\t\tconst newsSlider = area.find('.news-slider');\r\n\r\n\t\t\tconst arrowsContainer1 = $('<div class=\"arrows-holder\"></div>');\r\n\t\t\tareaFooter.append(arrowsContainer1);\r\n\t\t\tconst arrowsContainerTarget1 = areaFooter.find('.arrows-holder');\r\n\r\n\t\t\tareaFooter.appendTo(areaHeader);\r\n\r\n\t\t\tconst allArticles = area.find('article');\r\n      \r\n      allArticles.each(function(){\r\n        const thisArt = $(this);\r\n\t\t\t\tconst thumbnail = thisArt.find('.fsThumbnail');\r\n        const title = thisArt.find('.fsTitle');\r\n        const summary = thisArt.find('.fsSummary');\r\n        const readMoreLink = thisArt.find('.fsReadMoreLink');\r\n        const tags = thisArt.find('.fsTags');\r\n\r\n\t\t\t\tthisArt.children().not(thumbnail).wrapAll('<div class=\"art-content\"></div>');\r\n\r\n\t\t\t\t// const boxImage = thumbnail.find(\"img\");\r\n\t\t\t\t// const boxImageWrapper = thumbnail;\r\n\t\t\t\t// moveResourceImage(boxImage, boxImageWrapper);\r\n      });\r\n\r\n\t\t\t// Featured Stories Slider\r\n\t\t\tif ( !featuredStoriesSlider.find('.fsListItems').hasClass('slick-initialized') ) {\r\n\t\t\t\tfeaturedStoriesSlider.find('.fsListItems').slick({\r\n\t\t\t\t\tslidesToShow: 1,\r\n\t\t\t\t\tslidesToScroll: 1,\r\n\t\t\t\t\tarrows: true,\r\n\t\t\t\t\tdots: false,\r\n\t\t\t\t\tmobileFirst: true,\r\n\t\t\t\t\tadaptiveHeight: true,\r\n\t\t\t\t\tspeed: 400,\r\n\t\t\t\t\tappendArrows: arrowsContainerTarget1,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// News Slider\r\n\t\t\tconst arrowsContainer2 = $('<div class=\"arrows-holder\"></div>');\r\n\t\t\tnewsSlider.prepend(arrowsContainer2);\r\n\t\t\tconst arrowsContainerTarget2 = newsSlider.find('.arrows-holder');\r\n\r\n\t\t\tif ( !newsSlider.find('.fsListItems').hasClass('slick-initialized') ) {\r\n\t\t\t\tnewsSlider.find('.fsListItems').slick({\r\n\t\t\t\t\tslidesToShow: 1,\r\n\t\t\t\t\tslidesToScroll: 1,\r\n\t\t\t\t\tarrows: true,\r\n\t\t\t\t\tdots: false,\r\n\t\t\t\t\tmobileFirst: true,\r\n\t\t\t\t\tadaptiveHeight: true,\r\n\t\t\t\t\tspeed: 400,\r\n\t\t\t\t\tappendArrows: arrowsContainerTarget2,\r\n\t\t\t\t\tresponsive: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tbreakpoint: 800,\r\n\t\t\t\t\t\t\tsettings: {\r\n\t\t\t\t\t\t\t\tslidesToShow: 2\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tbreakpoint: 1200,\r\n\t\t\t\t\t\t\tsettings: {\r\n\t\t\t\t\t\t\t\tslidesToShow: 3\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tbreakpoint: 1400,\r\n\t\t\t\t\t\t\tsettings: {\r\n\t\t\t\t\t\t\t\tslidesToShow: 4\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tbreakpoint: 1800,\r\n\t\t\t\t\t\t\tsettings: {\r\n\t\t\t\t\t\t\t\tslidesToShow: 5\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t]\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\tfactsPanel () {\r\n\t\tconst factsPanel = $('.facts-container');\r\n\r\n\t\tfactsPanel.each(function() {\r\n\t\t\tconst area = $(this);\r\n\t\t\tconst factsSlider = area.find('.facts-slider');\r\n\r\n\t\t\tconst customDotsContainer = $('<div class=\"custom-dots-container\"></div>');\r\n\t\t\tcustomDotsContainer.appendTo(area.find('> .fsElementContent'));\r\n\r\n\t\t\tconst arrowsContainer = $('<div class=\"arrows-holder\"></div>');\r\n\t\t\tfactsSlider.append(arrowsContainer);\r\n\t\t\tconst arrowsContainerTarget = factsSlider.find('.arrows-holder');\r\n\r\n\t\t\tif ( !factsSlider.find('> .fsElementContent').hasClass('slick-initialized') ) {\r\n\t\t\t\tfactsSlider.find('> .fsElementContent').slick({\r\n\t\t\t\t\tslidesToShow: 1,\r\n\t\t\t\t\tslidesToScroll: 1,\r\n\t\t\t\t\tarrows: true,\r\n\t\t\t\t\tdots: true,\r\n\t\t\t\t\tfade: true,\r\n\t\t\t\t\tmobileFirst: true,\r\n\t\t\t\t\tadaptiveHeight: true,\r\n\t\t\t\t\tspeed: 400,\r\n\t\t\t\t\tappendArrows: arrowsContainerTarget,\r\n\t\t\t\t\tappendDots: customDotsContainer,\r\n\t\t\t\t\tcustomPaging: function(slider, i) {\r\n\t\t\t\t\t\tconst $slide = $(slider.$slides[i]);\r\n\t\t\t\t\t\tconst title = $slide.find('> header h2.fsElementTitle').text();\r\n\r\n\t\t\t\t\t\t// Vanilla JS\r\n\t\t\t\t\t\t// const iconClass = ($slide.attr('class') || '').split(' ').find(cls => cls.startsWith('icon-')) || '';\r\n\r\n\t\t\t\t\t\tlet iconClass = '';\r\n\t\t\t\t\t\tconst classList = ($slide.attr('class') || '').split(' ');\r\n\r\n\t\t\t\t\t\t$.each(classList, function(index, className) {\r\n\t\t\t\t\t\t\tif (className.indexOf('icon-') === 0) {\r\n\t\t\t\t\t\t\t\ticonClass = className;\r\n\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\treturn `<button type=\"button\" class=\"custom-dot ${iconClass}\"><span>${title}</span></button>`;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\tfactsPanel2 () {\r\n\t\tconst factsPanel = $('.facts-container-2');\r\n\r\n\t\tfactsPanel.each(function() {\r\n\t\t\tconst area = $(this);\r\n\t\t\tconst factsSlider = area.find('.facts-slider');\r\n\r\n\t\t\tconst arrowsContainer = $('<div class=\"arrows-holder\"></div>');\r\n\t\t\tfactsSlider.find('> header').append(arrowsContainer);\r\n\t\t\tconst arrowsContainerTarget = factsSlider.find('> header').find('.arrows-holder');\r\n\r\n\t\t\tif ( !factsSlider.find('> .fsElementContent').hasClass('slick-initialized') ) {\r\n\t\t\t\tfactsSlider.find('> .fsElementContent').slick({\r\n\t\t\t\t\tslidesToShow: 1,\r\n\t\t\t\t\tslidesToScroll: 1,\r\n\t\t\t\t\tarrows: true,\r\n\t\t\t\t\tdots: false,\r\n\t\t\t\t\tfade: false,\r\n\t\t\t\t\tmobileFirst: true,\r\n\t\t\t\t\tadaptiveHeight: true,\r\n\t\t\t\t\tspeed: 400,\r\n\t\t\t\t\tappendArrows: arrowsContainerTarget,\r\n\t\t\t\t\tresponsive: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tbreakpoint: 800,\r\n\t\t\t\t\t\t\tsettings: {\r\n\t\t\t\t\t\t\t\tslidesToShow: 2\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tbreakpoint: 1000,\r\n\t\t\t\t\t\t\tsettings: {\r\n\t\t\t\t\t\t\t\tslidesToShow: 3\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tbreakpoint: 1200,\r\n\t\t\t\t\t\t\tsettings: {\r\n\t\t\t\t\t\t\t\tslidesToShow: 5\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t]\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n}; //end DEFAULT_STYLES\r\n\n;// ./js/internal/move-hero-element.js\n// ======================================================\r\n// heroElement - Move a Resource element from the content\r\n// area into the header.\r\n// ======================================================\r\n//\r\n// Add to enhancements.js\r\n//   import {\r\n//     heroElement\r\n//   } from '../internal/move-hero-element';\r\n//\r\n// Examples\r\n// --------\r\n//\r\n// Default: an element with the hero class in the page content will be moved to the last element in the fsHeader element\r\n// heroElement() ;\r\n//\r\n// Callback: example of calling another custom function that updates the items in hero after it has been moved\r\n// heroElement({\r\n//   callback: function(){ updateHeroLayout(); }\r\n// }\r\n//\r\n// Insert after: example of calling the function with another place to put the hero in the header\r\n// heroElement({\r\n//    insertAfter: $('.fsHeader .nav-sub');\r\n// }\r\n\r\n\r\n\r\nfunction heroElement(options) {\r\n\r\n  // configure default options\r\n  const defaults = {\r\n    hero: $hero,\r\n    insertAfter: $('.fsHeader .fsBanner'),\r\n    beforeClass: \"has-hero\",\r\n    afterClass: \"hero-loaded\",\r\n    callback: function() {}\r\n  }\r\n\r\n  let settings = $.extend( {}, defaults, options );\r\n\r\n  function moveInteriorHero(settings) {\r\n\r\n    // check for existing hero on page\r\n    // data-hero attribute is added to help with Compose mode toggle\r\n    //   and prevent confusion with multiple elements having .hero class\r\n    if(!$('[data-hero]').length) {\r\n      $(settings.hero).eq(0).attr('data-hero', true);\r\n    }\r\n\r\n    // add the beforeClass to the body specified by beforeClass variable\r\n    $body.addClass(settings.beforeClass);\r\n\r\n    // move hero element to position specified by insertAfter variable\r\n    $('[data-hero]').insertAfter(settings.insertAfter);\r\n\r\n    // resize the hero \r\n    FS.util.updateDynamicImages( $('[data-hero]') );\r\n\r\n    // add the afterClass to the body specified by afterClass variable\r\n    $body.addClass(settings.afterClass);\r\n\r\n    // run the callback function\r\n    settings.callback.call(this);\r\n\r\n  } // moveInteriorHero\r\n\r\n  // if not in Compose mode and hero is found call moveInteriorHero\r\n  if(notComposeMode && $(settings.hero).length) {\r\n\r\n    moveInteriorHero(settings);\r\n\r\n  }\r\n\r\n  // this event occurs when toggling Compose mode\r\n  FS.events.onComposeModeChanged(function(enabled) {\r\n\r\n    if(enabled) {\r\n      //move into page area for editing when Compose mode is toggled on\r\n      // check for page layout\r\n      if($('.fsPageLayout > .fsDiv > .fsElement').length) {\r\n        // put in first column of a multi-column page layout\r\n        $('[data-hero]').insertBefore('.fsPageLayout > .fsDiv:eq(0) .fsElement:eq(0)');\r\n      } else {\r\n        // put in page content area for single column page layout\r\n        $('[data-hero]').insertBefore('.fsPageLayout > .fsDiv:eq(0)');\r\n      }\r\n    } else {\r\n      //move it back to the header when Compose mode is toggled off\r\n      moveInteriorHero(settings);\r\n    }\r\n    \r\n  });\r\n\r\n}; //heroElement\n;// ./js/include/enhancements.js\n// ================================\r\n// ENHANCEMENTS\r\n// ================================\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n__webpack_require__(644);\r\n__webpack_require__(534);\r\n\r\nconst ENHANCEMENTS = {\r\n\r\n  init () {\r\n  \r\n    this.mainPagefsLayout();\r\n\r\n    if(config_vars_notComposeMode) {\r\n      this.mainContentElements();\r\n      this.customDirectory();\r\n\r\n      this.customImageButtons();\r\n      this.interiorPanelAnimations();\r\n    }\r\n  }, \r\n\r\n  // Page Layout and Appearance\r\n  mainPagefsLayout() {\r\n    $('body:not(.home) .fsPageBodyWrapper .fsTwoColumnLayout:not(.fsElement):not(.fsLayout), body:not(.home) .fsPageBodyWrapper .fsThreeColumnLayout:not(.fsElement):not(.fsLayout)').each(function() {\r\n      $(this).addClass(\"fsLayout\");\r\n      $(this).wrap('<div class=\"fsDiv\" style=\"padding: 0px;\"></div>');\r\n      $(this).css({\r\n        'width': '100%',\r\n        'margin-left': '0px',\r\n        'margin-right': '0px'\r\n      });\r\n    });\r\n  },\r\n  // Page Layout and Appearance\r\n\r\n  mainContentElements() {\r\n    // Custom Callouts - Img move to Background\r\n\r\n    $('.card').each(function() {\r\n        const elementImage = $(this).find('> header img');\r\n        const imageDestination = $(this).find('> header');\r\n        moveResourceImage(elementImage, imageDestination);\r\n    });\r\n\r\n\r\n    const mainAreaPost = $('.fsPostElement.main-content-posts');\r\n    const art = mainAreaPost.find('article');\r\n    art.each(function(){\r\n        const thumbnail = $(this).find('.fsThumbnail').length;\r\n        if(!thumbnail)\r\n        {\r\n            $(this).addClass('no-thumbnail');\r\n        }\r\n    });\r\n\r\n    const qouteInterior = $('blockquote');\r\n    qouteInterior.each(function(){\r\n      const _ = $(this);\r\n\r\n      // color element\r\n      const className = _.find('span').attr('class');\r\n      _.addClass(className);\r\n    });\r\n\r\n    $(\".useful-links >.fsElementContent .fsNavLevel1\").columns({\r\n      columns: 2, \r\n      addWrapper: true,\r\n      wrapper: \"<div class='col-wrap' />\"\r\n    });\r\n\r\n    FS.events.onElementDialogShown('Calendar', function($dialog) {\r\n      const calendarLongElem = $(\"#\"+$dialog.attr(\"id\").split(\"_0_Dialog\")[0]);\r\n      if(calendarLongElem.hasClass(\"long-date\")) {\r\n        $dialog.addClass('long-date');\r\n      }\r\n    });\r\n\r\n    $(\".horizontal-nav\").each(function(){\r\n      const $nav = $(this);\r\n      const $header = $nav.find(\"header\");\r\n      const $button = $(\"<button type='button' aria-label='Expand this section'>\")\r\n          .html( $header.html() );\r\n      $header.replaceWith($button);\r\n      $nav.find(\".fsElementContent\").hide();\r\n      $button.on(\"click\", function(){\r\n          $nav.find(\".fsElementContent\").slideToggle();\r\n      });\r\n    });\r\n\r\n  },\r\n\r\n  customDirectory() {\r\n    $('.fsElement.fsConstituent.custom-directory').each(function(){\r\n      const area = $(this);\r\n\r\n      const labels = area.find('.fsFieldLabel');\r\n\r\n      labels.each(function() {\r\n        const span = $(this).find('span');\r\n        const input = $(this).find('input');\r\n\r\n        if (span.length && input.length) {\r\n          input.get(0).setAttribute('placeholder', span.text());\r\n        }\r\n      });\r\n\r\n      const label = area.find('.fsPaginationLabel');\r\n      const text = label.text();  \r\n      if (text.startsWith('showing')) {  \r\n          const newText = `<span class=\"first-word\">Showing</span>${text.slice('showing'.length)}`;\r\n          label.html(newText);  \r\n      }\r\n  \r\n      area.find('.fsConstituentItem').each(function(){\r\n        const item = $(this);\r\n\r\n        if (!item.hasClass('fsHasPhoto')) {\r\n          item.prepend('<div class=\"noPhoto\"></div>');\r\n        }\r\n        item.children().not('.fsPhoto').not('.noPhoto').wrapAll('<div class=\"inner-wrapper\"><div class=\"content-wrapper\"></div></div>');\r\n\r\n      });\r\n  \r\n      FS.events.onElementUpdated('constituent', function($element){\r\n        const label = $element.find('.fsPaginationLabel');\r\n        const text = label.text();  \r\n        if (text.startsWith('showing')) {  \r\n            const newText = `<span class=\"first-word\">Showing</span>${text.slice('showing'.length)}`;\r\n            label.html(newText);  \r\n        }\r\n        $element.find('.fsConstituentItem').each(function(){\r\n          const item = $(this);\r\n\r\n          if (!item.hasClass('fsHasPhoto')) {\r\n            item.prepend('<div class=\"noPhoto\"></div>');\r\n          }\r\n          item.children().not('.fsPhoto').not('.noPhoto').wrapAll('<div class=\"inner-wrapper\"><div class=\"content-wrapper\"></div></div>');\r\n\r\n        });\r\n      });\r\n\r\n      FS.events.onElementDialogShown('constituent', function($dialog) {\r\n        const constituentLongElem = $(\"#\"+$dialog.attr(\"id\").split(\"_0_Dialog\")[0]);\r\n        if(constituentLongElem.hasClass(\"custom-directory\")) {\r\n          $dialog.addClass('custom-directory');\r\n        }\r\n      });\r\n\r\n  \r\n    });\r\n  },\r\n\r\n  customImageButtons() {\r\n    const customButton = $('.custom-image-button');\r\n\r\n    customButton.each(function(){\r\n      const box = $(this);\r\n      box.attr('tabindex', 0);\r\n      const boxHeader = box.find('>header');\r\n      const boxTitle = box.find('>header .fsElementTitle');\r\n      const boxFooter = box.find('>footer');\r\n      const boxImage = box.find(\"article img\");\r\n      const boxImageWrapper = box.find(\"article\");\r\n      moveResourceImage(boxImage, boxImageWrapper);\r\n      boxFooter.appendTo(boxHeader);\r\n      boxTitle.clone().prependTo(box).addClass('cloned-title');\r\n    });\r\n  },\r\n\r\n  interiorPanelAnimations() {\r\n\r\n    $('.full-width-left, .full-width-right, .full-width-logo')\r\n    .waypoint(function(direction) {\r\n      if (direction === 'down') {\r\n        $(this.element).addClass('is-in-view');\r\n\r\n      } else {\r\n        $(this.element).removeClass('is-in-view');\r\n      }\r\n    }, {\r\n      offset:  '70%'\r\n    });\r\n\r\n  },\r\n\r\n}; //end ENHANCEMENTS\r\n\n;// ./js/include/home.js\n// ================================\r\n// HOMEPAGE \r\n// ================================\r\n\r\n__webpack_require__(534);\r\n\r\n\r\n\r\n\r\n\r\nconst HOME = {\r\n\r\n  init () {\r\n    if(config_vars_notComposeMode) {\r\n      this.homepageStickyImage();\r\n\r\n      this.homepagePrograms();\r\n      this.homepageTestimonials();\r\n      this.homepagePanelAnimations();\r\n    }\r\n  }, \r\n\r\n  homepageStickyImage() {\r\n    const homeImage = $('.homepage-sticky-image');\r\n    const homeImageDestination = $('.home #fsPageWrapper');\r\n\r\n    homeImage.each(function(){\r\n      const box = $(this);\r\n      const boxImage = box.find('article img');\r\n      moveResourceImage(boxImage, box);\r\n    });\r\n\r\n    homeImage.prependTo(homeImageDestination);\r\n  },\r\n\r\n  homepagePrograms () {\r\n    const programsPanel = $('.homepage-programs');\r\n\r\n    programsPanel.each(function(){\r\n      const area = $(this);\r\n      const areaHeader = area.find(\">header\");\r\n      const areaSlider = area.find('>.fsElementContent');\r\n\r\n      areaHeader.append(`\r\n        <div class=\"desktop-controls\">\r\n          <button class=\"cs-arrow cs-prev\">Prev</button>\r\n          <button class=\"cs-arrow cs-next\">Next</button>\r\n        </div>\r\n      `);\r\n\r\n      area.find('.fsResourceElement.program-box').each(function(){\r\n        const box = $(this);\r\n        const boxHeader = box.find('>header');\r\n        const boxFooter = box.find('>footer');\r\n        const boxImage = box.find(\"article img\");\r\n        const boxImageWrapper = box.find(\"article\");\r\n        moveResourceImage(boxImage, boxImageWrapper);\r\n        boxFooter.appendTo(boxHeader);\r\n      });\r\n      \r\n      areaSlider.slick({\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1,\r\n        dots: true,\r\n        arrows: true,\r\n        adaptiveHeight: true,\r\n        mobileFirst: true,\r\n        infinite: true,\r\n        responsive: [\r\n          {\r\n            breakpoint: 600,\r\n            settings: {\r\n              slidesToShow: 2,\r\n              slidesToScroll: 1\r\n            }\r\n          },\r\n          {\r\n            breakpoint: 1300,\r\n            settings: {\r\n              slidesToShow: 3,\r\n              slidesToScroll: 1\r\n            }\r\n          },\r\n        ]\r\n      });\r\n\r\n      area.find('.desktop-controls .cs-prev').on('click', function(){\r\n        areaSlider.slick(\"slickPrev\");\r\n      });\r\n\r\n      area.find('.desktop-controls .cs-next').on('click', function(){\r\n        areaSlider.slick(\"slickNext\");\r\n      });\r\n\r\n    });\r\n  },\r\n\r\n  homepageTestimonials() {\r\n    const testimonialsArea = $('.homepage-testimonials');\r\n\r\n    testimonialsArea.each(function(){\r\n      const area = $(this);\r\n      const areaHeader = area.find(\">header\");\r\n      const areaSlider = area.find('>.fsElementContent');\r\n\r\n      areaHeader.wrapInner('<div class=\"header-wrapper\"></div>');\r\n      areaHeader.append(`\r\n        <div class=\"desktop-controls\">\r\n          <button class=\"cs-arrow cs-prev\">Prev</button>\r\n          <button class=\"cs-arrow cs-next\">Next</button>\r\n        </div>\r\n      `);\r\n\r\n      area.find('.fsResourceElement.testimonial-box').each(function(){\r\n        const box = $(this);\r\n        const boxHeader = box.find('>header');\r\n        const boxFooter = box.find('>footer');\r\n\r\n        if(boxFooter.length){\r\n          box.addClass('has-info');\r\n        }\r\n        boxFooter.prependTo(boxHeader);\r\n        boxHeader.append('<button class=\"open-modal\">Open video</button>');\r\n\r\n        const boxImage = box.find(\"article.fsResourceTypeImage img\");\r\n        const boxImageWrapper = box.find(\"article.fsResourceTypeImage\");\r\n        moveResourceImage(boxImage, boxImageWrapper);\r\n\r\n        // handle boxes with video \r\n        const secondVideo = box.find(\"article:nth-child(2)\");\r\n\r\n        if(secondVideo.length) {\r\n          box.addClass('has-video');\r\n        }\r\n\r\n        // handle dash video type\r\n        box.find('article').each(function() {\r\n          if($(this).hasClass(\"fsResourceDashVideo\")) {\r\n            $(this).find(\"video\").append('<source src=\"'+$(this).find(\"video\").attr(\"data-default-url\")+'\"></source>');\r\n          }\r\n        });\r\n\r\n        box.find('.open-modal').on('click', function(){\r\n          const dialog = FS.getInternalNS('dialogs').Dialog({\r\n            'closeOnClick': true,\r\n            'dialogClass': \"fsElementDialog testimonials-video-dialog\",\r\n            'id': \"testimonials-video-\",\r\n            'removeOnClose': true\r\n          });\r\n  \r\n          dialog.setContent(secondVideo);\r\n          dialog.open($(this));\r\n\r\n          setTimeout(function () {\r\n            FS.util.updateDynamicImages($('#testimonials-video-Dialog')); \r\n          }, 500);\r\n          \r\n        });\r\n\r\n      });\r\n\r\n      areaSlider.slick({\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1,\r\n        dots: true,\r\n        arrows: true,\r\n        adaptiveHeight: true,\r\n        mobileFirst: true,\r\n        infinite: true,\r\n        customPaging : function(slider, i) {\r\n          let imageRef = $(slider.$slides[i]).find('article:nth-child(1) img').attr('src');\r\n          return `<button type=\"button\" class=\"slider-dot\" style=\"background-image:url('${imageRef}');\"><span>${i}</span></button>`;\r\n        },\r\n        responsive: [\r\n          {\r\n            breakpoint: 800,\r\n            settings: {\r\n              slidesToShow: 2,\r\n              slidesToScroll: 1\r\n            }\r\n          },\r\n          {\r\n            breakpoint: 1200,\r\n            settings: {\r\n              slidesToShow: 1,\r\n              slidesToScroll: 1\r\n            }\r\n          },\r\n        ]\r\n      });\r\n\r\n      area.find('.desktop-controls .cs-prev').on('click', function(){\r\n        areaSlider.slick(\"slickPrev\");\r\n      });\r\n\r\n      area.find('.desktop-controls .cs-next').on('click', function(){\r\n        areaSlider.slick(\"slickNext\");\r\n      });\r\n\r\n    });\r\n  },\r\n\r\n  homepagePanelAnimations() {\r\n\r\n    $('.homepage-programs, .homepage-testimonials, .hp-newsroom')\r\n    .waypoint(function(direction) {\r\n      if (direction === 'down') {\r\n        $(this.element).addClass('is-in-view');\r\n\r\n      } else {\r\n        $(this.element).removeClass('is-in-view');\r\n      }\r\n    }, {\r\n      offset:  '70%'\r\n    });\r\n\r\n  },\r\n\r\n}; //end HOME\n;// ./js/include/index.js\n// ===================================\r\n// FONT LOADER CODE\r\n// uncomment out section below for use\r\n// ===================================\r\n\r\n// require('../internal/font-loader');\r\n// // configure fonts to load from vendors\r\n// // check src/js/internal/font-loader.js for reference\r\n// WebFontConfig = {\r\n//  typekit: {\r\n//    id: 'xxxxxx'\r\n//  }\r\n// };\r\n\r\n\r\n// ===================================\r\n// IMPORT INCLUDE/ METHODS\r\n// ===================================\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst INITIATE_ALL = {\r\n\tinit () {\r\n\r\n\t\tif (notDraftMode) {\r\n\t\t\tACCESSIBILITY.init();\r\n\t\t}\r\n\r\n\t\tNAVIGATION.init();\r\n\r\n        DEFAULT_STYLES.init();\r\n\r\n        if (isHome) {\r\n            HOME.init();\r\n        }\r\n\r\n        ENHANCEMENTS.init();\r\n\r\n        if($calendarGrid.length) {\r\n            RESPONSIVE_CALENDAR_GRID.init();\r\n        }\r\n            \r\n        RESPONSIVE_SLIDESHOW_SUBTYPE.init();\r\n        \r\n\t}\r\n}\n\n//# sourceURL=webpack:///./js/include/index.js_+_12_modules?")},509:function(){eval("var keyCodeMap = {\r\n  48:\"0\", 49:\"1\", 50:\"2\", 51:\"3\", 52:\"4\", 53:\"5\", 54:\"6\", 55:\"7\", 56:\"8\", 57:\"9\", 59:\";\",\r\n  65:\"a\", 66:\"b\", 67:\"c\", 68:\"d\", 69:\"e\", 70:\"f\", 71:\"g\", 72:\"h\", 73:\"i\", 74:\"j\", 75:\"k\", 76:\"l\",\r\n  77:\"m\", 78:\"n\", 79:\"o\", 80:\"p\", 81:\"q\", 82:\"r\", 83:\"s\", 84:\"t\", 85:\"u\", 86:\"v\", 87:\"w\", 88:\"x\", 89:\"y\", 90:\"z\",\r\n  96:\"0\", 97:\"1\", 98:\"2\", 99:\"3\", 100:\"4\", 101:\"5\", 102:\"6\", 103:\"7\", 104:\"8\", 105:\"9\"\r\n}\r\n\r\n$.fn.accessibility_menu = function(options) {\r\n\r\n  //Defaults defined here. If not distinguished in function call, use these\r\n  var settings = $.extend({\r\n    menuClass: \"menu-item-open\",//The class that gets added to <li> to open menu\r\n    mainMenuLabel: \"Main\",//Aria-label on <nav>\r\n    topMenuRole: \"menubar\",//Aria-role on <ul class=\"fsNavLevel1\">\r\n    listItemsRole: 'menuitem',//Aria-role on <a>\r\n    subNavRole: 'menu',//Aria-role on <ul class=\"fsNavLevel[1n +2]\">\r\n    firstTab: 'level2'//Tab to level 2 menu or page desc. Options: \"level2\" or \"pagedesc\"\r\n  }, options);\r\n\r\n  var _self = $(this);\r\n  var dropdownWrapper = '.fsNavPageInfo';\r\n  var fsNavLevel1 = '.fsNavLevel1';\r\n  var subLevels = 'ul[class^=\"fsNavLevel\"]';\r\n  var pageDesc = '.fsNavPageDescription';\r\n  var top_level_links = _self.find('> li > a');\r\n\r\n  // If the element is not found, don't run the plugin\r\n  if(!_self.length) {\r\n    return;\r\n  }\r\n\r\n  // Add ARIA attributes to the apporpriate elements based on settings\r\n  if(!$(this).parent()[0].hasAttribute(\"aria-label\")) {\r\n    $(this).parent().attr('aria-label',settings.mainMenuLabel);\r\n  }\r\n  $(this)\r\n    .attr('role', settings.topMenuRole)\r\n    .find('a')\r\n    .attr('role', settings.listItemsRole);\r\n  $(this)\r\n    .find(subLevels)\r\n    .attr('role', settings.subNavRole);\r\n\r\n  //Set all links in the dropdown to -1 tabindex to not worry\r\n  $(this)\r\n    .find(dropdownWrapper)\r\n    .find('a').attr('tabIndex',-1);\r\n  \r\n  // Adding aria roles for the dropdowns / level1 <li>\r\n  $(top_level_links).each(function(){\r\n    if($(this).next(dropdownWrapper).length > 0) {\r\n      $(this).parent('li')\r\n        .attr('aria-haspopup', 'true')\r\n        .find(dropdownWrapper)\r\n        .attr('aria-hidden','true');\r\n    }\r\n  });\r\n  \r\n  $(top_level_links).unbind();\r\n  $(top_level_links).bind(\"focus mouseenter mouseleave keydown\",function(){\r\n    var allAnchors = new Array();\r\n    $(this)\r\n      .parents(fsNavLevel1)\r\n      .find('> li > a').removeAttr('tabindex');\r\n    $(this)\r\n      .parents(fsNavLevel1)\r\n      .find('.'+settings.menuClass)\r\n      .removeClass(settings.menuClass)\r\n      .find(dropdownWrapper) \r\n      .attr('aria-hidden', 'true')\r\n      .find('a').attr('tabindex',-1);\r\n    $(this)\r\n      .next(dropdownWrapper)\r\n      .attr('aria-hidden', 'false')\r\n      .parent(\"li\")\r\n      .addClass(settings.menuClass);\r\n\r\n    //Start populating anchor array\r\n    allAnchors.push($(this)[0]);\r\n    if(settings.firstTab  == 'level2') {\r\n      if($(this).next(dropdownWrapper).find(subLevels).find(\"a\").length) {\r\n        for(var i=0;i<$(this).next(dropdownWrapper).find(subLevels).find(\"a\").length;i++) {\r\n          allAnchors.push(\r\n            $(this)\r\n              .next(dropdownWrapper)\r\n              .find(subLevels)\r\n              .find(\"a\")[i]\r\n          );\r\n        }\r\n      }\r\n      if($(this).next(dropdownWrapper).find(pageDesc).find(\"a\").length) {\r\n        for(var j=0;j<$(this).next(dropdownWrapper).find(pageDesc).find(\"a\").length;j++) {\r\n          allAnchors.push(\r\n            $(this)\r\n              .next(dropdownWrapper)\r\n              .find(pageDesc)\r\n              .find(\"a\")[j]\r\n          );\r\n        }\r\n      }\r\n    } else if(settings.firstTab == 'pagedesc') {\r\n      if($(this).next(dropdownWrapper).find(pageDesc).find(\"a\").length) {\r\n        for(var k=0;k<$(this).next(dropdownWrapper).find(pageDesc).find(\"a\").length;k++) {\r\n          allAnchors.push(\r\n            $(this)\r\n              .next(dropdownWrapper)\r\n              .find(pageDesc)\r\n              .find(\"a\")[k]\r\n          );\r\n        }\r\n      }\r\n      if($(this).next(dropdownWrapper).find(subLevels).find(\"a\").length) {\r\n        for(var l=0;l<$(this).next(dropdownWrapper).find(subLevels).find(\"a\").length;l++) {\r\n          allAnchors.push(\r\n            $(this)\r\n              .next(dropdownWrapper)\r\n              .find(subLevels)\r\n              .find(\"a\")[l]\r\n          );\r\n        }\r\n      }\r\n    }\r\n    for(var m=0;m<allAnchors.length;m++) {\r\n      allAnchors[m].setAttribute(\"tabindex\",m);\r\n    }\r\n  });\r\n\r\n  $(this).on(\"mouseleave\",function() {\r\n    $(this)\r\n      .find('> li > a').removeAttr('tabindex');\r\n    $(this)\r\n      .find(\".\"+settings.menuClass)\r\n      .removeClass(settings.menuClass)\r\n      .find(dropdownWrapper) \r\n      .attr('aria-hidden', 'true')\r\n      .find('a').attr('tabIndex',-1);\r\n  });\r\n\r\n  // Bind arrow keys for top level navigation\r\n  $(top_level_links).keydown(function(e){\r\n    var totalLinks = $(this).parent('li').find(dropdownWrapper).find('a').length;\r\n    if(e.keyCode == 38) {\r\n      //Up Arrow Key\r\n      e.preventDefault();\r\n      if($(this).parent('li').find(dropdownWrapper).find('a').length) {\r\n        $(this).parent('li')\r\n          .find(dropdownWrapper)\r\n          .find('a[tabindex='+totalLinks+']').focus();\r\n      }\r\n    } else if(e.keyCode == 39) {\r\n      //Right Arrow Key\r\n      e.preventDefault();\r\n      if($(this).parent('li').next('li').length == 0) {\r\n        $(this).parents(fsNavLevel1).find('> li').first().find('a').first().focus();\r\n      } else {\r\n        $(this).parent('li').next('li').find('a').first().focus();\r\n      }\r\n    } else if(e.keyCode == 40) {\r\n      //Down Arrow Key\r\n      if($(this).parent('li').find(dropdownWrapper).find('a').length) {\r\n        e.preventDefault();\r\n        $(this).parent('li')\r\n          .addClass(settings.menuClass)\r\n          .find(dropdownWrapper)\r\n          .attr('aria-hidden', 'false');\r\n        $(this)\r\n          .parent('li')\r\n          .find('a[tabindex=1]').focus();\r\n      }\r\n    } else if(e.keyCode == 37) {\r\n      //Left Arrow Key\r\n      e.preventDefault();\r\n      if($(this).parent('li').prev('li').length == 0) {\r\n        $(this).parents(fsNavLevel1).find('> li').last().find('a').first().focus();\r\n      } else {\r\n        $(this).parent('li').prev('li').find('a').first().focus();\r\n      }\r\n    } else if(e.keyCode == 9) {\r\n      //Tab Key\r\n      if(e.shiftKey) {\r\n        if($(this).parent('li').prev('li').length == 0) {\r\n          $(this)\r\n              .parents(fsNavLevel1)\r\n              .find('> li > a').removeAttr('tabindex');\r\n            $('.'+settings.menuClass)\r\n              .removeClass(settings.menuClass)\r\n              .find(dropdownWrapper)\r\n              .attr('aria-hidden', 'true')\r\n              .find('a').attr('tabIndex',-1);\r\n        } else {\r\n          if($(this).parent('li').prev('li').length) {\r\n            e.preventDefault();\r\n            var prevLinkLength = $(this).parent('li').prev('li').find(dropdownWrapper).find('a').length;\r\n            $(this)\r\n              .parents(fsNavLevel1)\r\n              .find('> li > a').removeAttr('tabindex');\r\n            $('.'+settings.menuClass)\r\n              .removeClass(settings.menuClass)\r\n              .find(dropdownWrapper)\r\n              .attr('aria-hidden', 'true')\r\n              .find('a').attr('tabIndex',-1);\r\n            $(this)\r\n              .parent('li')\r\n              .prev('li')\r\n              .addClass(settings.menuClass)\r\n              .find(dropdownWrapper)\r\n              .attr('aria-hidden', 'false');\r\n            $(this).parent('li').prev('li').find(\">a\").focus()\r\n              .parent().find(dropdownWrapper).find('a[tabindex='+prevLinkLength+']').focus();\r\n          } else {\r\n            $(this)\r\n              .parents(fsNavLevel1)\r\n              .find('> li > a').removeAttr('tabindex');\r\n            $('.'+settings.menuClass)\r\n              .removeClass(settings.menuClass)\r\n              .find(dropdownWrapper)\r\n              .attr('aria-hidden', 'true')\r\n              .find('a').attr('tabIndex',-1);\r\n          }\r\n        }\r\n      } else {\r\n        if($(this).parent('li').find(dropdownWrapper).find('a').length) {\r\n          e.preventDefault();\r\n          $(this).parent('li')\r\n            .addClass(settings.menuClass)\r\n            .find(dropdownWrapper)\r\n            .attr('aria-hidden', 'false');\r\n          $(this)\r\n            .parent('li')\r\n            .find('a[tabindex=1]').focus();\r\n        }\r\n      }\r\n    } else if(e.keyCode == 32) {\r\n      //Space Bar Key\r\n      e.preventDefault();\r\n      window.location = $(this).attr('href');\r\n    } else if(e.keyCode == 27) {\r\n      //Escape Key\r\n      e.preventDefault();\r\n      $('.'+settings.menuClass)\r\n        .removeClass(settings.menuClass)\r\n        .find('> a')\r\n        .removeAttr('tabindex')\r\n        .parent('li')\r\n        .find(dropdownWrapper)\r\n        .attr('aria-hidden', 'true')\r\n        .find('a').attr('tabIndex',-1);\r\n    } else {\r\n      //Any other key not listed\r\n      $(this).parent('li').find(dropdownWrapper+'[aria-hidden=false] a').each(function(){\r\n        if($(this).text().substring(0,1).toLowerCase() == keyCodeMap[e.keyCode]) {\r\n          $(this).focus();\r\n          return false;\r\n        }\r\n      });\r\n    }\r\n  });\r\n  \r\n  var subNavLinks = $(this).find(dropdownWrapper).find('a');\r\n\r\n  $(subNavLinks).unbind();\r\n  $(subNavLinks).bind(\"focus mouseenter mouseleave keydown\",function(){\r\n    $(this)\r\n      .parent().parent()\r\n      .find('.'+settings.menuClass)\r\n      .removeClass(settings.menuClass)\r\n      .find(dropdownWrapper)\r\n      .attr('aria-hidden', 'true');\r\n    $(this)\r\n      .next(dropdownWrapper)\r\n      .attr('aria-hidden', 'false')\r\n      .parentsUntil(fsNavLevel1, \"li\")\r\n      .addClass(settings.menuClass);\r\n  });\r\n  \r\n  $(subNavLinks).keydown(function(e){\r\n    var totalLinks = $(this).parents(dropdownWrapper).find('a').length;\r\n    var currentIndex =  parseInt($(this).attr(\"tabindex\"));\r\n    if(e.keyCode == 38) {\r\n      //Up Arrow Key\r\n      e.preventDefault();\r\n      if(currentIndex == 1) {\r\n        $(this).parents(dropdownWrapper).parent('li').find('a').first().focus();\r\n      } else {\r\n        $(this).parents(dropdownWrapper).find('a[tabindex=' + (currentIndex - 1) + ']')\r\n          .parentsUntil(fsNavLevel1, \"li\")\r\n          .addClass(settings.menuClass)\r\n          .find('a[tabindex=' + (currentIndex - 1) + ']').focus();\r\n      }\r\n    } else if(e.keyCode == 39) {\r\n      //Right Arrow Key\r\n      e.preventDefault();\r\n      if($(this).parents(fsNavLevel1).find(\"a[tabindex='0']\").parent('li').next('li').length == 0) {\r\n        $(this).parents(fsNavLevel1).find('> li').first().find('a').first().focus();\r\n      } else {\r\n        $(this).parents(fsNavLevel1).find(\"a[tabindex='0']\").parent('li').next('li').find('a').first().focus();\r\n      }\r\n    } else if(e.keyCode == 40) {\r\n      //Down Arrow Key\r\n      e.preventDefault();\r\n      if(currentIndex == totalLinks) {\r\n        $(this).parents(dropdownWrapper).parent('li').find('a').first().focus();\r\n      } else {\r\n        $(this).parents(dropdownWrapper).find('a[tabindex=' + (currentIndex + 1) + ']').focus();\r\n      }\r\n    } else if(e.keyCode == 27 || e.keyCode == 37) {\r\n      //Left Arrow Key or Escape Key\r\n      e.preventDefault();\r\n      $('.'+settings.menuClass)\r\n        .removeClass(settings.menuClass)\r\n        .find(dropdownWrapper)\r\n        .attr('aria-hidden', 'true')\r\n        .find('a').attr('tabIndex',-1);\r\n      $(this)\r\n        .parentsUntil(fsNavLevel1, \"li\")\r\n        .find('a').first().focus();\r\n    } else if(e.keyCode == 9) {\r\n      //Tab Arrow Key\r\n      if(e.shiftKey) {\r\n        //Tab + Shift\r\n        e.preventDefault();\r\n        if(currentIndex == 1) {\r\n          $(this).parents(dropdownWrapper).parent('li').find('a').first().focus();\r\n        } else {\r\n          $(this).parents(dropdownWrapper).find('a[tabindex=' + (currentIndex - 1) + ']')\r\n            .parentsUntil(fsNavLevel1, \"li\")\r\n            .addClass(settings.menuClass)\r\n            .find('a[tabindex=' + (currentIndex - 1) + ']').focus();\r\n        }\r\n      } else {\r\n        if(currentIndex == totalLinks) {\r\n          if($(this).parents(dropdownWrapper).parent('li').next('li').length) {\r\n            e.preventDefault();\r\n            $(this).parents(dropdownWrapper).parent('li').next('li').find('a').first().focus();\r\n          } else {\r\n            $(this)\r\n              .parents(fsNavLevel1)\r\n              .find('> li > a').removeAttr('tabindex');\r\n            $('.'+settings.menuClass)\r\n              .removeClass(settings.menuClass)\r\n              .find(dropdownWrapper)\r\n              .attr('aria-hidden', 'true')\r\n              .find('a').attr('tabIndex',-1);\r\n          }\r\n        } else {\r\n          e.preventDefault();\r\n          $(this).parents(dropdownWrapper).find('a[tabindex=' + (currentIndex + 1) + ']').focus();\r\n        }\r\n      }\r\n    } else if(e.keyCode == 32) {\r\n      e.preventDefault();\r\n      window.location = $(this).attr('href');\r\n    } else {\r\n      var found = false;\r\n      $(this).parent('li').nextAll('li').find('a').each(function(){\r\n        if($(this).text().substring(0,1).toLowerCase() == keyCodeMap[e.keyCode]) {\r\n          $(this).focus();\r\n          found = true;\r\n          return false;\r\n        }\r\n      });\r\n      if(!found) {\r\n        $(this).parent('li').prevAll('li').find('a').each(function(){\r\n          if($(this).text().substring(0,1).toLowerCase() == keyCodeMap[e.keyCode]) {\r\n            $(this).focus();\r\n            return false;\r\n          }\r\n        });\r\n      }\r\n    }\r\n  });\r\n\r\n  $(document).click(function(){\r\n    $(this)\r\n      .parents(fsNavLevel1)\r\n      .find('> li > a').removeAttr('tabindex');\r\n    $('.'+settings.menuClass)\r\n      .removeClass(settings.menuClass)\r\n      .find(dropdownWrapper)\r\n      .attr('aria-hidden', 'true')\r\n      .find('a').attr('tabIndex',-1);\r\n  });\r\n  \r\n  $(this).click(function(e){\r\n    e.stopPropagation();\r\n  });\r\n}\r\n\n\n//# sourceURL=webpack:///./js/internal/menu-accessibility.js?")},534:function(){eval("/*!\r\nWaypoints - 4.0.1\r\nCopyright Â© 2011-2016 Caleb Troughton\r\nLicensed under the MIT license.\r\nhttps://github.com/imakewebthings/waypoints/blob/master/licenses.txt\r\n*/\r\n(function() {\r\n  'use strict'\r\n\r\n  var keyCounter = 0\r\n  var allWaypoints = {}\r\n\r\n  /* http://imakewebthings.com/waypoints/api/waypoint */\r\n  function Waypoint(options) {\r\n    if (!options) {\r\n      throw new Error('No options passed to Waypoint constructor')\r\n    }\r\n    if (!options.element) {\r\n      throw new Error('No element option passed to Waypoint constructor')\r\n    }\r\n    if (!options.handler) {\r\n      throw new Error('No handler option passed to Waypoint constructor')\r\n    }\r\n\r\n    this.key = 'waypoint-' + keyCounter\r\n    this.options = Waypoint.Adapter.extend({}, Waypoint.defaults, options)\r\n    this.element = this.options.element\r\n    this.adapter = new Waypoint.Adapter(this.element)\r\n    this.callback = options.handler\r\n    this.axis = this.options.horizontal ? 'horizontal' : 'vertical'\r\n    this.enabled = this.options.enabled\r\n    this.triggerPoint = null\r\n    this.group = Waypoint.Group.findOrCreate({\r\n      name: this.options.group,\r\n      axis: this.axis\r\n    })\r\n    this.context = Waypoint.Context.findOrCreateByElement(this.options.context)\r\n\r\n    if (Waypoint.offsetAliases[this.options.offset]) {\r\n      this.options.offset = Waypoint.offsetAliases[this.options.offset]\r\n    }\r\n    this.group.add(this)\r\n    this.context.add(this)\r\n    allWaypoints[this.key] = this\r\n    keyCounter += 1\r\n  }\r\n\r\n  /* Private */\r\n  Waypoint.prototype.queueTrigger = function(direction) {\r\n    this.group.queueTrigger(this, direction)\r\n  }\r\n\r\n  /* Private */\r\n  Waypoint.prototype.trigger = function(args) {\r\n    if (!this.enabled) {\r\n      return\r\n    }\r\n    if (this.callback) {\r\n      this.callback.apply(this, args)\r\n    }\r\n  }\r\n\r\n  /* Public */\r\n  /* http://imakewebthings.com/waypoints/api/destroy */\r\n  Waypoint.prototype.destroy = function() {\r\n    this.context.remove(this)\r\n    this.group.remove(this)\r\n    delete allWaypoints[this.key]\r\n  }\r\n\r\n  /* Public */\r\n  /* http://imakewebthings.com/waypoints/api/disable */\r\n  Waypoint.prototype.disable = function() {\r\n    this.enabled = false\r\n    return this\r\n  }\r\n\r\n  /* Public */\r\n  /* http://imakewebthings.com/waypoints/api/enable */\r\n  Waypoint.prototype.enable = function() {\r\n    this.context.refresh()\r\n    this.enabled = true\r\n    return this\r\n  }\r\n\r\n  /* Public */\r\n  /* http://imakewebthings.com/waypoints/api/next */\r\n  Waypoint.prototype.next = function() {\r\n    return this.group.next(this)\r\n  }\r\n\r\n  /* Public */\r\n  /* http://imakewebthings.com/waypoints/api/previous */\r\n  Waypoint.prototype.previous = function() {\r\n    return this.group.previous(this)\r\n  }\r\n\r\n  /* Private */\r\n  Waypoint.invokeAll = function(method) {\r\n    var allWaypointsArray = []\r\n    for (var waypointKey in allWaypoints) {\r\n      allWaypointsArray.push(allWaypoints[waypointKey])\r\n    }\r\n    for (var i = 0, end = allWaypointsArray.length; i < end; i++) {\r\n      allWaypointsArray[i][method]()\r\n    }\r\n  }\r\n\r\n  /* Public */\r\n  /* http://imakewebthings.com/waypoints/api/destroy-all */\r\n  Waypoint.destroyAll = function() {\r\n    Waypoint.invokeAll('destroy')\r\n  }\r\n\r\n  /* Public */\r\n  /* http://imakewebthings.com/waypoints/api/disable-all */\r\n  Waypoint.disableAll = function() {\r\n    Waypoint.invokeAll('disable')\r\n  }\r\n\r\n  /* Public */\r\n  /* http://imakewebthings.com/waypoints/api/enable-all */\r\n  Waypoint.enableAll = function() {\r\n    Waypoint.Context.refreshAll()\r\n    for (var waypointKey in allWaypoints) {\r\n      allWaypoints[waypointKey].enabled = true\r\n    }\r\n    return this\r\n  }\r\n\r\n  /* Public */\r\n  /* http://imakewebthings.com/waypoints/api/refresh-all */\r\n  Waypoint.refreshAll = function() {\r\n    Waypoint.Context.refreshAll()\r\n  }\r\n\r\n  /* Public */\r\n  /* http://imakewebthings.com/waypoints/api/viewport-height */\r\n  Waypoint.viewportHeight = function() {\r\n    return window.innerHeight || document.documentElement.clientHeight\r\n  }\r\n\r\n  /* Public */\r\n  /* http://imakewebthings.com/waypoints/api/viewport-width */\r\n  Waypoint.viewportWidth = function() {\r\n    return document.documentElement.clientWidth\r\n  }\r\n\r\n  Waypoint.adapters = []\r\n\r\n  Waypoint.defaults = {\r\n    context: window,\r\n    continuous: true,\r\n    enabled: true,\r\n    group: 'default',\r\n    horizontal: false,\r\n    offset: 0\r\n  }\r\n\r\n  Waypoint.offsetAliases = {\r\n    'bottom-in-view': function() {\r\n      return this.context.innerHeight() - this.adapter.outerHeight()\r\n    },\r\n    'right-in-view': function() {\r\n      return this.context.innerWidth() - this.adapter.outerWidth()\r\n    }\r\n  }\r\n\r\n  window.Waypoint = Waypoint\r\n}())\r\n;(function() {\r\n  'use strict'\r\n\r\n  function requestAnimationFrameShim(callback) {\r\n    window.setTimeout(callback, 1000 / 60)\r\n  }\r\n\r\n  var keyCounter = 0\r\n  var contexts = {}\r\n  var Waypoint = window.Waypoint\r\n  var oldWindowLoad = window.onload\r\n\r\n  /* http://imakewebthings.com/waypoints/api/context */\r\n  function Context(element) {\r\n    this.element = element\r\n    this.Adapter = Waypoint.Adapter\r\n    this.adapter = new this.Adapter(element)\r\n    this.key = 'waypoint-context-' + keyCounter\r\n    this.didScroll = false\r\n    this.didResize = false\r\n    this.oldScroll = {\r\n      x: this.adapter.scrollLeft(),\r\n      y: this.adapter.scrollTop()\r\n    }\r\n    this.waypoints = {\r\n      vertical: {},\r\n      horizontal: {}\r\n    }\r\n\r\n    element.waypointContextKey = this.key\r\n    contexts[element.waypointContextKey] = this\r\n    keyCounter += 1\r\n    if (!Waypoint.windowContext) {\r\n      Waypoint.windowContext = true\r\n      Waypoint.windowContext = new Context(window)\r\n    }\r\n\r\n    this.createThrottledScrollHandler()\r\n    this.createThrottledResizeHandler()\r\n  }\r\n\r\n  /* Private */\r\n  Context.prototype.add = function(waypoint) {\r\n    var axis = waypoint.options.horizontal ? 'horizontal' : 'vertical'\r\n    this.waypoints[axis][waypoint.key] = waypoint\r\n    this.refresh()\r\n  }\r\n\r\n  /* Private */\r\n  Context.prototype.checkEmpty = function() {\r\n    var horizontalEmpty = this.Adapter.isEmptyObject(this.waypoints.horizontal)\r\n    var verticalEmpty = this.Adapter.isEmptyObject(this.waypoints.vertical)\r\n    var isWindow = this.element == this.element.window\r\n    if (horizontalEmpty && verticalEmpty && !isWindow) {\r\n      this.adapter.off('.waypoints')\r\n      delete contexts[this.key]\r\n    }\r\n  }\r\n\r\n  /* Private */\r\n  Context.prototype.createThrottledResizeHandler = function() {\r\n    var self = this\r\n\r\n    function resizeHandler() {\r\n      self.handleResize()\r\n      self.didResize = false\r\n    }\r\n\r\n    this.adapter.on('resize.waypoints', function() {\r\n      if (!self.didResize) {\r\n        self.didResize = true\r\n        Waypoint.requestAnimationFrame(resizeHandler)\r\n      }\r\n    })\r\n  }\r\n\r\n  /* Private */\r\n  Context.prototype.createThrottledScrollHandler = function() {\r\n    var self = this\r\n    function scrollHandler() {\r\n      self.handleScroll()\r\n      self.didScroll = false\r\n    }\r\n\r\n    this.adapter.on('scroll.waypoints', function() {\r\n      if (!self.didScroll || Waypoint.isTouch) {\r\n        self.didScroll = true\r\n        Waypoint.requestAnimationFrame(scrollHandler)\r\n      }\r\n    })\r\n  }\r\n\r\n  /* Private */\r\n  Context.prototype.handleResize = function() {\r\n    Waypoint.Context.refreshAll()\r\n  }\r\n\r\n  /* Private */\r\n  Context.prototype.handleScroll = function() {\r\n    var triggeredGroups = {}\r\n    var axes = {\r\n      horizontal: {\r\n        newScroll: this.adapter.scrollLeft(),\r\n        oldScroll: this.oldScroll.x,\r\n        forward: 'right',\r\n        backward: 'left'\r\n      },\r\n      vertical: {\r\n        newScroll: this.adapter.scrollTop(),\r\n        oldScroll: this.oldScroll.y,\r\n        forward: 'down',\r\n        backward: 'up'\r\n      }\r\n    }\r\n\r\n    for (var axisKey in axes) {\r\n      var axis = axes[axisKey]\r\n      var isForward = axis.newScroll > axis.oldScroll\r\n      var direction = isForward ? axis.forward : axis.backward\r\n\r\n      for (var waypointKey in this.waypoints[axisKey]) {\r\n        var waypoint = this.waypoints[axisKey][waypointKey]\r\n        if (waypoint.triggerPoint === null) {\r\n          continue\r\n        }\r\n        var wasBeforeTriggerPoint = axis.oldScroll < waypoint.triggerPoint\r\n        var nowAfterTriggerPoint = axis.newScroll >= waypoint.triggerPoint\r\n        var crossedForward = wasBeforeTriggerPoint && nowAfterTriggerPoint\r\n        var crossedBackward = !wasBeforeTriggerPoint && !nowAfterTriggerPoint\r\n        if (crossedForward || crossedBackward) {\r\n          waypoint.queueTrigger(direction)\r\n          triggeredGroups[waypoint.group.id] = waypoint.group\r\n        }\r\n      }\r\n    }\r\n\r\n    for (var groupKey in triggeredGroups) {\r\n      triggeredGroups[groupKey].flushTriggers()\r\n    }\r\n\r\n    this.oldScroll = {\r\n      x: axes.horizontal.newScroll,\r\n      y: axes.vertical.newScroll\r\n    }\r\n  }\r\n\r\n  /* Private */\r\n  Context.prototype.innerHeight = function() {\r\n    /*eslint-disable eqeqeq */\r\n    if (this.element == this.element.window) {\r\n      return Waypoint.viewportHeight()\r\n    }\r\n    /*eslint-enable eqeqeq */\r\n    return this.adapter.innerHeight()\r\n  }\r\n\r\n  /* Private */\r\n  Context.prototype.remove = function(waypoint) {\r\n    delete this.waypoints[waypoint.axis][waypoint.key]\r\n    this.checkEmpty()\r\n  }\r\n\r\n  /* Private */\r\n  Context.prototype.innerWidth = function() {\r\n    /*eslint-disable eqeqeq */\r\n    if (this.element == this.element.window) {\r\n      return Waypoint.viewportWidth()\r\n    }\r\n    /*eslint-enable eqeqeq */\r\n    return this.adapter.innerWidth()\r\n  }\r\n\r\n  /* Public */\r\n  /* http://imakewebthings.com/waypoints/api/context-destroy */\r\n  Context.prototype.destroy = function() {\r\n    var allWaypoints = []\r\n    for (var axis in this.waypoints) {\r\n      for (var waypointKey in this.waypoints[axis]) {\r\n        allWaypoints.push(this.waypoints[axis][waypointKey])\r\n      }\r\n    }\r\n    for (var i = 0, end = allWaypoints.length; i < end; i++) {\r\n      allWaypoints[i].destroy()\r\n    }\r\n  }\r\n\r\n  /* Public */\r\n  /* http://imakewebthings.com/waypoints/api/context-refresh */\r\n  Context.prototype.refresh = function() {\r\n    /*eslint-disable eqeqeq */\r\n    var isWindow = this.element == this.element.window\r\n    /*eslint-enable eqeqeq */\r\n    var contextOffset = isWindow ? undefined : this.adapter.offset()\r\n    var triggeredGroups = {}\r\n    var axes\r\n\r\n    this.handleScroll()\r\n    axes = {\r\n      horizontal: {\r\n        contextOffset: isWindow ? 0 : contextOffset.left,\r\n        contextScroll: isWindow ? 0 : this.oldScroll.x,\r\n        contextDimension: this.innerWidth(),\r\n        oldScroll: this.oldScroll.x,\r\n        forward: 'right',\r\n        backward: 'left',\r\n        offsetProp: 'left'\r\n      },\r\n      vertical: {\r\n        contextOffset: isWindow ? 0 : contextOffset.top,\r\n        contextScroll: isWindow ? 0 : this.oldScroll.y,\r\n        contextDimension: this.innerHeight(),\r\n        oldScroll: this.oldScroll.y,\r\n        forward: 'down',\r\n        backward: 'up',\r\n        offsetProp: 'top'\r\n      }\r\n    }\r\n\r\n    for (var axisKey in axes) {\r\n      var axis = axes[axisKey]\r\n      for (var waypointKey in this.waypoints[axisKey]) {\r\n        var waypoint = this.waypoints[axisKey][waypointKey]\r\n        var adjustment = waypoint.options.offset\r\n        var oldTriggerPoint = waypoint.triggerPoint\r\n        var elementOffset = 0\r\n        var freshWaypoint = oldTriggerPoint == null\r\n        var contextModifier, wasBeforeScroll, nowAfterScroll\r\n        var triggeredBackward, triggeredForward\r\n\r\n        if (waypoint.element !== waypoint.element.window) {\r\n          elementOffset = waypoint.adapter.offset()[axis.offsetProp]\r\n        }\r\n\r\n        if (typeof adjustment === 'function') {\r\n          adjustment = adjustment.apply(waypoint)\r\n        }\r\n        else if (typeof adjustment === 'string') {\r\n          adjustment = parseFloat(adjustment)\r\n          if (waypoint.options.offset.indexOf('%') > - 1) {\r\n            adjustment = Math.ceil(axis.contextDimension * adjustment / 100)\r\n          }\r\n        }\r\n\r\n        contextModifier = axis.contextScroll - axis.contextOffset\r\n        waypoint.triggerPoint = Math.floor(elementOffset + contextModifier - adjustment)\r\n        wasBeforeScroll = oldTriggerPoint < axis.oldScroll\r\n        nowAfterScroll = waypoint.triggerPoint >= axis.oldScroll\r\n        triggeredBackward = wasBeforeScroll && nowAfterScroll\r\n        triggeredForward = !wasBeforeScroll && !nowAfterScroll\r\n\r\n        if (!freshWaypoint && triggeredBackward) {\r\n          waypoint.queueTrigger(axis.backward)\r\n          triggeredGroups[waypoint.group.id] = waypoint.group\r\n        }\r\n        else if (!freshWaypoint && triggeredForward) {\r\n          waypoint.queueTrigger(axis.forward)\r\n          triggeredGroups[waypoint.group.id] = waypoint.group\r\n        }\r\n        else if (freshWaypoint && axis.oldScroll >= waypoint.triggerPoint) {\r\n          waypoint.queueTrigger(axis.forward)\r\n          triggeredGroups[waypoint.group.id] = waypoint.group\r\n        }\r\n      }\r\n    }\r\n\r\n    Waypoint.requestAnimationFrame(function() {\r\n      for (var groupKey in triggeredGroups) {\r\n        triggeredGroups[groupKey].flushTriggers()\r\n      }\r\n    })\r\n\r\n    return this\r\n  }\r\n\r\n  /* Private */\r\n  Context.findOrCreateByElement = function(element) {\r\n    return Context.findByElement(element) || new Context(element)\r\n  }\r\n\r\n  /* Private */\r\n  Context.refreshAll = function() {\r\n    for (var contextId in contexts) {\r\n      contexts[contextId].refresh()\r\n    }\r\n  }\r\n\r\n  /* Public */\r\n  /* http://imakewebthings.com/waypoints/api/context-find-by-element */\r\n  Context.findByElement = function(element) {\r\n    return contexts[element.waypointContextKey]\r\n  }\r\n\r\n  window.onload = function() {\r\n    if (oldWindowLoad) {\r\n      oldWindowLoad()\r\n    }\r\n    Context.refreshAll()\r\n  }\r\n\r\n\r\n  Waypoint.requestAnimationFrame = function(callback) {\r\n    var requestFn = window.requestAnimationFrame ||\r\n      window.mozRequestAnimationFrame ||\r\n      window.webkitRequestAnimationFrame ||\r\n      requestAnimationFrameShim\r\n    requestFn.call(window, callback)\r\n  }\r\n  Waypoint.Context = Context\r\n}())\r\n;(function() {\r\n  'use strict'\r\n\r\n  function byTriggerPoint(a, b) {\r\n    return a.triggerPoint - b.triggerPoint\r\n  }\r\n\r\n  function byReverseTriggerPoint(a, b) {\r\n    return b.triggerPoint - a.triggerPoint\r\n  }\r\n\r\n  var groups = {\r\n    vertical: {},\r\n    horizontal: {}\r\n  }\r\n  var Waypoint = window.Waypoint\r\n\r\n  /* http://imakewebthings.com/waypoints/api/group */\r\n  function Group(options) {\r\n    this.name = options.name\r\n    this.axis = options.axis\r\n    this.id = this.name + '-' + this.axis\r\n    this.waypoints = []\r\n    this.clearTriggerQueues()\r\n    groups[this.axis][this.name] = this\r\n  }\r\n\r\n  /* Private */\r\n  Group.prototype.add = function(waypoint) {\r\n    this.waypoints.push(waypoint)\r\n  }\r\n\r\n  /* Private */\r\n  Group.prototype.clearTriggerQueues = function() {\r\n    this.triggerQueues = {\r\n      up: [],\r\n      down: [],\r\n      left: [],\r\n      right: []\r\n    }\r\n  }\r\n\r\n  /* Private */\r\n  Group.prototype.flushTriggers = function() {\r\n    for (var direction in this.triggerQueues) {\r\n      var waypoints = this.triggerQueues[direction]\r\n      var reverse = direction === 'up' || direction === 'left'\r\n      waypoints.sort(reverse ? byReverseTriggerPoint : byTriggerPoint)\r\n      for (var i = 0, end = waypoints.length; i < end; i += 1) {\r\n        var waypoint = waypoints[i]\r\n        if (waypoint.options.continuous || i === waypoints.length - 1) {\r\n          waypoint.trigger([direction])\r\n        }\r\n      }\r\n    }\r\n    this.clearTriggerQueues()\r\n  }\r\n\r\n  /* Private */\r\n  Group.prototype.next = function(waypoint) {\r\n    this.waypoints.sort(byTriggerPoint)\r\n    var index = Waypoint.Adapter.inArray(waypoint, this.waypoints)\r\n    var isLast = index === this.waypoints.length - 1\r\n    return isLast ? null : this.waypoints[index + 1]\r\n  }\r\n\r\n  /* Private */\r\n  Group.prototype.previous = function(waypoint) {\r\n    this.waypoints.sort(byTriggerPoint)\r\n    var index = Waypoint.Adapter.inArray(waypoint, this.waypoints)\r\n    return index ? this.waypoints[index - 1] : null\r\n  }\r\n\r\n  /* Private */\r\n  Group.prototype.queueTrigger = function(waypoint, direction) {\r\n    this.triggerQueues[direction].push(waypoint)\r\n  }\r\n\r\n  /* Private */\r\n  Group.prototype.remove = function(waypoint) {\r\n    var index = Waypoint.Adapter.inArray(waypoint, this.waypoints)\r\n    if (index > -1) {\r\n      this.waypoints.splice(index, 1)\r\n    }\r\n  }\r\n\r\n  /* Public */\r\n  /* http://imakewebthings.com/waypoints/api/first */\r\n  Group.prototype.first = function() {\r\n    return this.waypoints[0]\r\n  }\r\n\r\n  /* Public */\r\n  /* http://imakewebthings.com/waypoints/api/last */\r\n  Group.prototype.last = function() {\r\n    return this.waypoints[this.waypoints.length - 1]\r\n  }\r\n\r\n  /* Private */\r\n  Group.findOrCreate = function(options) {\r\n    return groups[options.axis][options.name] || new Group(options)\r\n  }\r\n\r\n  Waypoint.Group = Group\r\n}())\r\n;(function() {\r\n  'use strict'\r\n\r\n  var $ = window.jQuery\r\n  var Waypoint = window.Waypoint\r\n\r\n  function JQueryAdapter(element) {\r\n    this.$element = $(element)\r\n  }\r\n\r\n  $.each([\r\n    'innerHeight',\r\n    'innerWidth',\r\n    'off',\r\n    'offset',\r\n    'on',\r\n    'outerHeight',\r\n    'outerWidth',\r\n    'scrollLeft',\r\n    'scrollTop'\r\n  ], function(i, method) {\r\n    JQueryAdapter.prototype[method] = function() {\r\n      var args = Array.prototype.slice.call(arguments)\r\n      return this.$element[method].apply(this.$element, args)\r\n    }\r\n  })\r\n\r\n  $.each([\r\n    'extend',\r\n    'inArray',\r\n    'isEmptyObject'\r\n  ], function(i, method) {\r\n    JQueryAdapter[method] = $[method]\r\n  })\r\n\r\n  Waypoint.adapters.push({\r\n    name: 'jquery',\r\n    Adapter: JQueryAdapter\r\n  })\r\n  Waypoint.Adapter = JQueryAdapter\r\n}())\r\n;(function() {\r\n  'use strict'\r\n\r\n  var Waypoint = window.Waypoint\r\n\r\n  function createExtension(framework) {\r\n    return function() {\r\n      var waypoints = []\r\n      var overrides = arguments[0]\r\n\r\n      if (framework.isFunction(arguments[0])) {\r\n        overrides = framework.extend({}, arguments[1])\r\n        overrides.handler = arguments[0]\r\n      }\r\n\r\n      this.each(function() {\r\n        var options = framework.extend({}, overrides, {\r\n          element: this\r\n        })\r\n        if (typeof options.context === 'string') {\r\n          options.context = framework(this).closest(options.context)[0]\r\n        }\r\n        waypoints.push(new Waypoint(options))\r\n      })\r\n\r\n      return waypoints\r\n    }\r\n  }\r\n\r\n  if (window.jQuery) {\r\n    window.jQuery.fn.waypoint = createExtension(window.jQuery)\r\n  }\r\n  if (window.Zepto) {\r\n    window.Zepto.fn.waypoint = createExtension(window.Zepto)\r\n  }\r\n}())\r\n;\n\n//# sourceURL=webpack:///./js/vendor/jquery.waypoints.js?")},536:function(){eval("//list each component you need to pull in\r\n\r\n// require('./bpa-folder/index.js');\n\n//# sourceURL=webpack:///./components/components.js?")},595:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack:///./sass/main.scss?")},644:function(){eval('// ================================\r\n// ColumnsJS\r\n// Documentation: https://github.com/Foxareld/columnsJS\r\n// ================================\r\n;(function($){\r\n  "use strict";\r\n\r\n  function Columns(element, options) {\r\n    var _ = this;\r\n\r\n    _.wrapper,\r\n    _.numOfCol, //number of columns\r\n    _.menuTag, //list tag for new element creation\r\n    _.newCol,\r\n    _.itemsPerColumn,\r\n    _.element = $(element);\r\n\r\n    _.defaults = {\r\n      columns: 2, //number of columns\r\n      breakAt: 0, //create columns if more than \'breakAt\' number of items\r\n      itemsInColumn: false, //if true, \'columns\' becomes number of items in each column\r\n      addWrapper: false,\r\n      wrapper: "<div class=\'col-wrap\' />"\r\n    };\r\n\r\n    _.settings = $.extend({}, _.defaults, options);\r\n\r\n    _.init();\r\n  }\r\n\r\n  Columns.prototype = {\r\n    init: function() {\r\n      var _ = this;\r\n\r\n      _.items = _.element.children(),\r\n      _.classList = _.element.attr("class") ? _.element.attr("class") : "",\r\n      _.elementTag = _.element.prop("tagName").toLowerCase()\r\n      ;\r\n\r\n      //don\'t create columns if # of items is less than breakAt\r\n      if(_.items.length < _.settings.breakAt) {\r\n        return;\r\n      }\r\n      else {\r\n        _.columnPrep();\r\n        _.createColumns();\r\n        _.distributeItems();\r\n      }\r\n    },\r\n\r\n    columnPrep: function() {\r\n      var _ = this;\r\n\r\n      _.element.addClass("menu-col column-1");\r\n\r\n      //create wrapper, insert it, add element\r\n      if(_.settings.addWrapper) {\r\n        _.wrapper = $(_.settings.wrapper);\r\n        _.wrapper.insertBefore(_.element);\r\n        _.element.appendTo(_.wrapper);\r\n      }\r\n\r\n      //how many items per column\r\n      if(_.settings.itemsInColumn) {\r\n        _.itemsPerColumn = _.settings.columns;\r\n      }\r\n      else {\r\n        _.itemsPerColumn = Math.ceil(_.items.length/_.settings.columns);\r\n      }\r\n\r\n      //number of columns to create\r\n      _.numOfCol = Math.ceil(_.items.length/_.itemsPerColumn);\r\n    },\r\n\r\n    createColumns: function() {\r\n      var _ = this;\r\n\r\n      for(var x = _.numOfCol; x > 1; x--) {\r\n        _.newCol = $("<" + _.elementTag +">", {\r\n           "class": _.classList + " menu-col column-" + x\r\n        });\r\n\r\n\r\n        _.newCol.insertAfter(_.element);\r\n      }\r\n    },\r\n\r\n    distributeItems: function() {\r\n      var _ = this,\r\n      inc = 1,\r\n      curr,\r\n      rem\r\n      ;\r\n\r\n      $.each(_.items, function(i) {\r\n        if((i+1) > _.itemsPerColumn) { //start on item for 2nd column, i.e. item 6 on a 3 column list with 5 items per column\r\n\r\n          rem = (i+1) % _.itemsPerColumn;\r\n\r\n          //loop through items, when remainder is 1 move to next column, i.e. move to 3rd column on item 11 of a 3 column list with 5 items per column\r\n          //special condition if there\'s only 1 column per item, in which case the remainder will always be 0\r\n          if(rem == 1 || (_.itemsPerColumn == 1 && rem == 0)) {\r\n            inc++;\r\n\r\n            if(_.settings.addWrapper) {\r\n              curr = _.wrapper.find(".column-"+inc);\r\n            }\r\n            else {\r\n              curr = _.element.siblings(".column-"+inc);\r\n            }\r\n          }\r\n\r\n          $(this).appendTo(curr);\r\n        }\r\n\r\n      });\r\n    }\r\n  };\r\n\r\n  $.fn.columns = function(options) {\r\n    this.each(function() {\r\n      new Columns(this, options);\r\n    });\r\n  }\r\n\r\n}(jQuery));\r\n\n\n//# sourceURL=webpack:///./js/internal/columns.js?')}},__webpack_module_cache__={};function __webpack_require__(t){var n=__webpack_module_cache__[t];if(void 0!==n)return n.exports;var e=__webpack_module_cache__[t]={exports:{}};return __webpack_modules__[t](e,e.exports,__webpack_require__),e.exports}__webpack_require__.d=function(t,n){for(var e in n)__webpack_require__.o(n,e)&&!__webpack_require__.o(t,e)&&Object.defineProperty(t,e,{enumerable:!0,get:n[e]})},__webpack_require__.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},__webpack_require__.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})};var __webpack_exports__=__webpack_require__(417)}();